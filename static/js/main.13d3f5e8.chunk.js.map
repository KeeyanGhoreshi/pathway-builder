{"version":3,"sources":["components/Node/Node.module.scss","components/MissingDataPopup/MissingDataPopup.module.scss","components/ExpandedNode/ExpandedNode.module.scss","utils/ConfigManager.js","components/Header/Header.module.scss","components/elements/Loading/Loading.module.scss","components/Arrow/Arrow.module.scss","components/Builder/Builder.module.scss","camino-logo-dark.png","components/PathwayPopup/PathwayPopup.module.scss","components/Graph/Graph.module.scss","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","components/PathwaysService/PathwaysService.tsx","components/PathwayProvider.tsx","components/elements/Loading/Loading.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwaysTable.tsx","utils/builder.ts","components/PathwaysList/NewPathwayModal.tsx","components/PathwaysList/PathwaysList.tsx","components/Navigation/styles.tsx","components/Navigation/Navigation.tsx","components/Sidebar/styles.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarHeader.tsx","components/Sidebar/SidebarButton.tsx","components/elements/DropDown/DropDown.tsx","components/Sidebar/BranchNode.tsx","components/Sidebar/ActionNode.tsx","components/Sidebar/NullNode.tsx","components/Sidebar/BranchTransition.tsx","visualization/layout.ts","components/PathwayPopup/PathwayPopup.tsx","components/ActionButton/ActionButton.tsx","components/MissingDataPopup/MissingDataPopup.tsx","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/Arrow.tsx","components/Graph/Graph.tsx","components/Builder/Builder.tsx","components/BuilderRoute.tsx","components/UserProvider.tsx","components/App.tsx","index.js","components/ActionButton/ActionButton.module.scss"],"names":["module","exports","config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","variables","spacing","globalPadding","colors","white","black","blue","red","gray","grayMedium","grayBlue","grayLighter","grayDark","green","typography","fontFamily","join","materialUiOverridesBase","MuiButton","root","borderRadius","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","backgroundColor","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","MuiInputBase","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","MuiDialogContent","MuiDialogActions","materialUiOverridesDark","borderColor","color","notchedOutline","MuiMenuItem","paletteBase","primary","main","secondary","error","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","createContext","ThemeProvider","memo","children","useState","setUseProjector","muiTheme","toggleTheme","useCallback","currentUseProjector","Provider","anchorEl","setAnchorEl","useContext","openMenu","event","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","src","logo","alt","onClick","aria-controls","aria-haspopup","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","useGetPathwaysService","url","status","result","setResult","useEffect","fetch","headers","Accept","getPathways","then","response","json","listOfFiles","map","f","options","typedFetch","listOfPromises","Promise","all","pathwaysList","payload","catch","PathwayContext","PathwayProvider","pathways","setPathways","service","get","servicePayload","addPathway","pathway","currentPathways","deletePathway","updatePathwayAtIndex","index","slice","usePathwayContext","faSpinner","size","spin","makeStyles","display","flexDirection","createPathwayButton","alignSelf","pathwayList","marginTop","editButton","marginRight","dialogCloseButton","float","width","useStyles","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","key","component","scope","align","Button","startIcon","faEdit","Link","encodeURIComponent","faTrashAlt","createState","shortid","generate","transitions","nodeTypeIsUndefined","addState","state","states","setStateNodeType","stateKey","nodeType","makeStateGuidance","undefined","cql","action","makeStateBranch","addTransition","startStateKey","endStateKey","transition","criteriaSource","mcodeCriteria","otherCriteria","history","useHistory","pathwayNameRef","useRef","pathwayDescRef","closeModal","pathwayId","push","handleCreateNewPathway","preventDefault","current","description","library","criteria","Start","createNewPathway","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","disableTypography","IconButton","faTimes","onSubmit","DialogContent","TextField","variant","autoFocus","required","inputRef","DialogActions","faPlus","type","setOpen","openNewPathwayModal","closeNewPathwayModal","alignItems","height","backButton","backIcon","cursor","pathwayName","marginLeft","Navigation","handleGoBack","faChevronLeft","minWidth","overflowY","formControl","divider","sidebarHeader","justifyContent","sidebarHeaderGroup","sidebarHeaderButton","headerLabelGroup","headerLabel","headerLabelText","marginBottom","editIcon","sidebarButtonGroup","sidebarButton","sidebarButtonText","toggleSidebar","updatePathway","headerElement","currentNode","isExpanded","setIsExpanded","sidebarContainerElement","currentNodeKey","changeNodeType","redirectToNode","nodeKey","location","pathname","addNode","newState","newPathway","style","window","innerHeight","clientHeight","getNodeType","ref","isTransition","faChevronRight","showInput","setShowInput","currentNodeLabel","goToParentNode","goToNode","openNodeOptions","changeNodeLabel","setStateLabel","handleShowInput","handleKeyPress","FormControl","Input","onBlur","onKeyPress","clsx","faEllipsisH","buttonName","buttonIcon","buttonText","onChange","handleSetSelected","InputLabel","htmlFor","Select","MenuProps","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","displayEmpty","option","nodeTypeOptions","criteriaSourceOptions","mCodeCriteriaOptions","otherCriteriaOptions","selectNodeType","target","selectCriteriaSource","setStateCriteriaSource","selectMcodeCriteria","setStateMcodeCriteria","selectOtherCriteria","setStateOtherCriteria","handleAddTransition","canAddTransition","changeNodeTypeEnabled","displayAddButtons","length","transitionKey","transitionNode","faTools","graphLayoutProvider","layout","nodeDimensions","nodeNames","Object","keys","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","forEach","stateName","nodeDimension","setNode","condition","setEdge","nodeCoordinates","startNodeShift","node","x","nodeName","y","edges","e","edge","edgeName","v","w","start","end","points","p","layoutDagre","nodes","rank","NaN","horizontalPosition","parents","canMove","includes","initializeNodes","graph","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","NODE_HEIGHT","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","NODE_WIDTH","parentsOnHigherRank","filter","parentName","parent","floor","c","splice","childNode","spreadChildrenEvenly","sum","reduce","a","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","PathwayPopup","Content","Trigger","popupPosition","Popup","content","position","pathwayPopup","on","onOpen","pinned","trigger","LargeActionButton","largeActionButton","largeDecline","toUpperCase","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","MediumActionButton","mediumActionButton","ActionButton","PopupContent","values","showCheck","setShowCheck","selected","setSelected","popupContent","popupChoice","footer","MissingDataPopup","missingDataPopup","popupTrigger","externalLink","isGuidanceState","ExpandedNode","pathwayState","isGuidance","isActionable","ExpandedNodeMemo","ExpandedNodeField","title","descTitle","desc","guidance","resource","coding","medicationCodeableConcept","code","resourceType","system","href","rel","faExternalLinkAlt","renderGuidance","branch","returnElements","arr","renderBranch","infoTable","Node","forwardRef","isCurrentNode","xCoordinate","yCoordinate","expanded","onClickHandler","top","left","topLevelClasses","expandedNodeClass","actionable","childActionable","childNotActionable","expandedNode","NodeIcon","faMicroscope","faPlay","guidancePathwayState","faPrescriptionBottleAlt","faCapsules","faSyringe","StatusIcon","faCheckCircle","faTimesCircle","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","d","fill","markerEnd","Arrow","arrow","edgeNameNoWhitespace","replace","arrowhead","markerWidth","markerHeight","refX","refY","orient","interactive","graphElement","expandCurrentNode","nodeRefs","parentElement","clientWidth","parentWidth","setParentWidth","getGraphLayout","nodeElement","Array","from","graphLayout","setLayout","maxHeight","useMemo","max","minX","min","toAdd","curr","lastSelectedNode","setExpanded","toggleExpanded","prevState","ResizeSensor","l","GraphMemo","useParams","nodeId","xmlns","zIndex","overflow","graphContainerElement","useTheme","decodeURIComponent","pathwayIndex","findIndex","UserContext","UserProvider","user","setUser","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13d3f5e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"actionable\":\"Node_actionable__bHXKd\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childNotActionable\":\"Node_childNotActionable__1bfBq\",\"childActionable\":\"Node_childActionable__SwUjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missingDataPopup\":\"MissingDataPopup_missingDataPopup__A-EBJ\",\"popupContent\":\"MissingDataPopup_popupContent__24BvC\",\"popupTrigger\":\"MissingDataPopup_popupTrigger__11eAy\",\"popupChoice\":\"MissingDataPopup_popupChoice__5oEld\",\"selected\":\"MissingDataPopup_selected__20Or7\",\"footer\":\"MissingDataPopup_footer__1wJXm\",\"externalLink\":\"MissingDataPopup_externalLink__3oYt-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3TM91\",\"arrowhead\":\"Arrow_arrowhead__3XjQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Builder_display__23HzN\",\"graph\":\"Builder_graph__lF-uJ\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathwayPopup\":\"PathwayPopup_pathwayPopup__2moYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  blue: '#5d89a1',\n  red: '#d95d77',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily: [\n    'Open Sans',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'Roboto',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    'Fira Sans',\n    'Droid Sans',\n    'Helvetica Neue',\n    'sans-serif'\n  ].join(',')\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic'\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600,\n      '&:hover': {}\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      padding: '1em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      padding: '0 4em'\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      padding: '2em 4em'\n    }\n  }\n};\n\nconst materialUiOverridesDark = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  },\n  MuiMenuItem: {\n    root: {\n      color: colors.grayDark\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLighter\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: '#4a4a4a'\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    text: {\n      primary: colors.white,\n      secondary: colors.white\n    }\n  }),\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" className={styles.homeLink}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Pathway[]>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetPathwaysService from './PathwaysService';\n\ninterface PathwayContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  deletePathway: (pathway: Pathway) => void;\n  updatePathwayAtIndex: (pathway: Pathway, index: number) => void;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({} as PathwayContextInterface);\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwayProvider: FC<PathwayProviderProps> = memo(({ children }) => {\n  const [pathways, setPathways] = useState<Pathway[]>([]);\n  const service = useGetPathwaysService(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n\n  const addPathway = useCallback((pathway: Pathway) => {\n    setPathways(currentPathways => [...currentPathways, pathway]);\n  }, []);\n\n  const deletePathway = useCallback((pathway: Pathway) => {\n    // TODO\n  }, []);\n\n  const updatePathwayAtIndex = useCallback((pathway: Pathway, index: number) => {\n    setPathways(currentPathways => [\n      ...currentPathways.slice(0, index),\n      pathway,\n      ...currentPathways.slice(index + 1)\n    ]);\n  }, []);\n\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwayContext.Provider\n          value={{\n            pathways,\n            addPathway,\n            deletePathway,\n            updatePathwayAtIndex,\n            status: service.status\n          }}\n        >\n          {children}\n        </PathwayContext.Provider>\n      );\n  }\n});\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end'\n    },\n    pathwayList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    }\n  }),\n  { name: 'PathwaysList' }\n);\n","import React, { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nimport useStyles from './styles';\n\nconst PathwaysTable: FC = () => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwayContext();\n\n  return (\n    <TableContainer className={styles.pathwayList}>\n      <Table aria-label=\"pathway list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Pathway Name</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell>Last Updated</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {pathways.map(pathway => (\n            <TableRow key={pathway.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {pathway.name}\n              </TableCell>\n\n              <TableCell>draft</TableCell>\n              <TableCell>2 days ago</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                  component={Link}\n                  to={`/builder/${encodeURIComponent(pathway.id)}`}\n                >\n                  Edit\n                </Button>\n\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                  onClick={(): void => deletePathway(pathway)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import { Pathway, Criteria, State, GuidanceState, Transition, Action } from 'pathways-model';\nimport shortid from 'shortid';\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\n\nexport function createNewPathway(name: string, description?: string, pathwayId?: string): Pathway {\n  return {\n    id: pathwayId ?? shortid.generate(),\n    name: name,\n    description: description ?? '',\n    library: '',\n    criteria: [],\n    states: {\n      Start: {\n        key: 'Start',\n        label: 'Start',\n        transitions: []\n      }\n    }\n  };\n}\n\nexport function exportPathway(pathway: Pathway): string {\n  const pathwayToExport: Pathway = {\n    ...pathway,\n    // Strip id from each criteria\n    criteria: pathway.criteria.map((criteria: Criteria) => ({ ...criteria, id: undefined })),\n    states: { ...pathway.states }\n  };\n\n  Object.keys(pathwayToExport.states).forEach((stateName: string) => {\n    pathwayToExport.states[stateName] = {\n      ...pathwayToExport.states[stateName],\n      // Strip key from each state\n      key: undefined,\n      criteriaSource: undefined,\n      mcodeCriteria: undefined,\n      otherCriteria: undefined,\n      // Strip id from each state.transition\n      transitions: pathway.states[stateName].transitions.map((transition: Transition) => ({\n        ...transition,\n        id: undefined\n      })),\n      // Strip id from each state.action\n      action:\n        (pathway.states[stateName] as GuidanceState).action == null\n          ? undefined\n          : (pathway.states[stateName] as GuidanceState).action.map((action: Action) => ({\n              ...action,\n              id: undefined\n            }))\n    };\n  });\n\n  return JSON.stringify(pathwayToExport, undefined, 2);\n}\n\n// TODO: possibly add more criteria methods\nexport function addCriteria(\n  pathway: Pathway,\n  elementName: string,\n  expected: string,\n  cql: string\n): string {\n  const id = shortid.generate();\n  const criteria: Criteria = {\n    id: id,\n    elementName: elementName,\n    expected: expected,\n    cql: cql\n  };\n  pathway.criteria.push(criteria);\n\n  return id;\n}\n\nexport function setNavigationalElm(pathway: Pathway, elm: object): void {\n  if (!pathway.elm) pathway.elm = {};\n  pathway.elm.navigational = elm;\n}\n\nexport function setCriteriaElm(pathway: Pathway, elm: object): void {\n  if (!pathway.elm) pathway.elm = {};\n  pathway.elm.criteria = elm;\n}\n\nexport function createState(key?: string): State {\n  if (!key) key = shortid.generate();\n  const state: State = {\n    key,\n    label: 'New Node',\n    transitions: [],\n    nodeTypeIsUndefined: true\n  };\n\n  return state;\n}\n\nexport function addState(pathway: Pathway, state: State): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [state.key as string]: state\n    }\n  };\n}\n\nexport function addGuidanceState(pathway: Pathway): Pathway {\n  const state = createState();\n  const newPathway = addState(pathway, state);\n\n  return makeStateGuidance(newPathway, state.key as string);\n}\n\nexport function setStateLabel(pathway: Pathway, key: string, label: string): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        label\n      }\n    }\n  };\n}\n\nexport function setStateNodeType(pathway: Pathway, stateKey: string, nodeType: string): Pathway {\n  switch (nodeType) {\n    case 'action':\n      return makeStateGuidance(pathway, stateKey);\n    case 'branch':\n      return makeStateBranch(pathway, stateKey);\n    default:\n      return pathway;\n  }\n}\n\nexport function setStateCriteriaSource(\n  pathway: Pathway,\n  key: string,\n  criteriaSource: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        criteriaSource\n      }\n    }\n  };\n}\n\nexport function setStateMcodeCriteria(\n  pathway: Pathway,\n  key: string,\n  mcodeCriteria: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        mcodeCriteria\n      }\n    }\n  };\n}\n\nexport function setStateOtherCriteria(\n  pathway: Pathway,\n  key: string,\n  otherCriteria: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        otherCriteria\n      }\n    }\n  };\n}\n\nexport function addTransition(\n  pathway: Pathway,\n  startStateKey: string,\n  endStateKey: string\n): Pathway {\n  const transition: Transition = {\n    id: shortid.generate(),\n    transition: endStateKey\n  };\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [startStateKey]: {\n        ...pathway.states[startStateKey],\n        transitions: [...pathway.states[startStateKey].transitions, transition]\n      }\n    }\n  };\n}\n\nexport function setTransitionCondition(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string,\n  cql: string\n): void {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition) foundTransition.condition = { description: description, cql: cql };\n}\n\nexport function setGuidanceStateCql(pathway: Pathway, key: string, cql: string): void {\n  (pathway.states[key] as GuidanceState).cql = cql;\n}\n\n// TODO: possibly add more action methods\nexport function addAction(\n  pathway: Pathway,\n  key: string,\n  type: string,\n  description: string,\n  resource: MedicationRequest | ServiceRequest\n): string {\n  const id = shortid.generate();\n  const action = {\n    id: id,\n    type: type,\n    description: description,\n    resource: resource\n  };\n  (pathway.states[key] as GuidanceState).action.push(action);\n  return id;\n}\n\nexport function getNodeType(pathway: Pathway, key: string | undefined): string {\n  if (!key) {\n    return 'null';\n  }\n  const state = pathway.states[key];\n  if (state.nodeTypeIsUndefined) {\n    return 'null';\n  } else if (!(state as GuidanceState).action && key !== 'Start') {\n    return 'branch';\n  } else {\n    return 'action';\n  }\n}\n\n/*\nSet Element Functions\n*/\nexport function setPathwayName(pathway: Pathway, name: string): void {\n  pathway.name = name;\n}\n\nexport function setPathwayDescription(pathway: Pathway, description: string): void {\n  pathway.description = description;\n}\n\nexport function setLibrary(pathway: Pathway, library: string): void {\n  pathway.library = library;\n}\n\nexport function setTransition(\n  pathway: Pathway,\n  startStateKey: string,\n  endStateKey: string,\n  transitionId: string\n): void {\n  const transition = pathway.states[startStateKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n  if (transition) transition.transition = endStateKey;\n}\n\nexport function setTransitionConditionDescription(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string\n): void {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition?.condition) foundTransition.condition.description = description;\n}\n\nexport function setTransitionConditionCql(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  cql: string\n): void {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition?.condition) foundTransition.condition.cql = cql;\n}\n\nexport function setActionType(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  type: string\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.type = type;\n  }\n}\n\nexport function setActionDescription(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  description: string\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.description = description;\n  }\n}\n\nexport function setActionResource(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  resource: MedicationRequest | ServiceRequest\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.resource = resource;\n  }\n}\n\nexport function makeStateGuidance(pathway: Pathway, stateKey: string): Pathway {\n  const state = pathway.states[stateKey] as GuidanceState;\n\n  if (state.cql !== undefined && state.action !== undefined) {\n    return pathway;\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...state,\n        cql: '',\n        action: [],\n        nodeTypeIsUndefined: undefined,\n        criteriaSource: undefined,\n        mcodeCriteria: undefined,\n        otherCriteria: undefined\n      }\n    }\n  };\n}\n\nexport function makeStateBranch(pathway: Pathway, stateKey: string): Pathway {\n  const state = pathway.states[stateKey] as GuidanceState;\n\n  if (\n    state.cql === undefined &&\n    state.action === undefined &&\n    state.nodeTypeIsUndefined === undefined\n  ) {\n    return pathway;\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...state,\n        cql: undefined,\n        action: undefined,\n        nodeTypeIsUndefined: undefined\n      }\n    }\n  };\n}\n\n/*\nRemove Element Function\n*/\nexport function removePathwayDescription(pathway: Pathway): void {\n  delete pathway.description;\n}\n\nexport function removeCriteria(pathway: Pathway, id: string): void {\n  const criteria = pathway.criteria.filter((criteria: Criteria) => criteria.id !== id);\n  pathway.criteria = criteria;\n}\n\nexport function removeNavigationalElm(pathway: Pathway): void {\n  delete pathway.elm?.navigational;\n}\n\nexport function removeCriteriaElm(pathway: Pathway): void {\n  delete pathway.elm?.criteria;\n}\n\nexport function removeState(pathway: Pathway, key: string): void {\n  delete pathway.states[key];\n\n  Object.keys(pathway.states).forEach((stateName: string) => {\n    const state = pathway.states[stateName];\n    state.transitions.forEach((transition: Transition) => {\n      if (transition.transition === key)\n        removeTransition(pathway, stateName, transition.id ?? '-1');\n    });\n  });\n}\n\nexport function removeTransitionCondition(\n  pathway: Pathway,\n  stateKey: string,\n  transitionId: string\n): void {\n  const transition = pathway.states[stateKey].transitions.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n  if (transition) delete transition.condition;\n}\n\nexport function removeTransition(pathway: Pathway, stateKey: string, transitionId: string): void {\n  const transitions = pathway.states[stateKey].transitions.filter(\n    (transition: Transition) => transition.id !== transitionId\n  );\n  pathway.states[stateKey].transitions = transitions;\n}\n\nexport function removeAction(pathway: Pathway, stateKey: string, actionId: string): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const actions = (pathway.states[stateKey] as GuidanceState).action.filter(\n      (action: Action) => action.id !== actionId\n    );\n    (pathway.states[stateKey] as GuidanceState).action = actions;\n  }\n}\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport useStyles from './styles';\nimport { createNewPathway } from 'utils/builder';\n\ninterface NewPathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst NewPathwayModal: FC<NewPathwayModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway } = usePathwayContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      addPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={handleCreateNewPathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required\n            inputRef={pathwayNameRef}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(NewPathwayModal);\n","import React, { FC, useCallback, useState, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport NewPathwayModal from './NewPathwayModal';\n\nimport useStyles from './styles';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status } = usePathwayContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={openNewPathwayModal}\n      >\n        Create Pathway\n      </Button>\n\n      <NewPathwayModal open={open} onClose={closeNewPathwayModal} />\n      {status === 'loading' ? <Loading /> : <PathwaysTable />}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    backIcon: {\n      fontSize: '20px',\n      color: theme.palette.grey['800'],\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation' }\n);\n","import React, { FC, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from '@material-ui/core';\n\nimport { Pathway } from 'pathways-model';\nimport useStyles from './styles';\n\ninterface Props {\n  pathway: Pathway;\n}\n\nconst Navigation: FC<Props> = ({ pathway }) => {\n  const styles = useStyles();\n  const history = useHistory();\n\n  const handleGoBack = useCallback((): void => {\n    history.push('/');\n  }, [history]);\n\n  return (\n    <nav className={styles.root}>\n      <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n        <FontAwesomeIcon icon={faChevronLeft} className={styles.backIcon} />\n      </IconButton>\n\n      <div className={styles.pathwayName}>{pathway?.name}</div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding,\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.grey['800'],\n      width: '33%',\n      minWidth: '500px',\n      overflowY: 'scroll',\n      float: 'left'\n    },\n    formControl: {\n      margin: theme.spacing(1, 0),\n      minWidth: 375\n    },\n    divider: {\n      width: '100%'\n    },\n    sidebarHeader: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    sidebarHeaderGroup: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    sidebarHeaderButton: {\n      height: '45px',\n      width: '45px',\n      color: theme.palette.text.primary\n    },\n    headerLabelGroup: {\n      display: 'flex',\n      cursor: 'pointer',\n      height: '60px'\n    },\n    headerLabel: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '1.6em',\n      fontWeight: 700,\n      margin: '0 5px'\n    },\n    headerLabelText: {\n      marginBottom: '5px'\n    },\n    editIcon: {\n      fontSize: '0.6em',\n      marginLeft: '10px'\n    },\n    sidebarButtonGroup: {\n      display: 'flex',\n      margin: '10px 0'\n    },\n    sidebarButton: {\n      minWidth: 180,\n      marginRight: '20px'\n    },\n    sidebarButtonText: {\n      fontStyle: 'italic'\n    },\n    toggleSidebar: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      float: 'left',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      fontSize: '2em',\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    }\n  }),\n  { name: 'Sidebar' }\n);\n","import React, { FC, memo, useCallback, useState, useEffect, useRef, RefObject } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarHeader, BranchNode, ActionNode, NullNode } from '.';\nimport { State, GuidanceState, BranchState, Pathway } from 'pathways-model';\nimport { setStateNodeType, addTransition, createState, addState, getNodeType } from 'utils/builder';\nimport useStyles from './styles';\n\ninterface SidebarProps {\n  pathway: Pathway;\n  updatePathway: (pathway: Pathway) => void;\n  headerElement: RefObject<HTMLDivElement>;\n  currentNode: GuidanceState | BranchState | State;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ pathway, updatePathway, headerElement, currentNode }) => {\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n  const currentNodeKey = currentNode?.key;\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeKey) updatePathway(setStateNodeType(pathway, currentNodeKey, nodeType));\n    },\n    [pathway, updatePathway, currentNodeKey]\n  );\n\n  const redirectToNode = useCallback(\n    nodeKey => {\n      const url = `/builder/${encodeURIComponent(pathway.id)}/node/${encodeURIComponent(nodeKey)}`;\n      if (url !== history.location.pathname) {\n        history.push(url);\n      }\n    },\n    [history, pathway.id]\n  );\n\n  const addNode = useCallback(\n    (nodeType: string): void => {\n      if (!currentNodeKey) return;\n\n      const newState = createState();\n      let newPathway = addState(pathway, newState);\n      newPathway = addTransition(newPathway, currentNodeKey, newState.key as string);\n      newPathway = setStateNodeType(newPathway, newState.key as string, nodeType);\n\n      updatePathway(newPathway);\n      redirectToNode(newState.key);\n    },\n    [pathway, updatePathway, currentNodeKey, redirectToNode]\n  );\n\n  // Set the height of the sidebar container\n  useEffect(() => {\n    if (sidebarContainerElement?.current && headerElement?.current)\n      sidebarContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [isExpanded, headerElement]);\n\n  const nodeType = getNodeType(pathway, currentNodeKey);\n\n  return (\n    <>\n      {isExpanded && (\n        <div className={styles.root} ref={sidebarContainerElement}>\n          <SidebarHeader\n            pathway={pathway}\n            currentNode={currentNode}\n            updatePathway={updatePathway}\n            isTransition={false}\n          />\n\n          <hr className={styles.divider} />\n\n          {nodeType === 'null' && (\n            <NullNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n              addNode={addNode}\n            />\n          )}\n\n          {nodeType === 'action' && (\n            <ActionNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n              addNode={addNode}\n            />\n          )}\n\n          {nodeType === 'branch' && (\n            <BranchNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n              updatePathway={updatePathway}\n            />\n          )}\n        </div>\n      )}\n\n      <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n        <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n      </div>\n    </>\n  );\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faEllipsisH,\n  faChevronLeft,\n  faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input } from '@material-ui/core';\n\nimport { Pathway, State } from 'pathways-model';\nimport { setStateLabel } from 'utils/builder';\nimport useStyles from './styles';\n\ninterface SidebarHeaderProps {\n  pathway: Pathway;\n  currentNode: State;\n  updatePathway: (pathway: Pathway) => void;\n  isTransition: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({\n  pathway,\n  currentNode,\n  updatePathway,\n  isTransition\n}) => {\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const currentNodeKey = currentNode?.key;\n  const currentNodeLabel = currentNode?.label || '';\n  const styles = useStyles();\n\n  const goToParentNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const goToNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const openNodeOptions = useCallback(() => {\n    // TODO\n  }, []);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (currentNodeKey) updatePathway(setStateLabel(pathway, currentNodeKey, label));\n    setShowInput(false);\n  }, [pathway, updatePathway, currentNodeKey]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {currentNodeLabel !== 'Start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={currentNodeLabel}\n                autoFocus\n              />\n            </FormControl>\n          ) : (\n            <div className={clsx(styles.headerLabel, styles.headerLabelText)}>\n              {currentNodeLabel}\n              <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        <IconButton\n          className={styles.sidebarHeaderButton}\n          onClick={isTransition ? goToNode : openNodeOptions}\n          aria-label={isTransition ? 'go to transition node' : 'open node options'}\n        >\n          <FontAwesomeIcon icon={isTransition ? faChevronRight : faEllipsisH} />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\n\ninterface SidebarButtonProps {\n  buttonName: string;\n  buttonIcon: ReactNode;\n  buttonText: string;\n  onClick?: () => void;\n}\n\nconst SidebarButton: FC<SidebarButtonProps> = ({ buttonName, buttonIcon, buttonText, onClick }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.sidebarButtonGroup}>\n      <Button\n        className={styles.sidebarButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={buttonIcon}\n        onClick={onClick}\n      >\n        {buttonName}\n      </Button>\n\n      <div className={styles.sidebarButtonText}>{buttonText}</div>\n    </div>\n  );\n};\n\nexport default memo(SidebarButton);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface DropDownProps {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  value?: string;\n  onChange: Function | null;\n}\n\nconst DropDown: FC<DropDownProps> = ({ id, label, options, value, onChange }: DropDownProps) => {\n  const handleSetSelected = useCallback(\n    (event: ChangeEvent<{ value: unknown }>): void => {\n      if (onChange) onChange(event);\n    },\n    [onChange]\n  );\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n\n      <Select\n        id={`${id}-select`}\n        value={value || ''}\n        onChange={handleSetSelected}\n        label={label}\n        error={value == null || value === ''}\n        MenuProps={{\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          }\n        }}\n        displayEmpty\n      >\n        {options.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(DropDown);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarButton, BranchTransition } from '.';\nimport DropDown from 'components/elements/DropDown';\nimport {\n  setStateCriteriaSource,\n  setStateMcodeCriteria,\n  setStateOtherCriteria,\n  addTransition,\n  createState,\n  addState\n} from 'utils/builder';\nimport { Pathway, BranchState } from 'pathways-model';\nimport useStyles from './styles';\n\nconst nodeTypeOptions = [\n  { value: 'action', label: 'Action' },\n  { value: 'branch', label: 'Branch' }\n];\n\nconst criteriaSourceOptions = [\n  { value: 'mcode', label: 'mCODE' },\n  { value: 'other', label: 'Other' }\n];\n\nconst mCodeCriteriaOptions = [\n  { value: 'tumorCategory', label: 'Tumor Category' },\n  { value: 'nodeCategory', label: 'Node Category' },\n  { value: 'metastatisCategory', label: 'Metastatis Category' }\n];\n\nconst otherCriteriaOptions = [{ value: 'item', label: 'Item' }];\n\ninterface BranchNodeProps {\n  pathway: Pathway;\n  currentNode: BranchState;\n  changeNodeType: (event: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nconst BranchNode: FC<BranchNodeProps> = ({\n  pathway,\n  currentNode,\n  changeNodeType,\n  updatePathway\n}) => {\n  const currentNodeKey = currentNode?.key;\n  const styles = useStyles();\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const selectCriteriaSource = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey) return;\n\n      const criteriaSource = event?.target.value || '';\n      updatePathway(setStateCriteriaSource(pathway, currentNodeKey, criteriaSource));\n    },\n    [currentNodeKey, updatePathway, pathway]\n  );\n\n  const selectMcodeCriteria = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey) return;\n\n      const mcodeCriteria = event?.target.value || '';\n      updatePathway(setStateMcodeCriteria(pathway, currentNodeKey, mcodeCriteria));\n    },\n    [currentNodeKey, updatePathway, pathway]\n  );\n\n  const selectOtherCriteria = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey) return;\n\n      const otherCriteria = event?.target.value || '';\n      updatePathway(setStateOtherCriteria(pathway, currentNodeKey, otherCriteria));\n    },\n    [currentNodeKey, updatePathway, pathway]\n  );\n\n  const handleAddTransition = useCallback((): void => {\n    const newState = createState();\n\n    const newPathway = addState(pathway, newState);\n    updatePathway(addTransition(newPathway, currentNodeKey || '', newState.key as string));\n  }, [pathway, updatePathway, currentNodeKey]);\n\n  const canAddTransition =\n    currentNode.criteriaSource != null && (currentNode.mcodeCriteria || currentNode.otherCriteria);\n\n  return (\n    <>\n      <DropDown\n        id=\"nodeType\"\n        label=\"Node Type\"\n        options={nodeTypeOptions}\n        onChange={selectNodeType}\n        value=\"branch\"\n      />\n\n      <DropDown\n        id=\"criteriaSource\"\n        label=\"Criteria Source\"\n        options={criteriaSourceOptions}\n        onChange={selectCriteriaSource}\n        value={currentNode.criteriaSource}\n      />\n\n      {currentNode.criteriaSource === 'mcode' && (\n        <DropDown\n          id=\"mCodeCriteria\"\n          label=\"mCODE Criteria\"\n          options={mCodeCriteriaOptions}\n          onChange={selectMcodeCriteria}\n          value={currentNode.mcodeCriteria}\n        />\n      )}\n\n      {currentNode.criteriaSource === 'other' && (\n        <DropDown\n          id=\"otherCriteria\"\n          label=\"Other Criteria\"\n          options={otherCriteriaOptions}\n          onChange={selectOtherCriteria}\n          value={currentNode.otherCriteria}\n        />\n      )}\n\n      {currentNode.transitions.map(transition => {\n        return (\n          <BranchTransition\n            key={transition.id}\n            pathway={pathway}\n            transition={transition}\n            updatePathway={updatePathway}\n          />\n        );\n      })}\n\n      {canAddTransition && (\n        <>\n          <hr className={styles.divider} />\n\n          <SidebarButton\n            buttonName=\"Add Transition\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"Add transition logic for a clinical decision within a workflow.\"\n            onClick={handleAddTransition}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(BranchNode);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from '.';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport DropDown from 'components/elements/DropDown';\nimport { Pathway, State } from 'pathways-model';\nimport useStyles from './styles';\n\nconst nodeTypeOptions = [\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\ninterface ActionNodeProps {\n  pathway: Pathway;\n  currentNode: State;\n  changeNodeType: (event: string) => void;\n  addNode: (event: string) => void;\n}\n\nconst ActionNode: FC<ActionNodeProps> = ({ pathway, currentNode, changeNodeType, addNode }) => {\n  const styles = useStyles();\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode.key !== undefined && currentNode.key !== 'Start';\n\n  // If the node does not have transitions it can be added to\n  const displayAddButtons = currentNode.key !== undefined && currentNode.transitions.length === 0;\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <DropDown\n          id=\"nodeType\"\n          label=\"Node Type\"\n          options={nodeTypeOptions}\n          onChange={selectNodeType}\n          value=\"action\"\n        />\n      )}\n      {displayAddButtons && (\n        <>\n          {changeNodeTypeEnabled && <hr className={styles.divider} />}\n          <SidebarButton\n            buttonName=\"Add Action Node\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"Any clinical or workflow step which is not a decision.\"\n            onClick={(): void => addNode('action')}\n          />\n\n          <SidebarButton\n            buttonName=\"Add Branch Node\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"A logical branching point based on clinical or workflow criteria.\"\n            onClick={(): void => addNode('branch')}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNode);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\n\nimport DropDown from 'components/elements/DropDown';\nimport { Pathway, State } from 'pathways-model';\n\nconst nodeTypeOptions = [\n  { label: '', value: '' },\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\ninterface NullNodeProps {\n  pathway: Pathway;\n  currentNode: State;\n  changeNodeType: (event: string) => void;\n  addNode: (event: string) => void;\n}\n\nconst NullNode: FC<NullNodeProps> = ({ pathway, currentNode, changeNodeType, addNode }) => {\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode.key !== undefined && currentNode.key !== 'Start';\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <DropDown\n          id=\"nodeType\"\n          label=\"Node Type\"\n          options={nodeTypeOptions}\n          onChange={selectNodeType}\n          value=\"\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default memo(NullNode);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTools } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarHeader, SidebarButton } from '.';\nimport { Pathway, Transition } from 'pathways-model';\nimport useStyles from './styles';\n\ninterface BranchTransitionProps {\n  pathway: Pathway;\n  transition: Transition;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({ pathway, transition, updatePathway }) => {\n  const styles = useStyles();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway.states[transitionKey];\n\n  return (\n    <>\n      <hr className={styles.divider} />\n\n      <SidebarHeader\n        pathway={pathway}\n        currentNode={transitionNode}\n        updatePathway={updatePathway}\n        isTransition={true}\n      />\n\n      <SidebarButton\n        buttonName=\"Use Criteria\"\n        buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n        buttonText=\"Add previously built or imported criteria logic to branch node.\"\n      />\n\n      <SidebarButton\n        buttonName=\"Build Criteria\"\n        buttonIcon={<FontAwesomeIcon icon={faTools} />}\n        buttonText=\"Create new criteria logic to add to branch node.\"\n      />\n    </>\n  );\n};\n\nexport default memo(BranchTransition);\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const nodeDimension = nodeDimensions[stateName];\n\n    if (nodeDimension) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactElement } from 'react';\nimport { Popup, StrictPopupProps } from 'semantic-ui-react';\nimport styles from './PathwayPopup.module.scss';\n\ninterface PathwayPopupProps {\n  Content: ReactElement;\n  Trigger: ReactElement;\n  popupPosition?: StrictPopupProps['position'];\n  open?: boolean;\n  setOpen?: Function;\n  className?: string;\n}\n\nconst PathwayPopup: FC<PathwayPopupProps> = ({\n  Content,\n  Trigger,\n  popupPosition,\n  open,\n  setOpen,\n  className\n}: PathwayPopupProps) => {\n  return (\n    <Popup\n      content={Content}\n      position={popupPosition || 'bottom right'}\n      className={`${styles.pathwayPopup} ${className}`}\n      on=\"click\"\n      open={open}\n      onOpen={(): void => {\n        setOpen && setOpen(true);\n      }}\n      onClose={(): void => {\n        setOpen && setOpen(false);\n      }}\n      pinned\n      trigger={Trigger}\n    />\n  );\n};\n\nexport default PathwayPopup;\n","import React, { FC } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} button ${type === 'decline' && styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default ActionButton;\n","import React, { FC, useState } from 'react';\nimport styles from './MissingDataPopup.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\ninterface MissingDataPopup {\n  values: string[];\n}\n\nconst MissingDataPopup: FC<MissingDataPopup> = ({ values }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <PathwayPopup\n      Content={<PopupContent values={values} setOpen={setOpen}></PopupContent>}\n      className={styles.missingDataPopup}\n      Trigger={\n        <div className={styles.popupTrigger}>\n          missing data\n          <FontAwesomeIcon icon={faEdit} className={styles.externalLink} />\n        </div>\n      }\n      open={open}\n      setOpen={setOpen}\n    />\n  );\n};\n\ninterface PopupContentProps {\n  values: Array<string>;\n  setOpen: Function;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ values, setOpen }) => {\n  const [showCheck, setShowCheck] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('');\n\n  return (\n    <div>\n      <div className={styles.popupContent}>\n        Select Value:\n        <div>\n          {values.map(e => {\n            return (\n              <div\n                key={e}\n                className={styles.popupChoice + ' ' + (selected === e ? styles.selected : '')}\n                onClick={(): void => {\n                  if (showCheck && selected === e) {\n                    setShowCheck(false);\n                    setSelected('');\n                  } else {\n                    setShowCheck(true);\n                    setSelected(e);\n                  }\n                }}\n              >\n                {e}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n        {showCheck && (\n          <ActionButton\n            size=\"small\"\n            type=\"accept\"\n            onClick={(): void => {\n              setOpen(false);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MissingDataPopup;\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): boolean {\n  const { action } = state as GuidanceState;\n  return action ? action.length > 0 : false;\n}\n\nexport function isBranchState(state: State): boolean {\n  return !isGuidanceState(state) && state.transitions.length > 1;\n}\n","import React, { FC, ReactNode, ReactElement, memo } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MissingDataPopup from 'components/MissingDataPopup';\nimport styles from './ExpandedNode.module.scss';\nimport { isBranchState } from 'utils/nodeUtils';\n\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState;\n  isActionable: boolean;\n  isGuidance: boolean;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(({ pathwayState, isActionable, isGuidance }) => {\n  return (\n    <>\n      <ExpandedNodeMemo isGuidance={isGuidance} pathwayState={pathwayState} />\n    </>\n  );\n});\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\nfunction renderBranch(pathwayState: State): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  const values: string[] = pathwayState.transitions\n    .map(transition => {\n      const description = transition.condition?.description;\n      return description ? description : '';\n    })\n    // Remove duplicate values\n    .filter((v, i, arr) => arr.indexOf(v) === i);\n\n  returnElements.push(\n    <ExpandedNodeField\n      key=\"value\"\n      title=\"Value\"\n      description={<MissingDataPopup values={values} />}\n    />\n  );\n\n  return returnElements;\n}\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\nfunction renderGuidance(pathwayState: GuidanceState): ReactElement[] {\n  const resource = pathwayState.action[0].resource;\n  const coding = isMedicationRequest(resource)\n    ? resource?.medicationCodeableConcept?.coding\n    : resource?.code?.coding;\n\n  const returnElements = [\n    <ExpandedNodeField\n      key=\"Notes\"\n      title=\"Notes\"\n      description={pathwayState.action[0].description}\n    />,\n    <ExpandedNodeField key=\"Type\" title=\"Type\" description={resource.resourceType} />,\n    <ExpandedNodeField\n      key=\"System\"\n      title=\"System\"\n      description={\n        <>\n          {coding && coding[0].system}\n          <a href={coding && coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n          </a>\n        </>\n      }\n    />,\n    <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n    <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />\n  ];\n\n  return returnElements;\n}\n\ninterface ExpandedNodeMemoProps {\n  pathwayState: GuidanceState;\n  isGuidance: boolean;\n}\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(({ pathwayState, isGuidance }) => {\n  const guidance = isGuidance && renderGuidance(pathwayState);\n  const branch = isBranchState(pathwayState) && renderBranch(pathwayState);\n  return (\n    <div className=\"expandedNode\">\n      <table className={styles.infoTable}>\n        <tbody>{guidance || branch}</tbody>\n      </table>\n    </div>\n  );\n});\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo, useCallback } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState } from 'utils/nodeUtils';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faCapsules,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface NodeProps {\n  name: string;\n  pathwayState: State;\n  isCurrentNode: boolean;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClick?: (nodeName: string) => void;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      { name, pathwayState, isCurrentNode, xCoordinate, yCoordinate, expanded = false, onClick },\n      ref\n    ) => {\n      const onClickHandler = useCallback(() => {\n        if (onClick) onClick(name);\n      }, [onClick, name]);\n\n      const { label } = pathwayState;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n\n      const isActionable = isCurrentNode;\n      const topLevelClasses = [styles.node];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push('expanded');\n      if (isActionable) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = styles.childNotActionable;\n      }\n      const isGuidance = isGuidanceState(pathwayState);\n\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div className={`nodeTitle ${onClickHandler && 'clickable'}`} onClick={onClickHandler}>\n            <div className=\"iconAndLabel\">\n              <NodeIcon pathwayState={pathwayState} isGuidance={isGuidance} />\n              {label}\n            </div>\n            <StatusIcon status={null} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode\n                pathwayState={pathwayState as GuidanceState}\n                isActionable={isActionable}\n                isGuidance={isGuidance}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayState: State;\n  isGuidance: boolean;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, isGuidance }) => {\n  let icon: IconProp = faMicroscope;\n  if (pathwayState.label === 'Start') icon = faPlay;\n  if (isGuidance) {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'MedicationAdministration') icon = faCapsules;\n      else if (resourceType === 'Procedure') icon = faSyringe;\n    }\n  }\n  return <FontAwesomeIcon icon={icon} className={styles.icon} />;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status == null) {\n    return null;\n  }\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return (\n    <div className=\"statusIcon\">\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport styles from './Arrow.module.scss';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  widthOffset: number;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, widthOffset }) => {\n  const className = styles.arrow;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={className}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={styles.arrowhead}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import React, {\n  FC,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { Pathway } from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges } from 'graph-model';\nimport styles from './Graph.module.scss';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\ninterface GraphProps {\n  pathway: Pathway;\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n}\n\ninterface ExpandedState {\n  [key: string]: boolean | string | null;\n}\n\nconst Graph: FC<GraphProps> = memo(({ pathway, interactive = true, expandCurrentNode = true }) => {\n  const graphElement = useRef<HTMLDivElement>(null);\n  const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n  const [parentWidth, setParentWidth] = useState<number>(\n    graphElement?.current?.parentElement?.clientWidth ?? 0\n  );\n\n  // Get the layout of the graph\n  const getGraphLayout = useCallback((): Layout => {\n    const nodeDimensions: NodeDimensions = {};\n\n    // Retrieve dimensions from nodeRefs\n    if (nodeRefs?.current) {\n      Object.keys(nodeRefs.current).forEach(key => {\n        const nodeElement = nodeRefs.current[key];\n        const width = nodeElement.clientWidth;\n        // nodeElement can have multiple children so calculate the sum to get the node height\n        const height = Array.from(nodeElement.children).reduce(\n          (acc, child) => acc + child.clientHeight,\n          0\n        );\n\n        nodeDimensions[key] = { width, height };\n      });\n    }\n\n    return graphLayout(pathway, nodeDimensions);\n  }, [pathway]);\n\n  const [layout, setLayout] = useState(getGraphLayout());\n  const { nodeCoordinates, edges } = layout;\n  const maxHeight = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.y)\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates]);\n\n  // If a node has a negative x value, shift nodes and edges to the right by that value\n  const minX =\n    nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.x + parentWidth / 2)\n          .reduce((a, b) => Math.min(a, b))\n      : 0;\n\n  if (minX < 0) {\n    const toAdd = minX * -1;\n    Object.keys(nodeCoordinates).forEach(key => {\n      const node = nodeCoordinates[key];\n      node.x += toAdd;\n    });\n\n    Object.keys(edges).forEach(key => {\n      const edge = edges[key];\n\n      edge.points.forEach(p => (p.x += toAdd));\n      if (edge.label) edge.label.x += toAdd;\n    });\n  }\n\n  const [expanded, setExpanded] = useState<ExpandedState>(() =>\n    Object.keys(layout).reduce(\n      (acc, curr: string) => {\n        acc[curr] = false;\n        return acc;\n      },\n      { lastSelectedNode: null } as ExpandedState\n    )\n  );\n\n  const toggleExpanded = useCallback((key: string) => {\n    setExpanded(prevState => ({\n      ...prevState,\n      [key]:\n        !prevState[key] || prevState.lastSelectedNode === key ? !prevState[key] : prevState[key],\n      lastSelectedNode: key\n    }));\n  }, []);\n\n  // Recalculate graph layout if graph container size changes\n  useEffect(() => {\n    if (graphElement.current?.parentElement) {\n      new ResizeSensor(graphElement.current.parentElement, function() {\n        setParentWidth(graphElement.current?.parentElement?.clientWidth ?? 0);\n        setLayout(getGraphLayout());\n      });\n    }\n  }, [getGraphLayout]);\n\n  // Recalculate graph layout if a node is expanded\n  useEffect(() => {\n    setLayout(getGraphLayout());\n  }, [pathway, expanded, getGraphLayout]);\n\n  // maxWidth finds the edge label that is farthest to the right\n  const maxWidth: number =\n    edges !== undefined\n      ? Object.values(edges)\n          .map(e => e.label)\n          .map(l => (l ? l.x + l.text.length * 10 + parentWidth / 2 : 0))\n          .reduce((a, b) => Math.max(a, b), 0)\n      : parentWidth;\n\n  return (\n    <GraphMemo\n      graphElement={graphElement}\n      interactive={interactive}\n      maxHeight={maxHeight}\n      nodeCoordinates={nodeCoordinates}\n      edges={edges}\n      pathway={pathway}\n      nodeRefs={nodeRefs}\n      parentWidth={parentWidth}\n      maxWidth={maxWidth}\n      expanded={expanded}\n      toggleExpanded={toggleExpanded}\n    />\n  );\n});\n\ninterface GraphMemoProps {\n  graphElement: RefObject<HTMLDivElement>;\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  edges: Edges;\n  pathway: Pathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  expanded: ExpandedState;\n  toggleExpanded: (key: string) => void;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(\n  ({\n    graphElement,\n    interactive,\n    maxHeight,\n    nodeCoordinates,\n    edges,\n    pathway,\n    nodeRefs,\n    parentWidth,\n    maxWidth,\n    expanded,\n    toggleExpanded\n  }) => {\n    const { id: pathwayId } = useParams();\n    const history = useHistory();\n    const redirectToNode = useCallback(\n      nodeId => {\n        const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeId)}`;\n        if (url !== history.location.pathname) {\n          history.push(url);\n        }\n      },\n      [history, pathwayId]\n    );\n    const onClickHandler = useCallback(\n      (nodeName: string) => {\n        if (interactive) {\n          redirectToNode(nodeName);\n          toggleExpanded(nodeName);\n        }\n      },\n      [redirectToNode, toggleExpanded, interactive]\n    );\n\n    return (\n      <div\n        ref={graphElement}\n        id=\"graph-root\"\n        className={styles.root}\n        style={{\n          height: interactive ? maxHeight + 150 : 'inherit',\n          width: maxWidth + 'px',\n          position: 'relative',\n          marginRight: '5px'\n        }}\n      >\n        {nodeCoordinates !== undefined\n          ? Object.keys(nodeCoordinates).map(nodeName => {\n              return (\n                <Node\n                  key={nodeName}\n                  name={nodeName}\n                  ref={(node: HTMLDivElement): void => {\n                    nodeRefs.current[nodeName] = node;\n                  }}\n                  pathwayState={pathway.states[nodeName]}\n                  isCurrentNode={false}\n                  xCoordinate={nodeCoordinates[nodeName].x + parentWidth / 2}\n                  yCoordinate={nodeCoordinates[nodeName].y}\n                  expanded={Boolean(expanded[nodeName])}\n                  onClick={onClickHandler}\n                />\n              );\n            })\n          : []}\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{\n            // Adding 5 pixels to maxWidth so that the rightmost edge label is not cut off\n            width: maxWidth + 5,\n            height: maxHeight,\n            zIndex: 1,\n            top: 0,\n            left: 0,\n            overflow: 'visible'\n          }}\n        >\n          {edges !== undefined\n            ? Object.keys(edges).map(edgeName => {\n                const edge = edges[edgeName];\n                return (\n                  <Arrow\n                    key={edgeName}\n                    edge={edge}\n                    edgeName={edgeName}\n                    widthOffset={parentWidth / 2}\n                  />\n                );\n              })\n            : []}\n        </svg>\n      </div>\n    );\n  }\n);\n\nexport default Graph;\n","import React, { FC, useRef, useEffect, memo } from 'react';\nimport { Pathway, State } from 'pathways-model';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport Graph from 'components/Graph';\nimport { useTheme } from 'components/ThemeProvider';\n\nimport styles from './Builder.module.scss';\n\ninterface BuilderProps {\n  pathway: Pathway;\n  updatePathway: (pathway: Pathway) => void;\n  currentNode: State;\n}\n\nconst Builder: FC<BuilderProps> = ({ pathway, updatePathway, currentNode }) => {\n  const headerElement = useRef<HTMLDivElement>(null);\n  const graphContainerElement = useRef<HTMLDivElement>(null);\n  const theme = useTheme('dark');\n\n  // Set the height of the graph container\n  useEffect(() => {\n    if (graphContainerElement?.current && headerElement?.current)\n      graphContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [pathway, headerElement, graphContainerElement]);\n\n  return (\n    <>\n      <div ref={headerElement}>\n        <Header />\n        <Navigation pathway={pathway} />\n      </div>\n\n      <div className={styles.display}>\n        <MuiThemeProvider theme={theme}>\n          <Sidebar\n            pathway={pathway}\n            updatePathway={updatePathway}\n            headerElement={headerElement}\n            currentNode={currentNode}\n          />\n        </MuiThemeProvider>\n\n        <div ref={graphContainerElement} className={styles.graph}>\n          <Graph pathway={pathway} expandCurrentNode={true} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default memo(Builder);\n","import React, { FC, memo, useMemo, useCallback } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { Pathway } from 'pathways-model';\n\nimport Builder from 'components/Builder';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nconst BuilderRoute: FC = () => {\n  const { id, nodeId } = useParams();\n  const { pathways, updatePathwayAtIndex } = usePathwayContext();\n  const pathwayId = decodeURIComponent(id);\n  const pathwayIndex = useMemo(() => pathways.findIndex(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const pathway = pathways[pathwayIndex];\n  const currentNode = pathway?.states?.[decodeURIComponent(nodeId)];\n\n  const updatePathway = useCallback(\n    (pathway: Pathway) => {\n      updatePathwayAtIndex(pathway, pathwayIndex);\n    },\n    [pathwayIndex, updatePathwayAtIndex]\n  );\n\n  if (pathway == null) return null;\n  if (currentNode == null) return <Redirect to={`/builder/${id}/node/Start`} />;\n\n  return <Builder pathway={pathway} updatePathway={updatePathway} currentNode={currentNode} />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\nimport PathwaysList from 'components/PathwaysList';\n\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from './ThemeProvider';\nimport { PathwayProvider } from './PathwayProvider';\nimport { UserProvider } from './UserProvider';\n\nconst App: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <PathwayProvider>\n          <Router>\n            <Switch>\n              <Route path=\"/builder/:id/node/:nodeId\">\n                <BuilderRoute />\n              </Route>\n              <Route path=\"/builder/:id\">\n                <BuilderRoute />\n              </Route>\n              <Route path=\"/\">\n                <Header />\n                <PathwaysList />\n              </Route>\n            </Switch>\n          </Router>\n        </PathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(App);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};"],"sourceRoot":""}