{"version":3,"sources":["components/Node/Node.module.scss","components/MissingDataPopup/MissingDataPopup.module.scss","components/ExpandedNode/ExpandedNode.module.scss","utils/ConfigManager.js","components/Header/Header.module.scss","components/Arrow/Arrow.module.scss","components/Builder/Builder.module.scss","components/elements/Loading/Loading.module.scss","camino-logo-dark.png","components/PathwayPopup/PathwayPopup.module.scss","components/Graph/Graph.module.scss","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","components/Navigation/styles.tsx","components/Navigation/Navigation.tsx","utils/builder.ts","components/Sidebar/styles.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarHeader.tsx","components/Sidebar/SidebarButton.tsx","components/elements/DropDown/DropDown.tsx","components/Sidebar/BranchNode.tsx","components/Sidebar/ActionNode.tsx","components/Sidebar/NullNode.tsx","components/Sidebar/BranchTransition.tsx","visualization/layout.ts","components/PathwayPopup/PathwayPopup.tsx","components/ActionButton/ActionButton.tsx","components/MissingDataPopup/MissingDataPopup.tsx","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/Arrow.tsx","components/Graph/Graph.tsx","components/Builder/Builder.tsx","components/PathwaysService/PathwaysService.tsx","components/PathwayProvider.tsx","components/BuilderRoute.tsx","components/UserProvider.tsx","components/CriteriaProvider.tsx","components/Tabs/styles.tsx","components/Tabs/Tabs.tsx","components/elements/Loading/Loading.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwaysTable.tsx","components/PathwaysList/NewPathwayModal.tsx","components/PathwaysList/PathwaysList.tsx","components/CriteriaList/styles.tsx","components/CriteriaList/CriteriaTable.tsx","components/CriteriaList/ImportCriteriaModal.tsx","components/CriteriaList/CriteriaList.tsx","components/App.tsx","index.js","components/ActionButton/ActionButton.module.scss"],"names":["module","exports","config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","variables","spacing","globalPadding","colors","white","black","blue","red","gray","grayMedium","grayBlue","grayLighter","grayDark","green","typography","fontFamily","join","materialUiOverridesBase","MuiButton","root","borderRadius","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","backgroundColor","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","MuiInputBase","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","MuiDialogContent","MuiDialogActions","materialUiOverridesDark","borderColor","color","notchedOutline","MuiMenuItem","paletteBase","primary","main","secondary","error","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","createContext","ThemeProvider","memo","children","useState","setUseProjector","muiTheme","toggleTheme","useCallback","currentUseProjector","Provider","anchorEl","setAnchorEl","useContext","openMenu","event","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","src","logo","alt","onClick","aria-controls","aria-haspopup","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","makeStyles","display","alignItems","height","backButton","width","backIcon","cursor","pathwayName","marginLeft","Navigation","pathway","useStyles","history","useHistory","handleGoBack","push","IconButton","aria-label","faChevronLeft","createState","key","shortid","generate","transitions","nodeTypeIsUndefined","addState","state","states","setStateNodeType","stateKey","nodeType","makeStateGuidance","undefined","cql","elm","action","makeStateBranch","addTransition","startStateKey","endStateKey","transition","criteriaSource","mcodeCriteria","otherCriteria","flexDirection","minWidth","overflowY","float","formControl","divider","sidebarHeader","justifyContent","sidebarHeaderGroup","sidebarHeaderButton","headerLabelGroup","headerLabel","headerLabelText","marginBottom","editIcon","sidebarButtonGroup","sidebarButton","marginRight","sidebarButtonText","toggleSidebar","updatePathway","headerElement","currentNode","isExpanded","setIsExpanded","sidebarContainerElement","useRef","currentNodeKey","changeNodeType","redirectToNode","nodeKey","url","encodeURIComponent","location","pathname","addNode","newState","newPathway","useEffect","current","style","window","innerHeight","clientHeight","getNodeType","ref","isTransition","faChevronRight","showInput","setShowInput","inputRef","currentNodeLabel","goToParentNode","goToNode","openNodeOptions","changeNodeLabel","setStateLabel","handleShowInput","handleKeyPress","FormControl","fullWidth","Input","type","onBlur","onKeyPress","autoFocus","clsx","faEdit","faEllipsisH","buttonName","buttonIcon","buttonText","Button","variant","startIcon","options","onChange","handleSetSelected","InputLabel","htmlFor","Select","MenuProps","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","displayEmpty","map","option","nodeTypeOptions","criteriaSourceOptions","mCodeCriteriaOptions","otherCriteriaOptions","selectNodeType","target","selectCriteriaSource","setStateCriteriaSource","selectMcodeCriteria","setStateMcodeCriteria","selectOtherCriteria","setStateOtherCriteria","handleAddTransition","canAddTransition","faPlus","changeNodeTypeEnabled","displayAddButtons","length","transitionKey","transitionNode","faTools","graphLayoutProvider","get","layout","nodeDimensions","nodeNames","Object","keys","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","forEach","stateName","nodeDimension","setNode","condition","description","setEdge","nodeCoordinates","startNodeShift","node","x","nodeName","y","edges","e","edge","edgeName","v","w","start","end","points","p","layoutDagre","nodes","rank","NaN","horizontalPosition","parents","canMove","includes","initializeNodes","graph","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","NODE_HEIGHT","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","NODE_WIDTH","parentsOnHigherRank","filter","parentName","parent","floor","c","splice","childNode","spreadChildrenEvenly","sum","reduce","a","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","PathwayPopup","Content","Trigger","popupPosition","setOpen","Popup","content","position","pathwayPopup","on","onOpen","pinned","trigger","LargeActionButton","largeActionButton","largeDecline","toUpperCase","slice","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","faTimes","MediumActionButton","mediumActionButton","ActionButton","size","PopupContent","values","showCheck","setShowCheck","selected","setSelected","popupContent","popupChoice","footer","MissingDataPopup","missingDataPopup","popupTrigger","externalLink","isGuidanceState","ExpandedNode","pathwayState","isGuidance","isActionable","ExpandedNodeMemo","ExpandedNodeField","title","descTitle","desc","guidance","resource","coding","medicationCodeableConcept","code","resourceType","system","href","rel","faExternalLinkAlt","renderGuidance","branch","returnElements","arr","renderBranch","infoTable","Node","forwardRef","isCurrentNode","xCoordinate","yCoordinate","expanded","onClickHandler","top","left","topLevelClasses","expandedNodeClass","actionable","childActionable","childNotActionable","status","expandedNode","NodeIcon","faMicroscope","faPlay","guidancePathwayState","faPrescriptionBottleAlt","faCapsules","faSyringe","StatusIcon","faCheckCircle","faTimesCircle","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","d","fill","markerEnd","Arrow","arrow","edgeNameNoWhitespace","replace","arrowhead","markerWidth","markerHeight","refX","refY","orient","interactive","graphElement","expandCurrentNode","nodeRefs","parentElement","clientWidth","parentWidth","setParentWidth","getGraphLayout","nodeElement","Array","from","graphLayout","setLayout","maxHeight","useMemo","max","minX","min","toAdd","curr","lastSelectedNode","setExpanded","toggleExpanded","prevState","ResizeSensor","maxWidth","l","GraphMemo","pathwayId","useParams","nodeId","xmlns","zIndex","overflow","graphContainerElement","useTheme","useGetPathwaysService","result","setResult","fetch","headers","Accept","getPathways","then","response","json","listOfFiles","f","typedFetch","listOfPromises","Promise","all","pathwaysList","payload","catch","PathwayContext","PathwayProvider","pathways","setPathways","service","servicePayload","addPathway","currentPathways","deletePathway","updatePathwayAtIndex","index","usePathwayContext","decodeURIComponent","pathwayIndex","findIndex","UserContext","UserProvider","user","setUser","CriteriaContext","CriteriaProvider","criteria","setCriteria","addCriteria","file","reader","FileReader","onload","rawElm","JSON","parse","library","identifier","alert","defaultStatementNames","statements","def","find","newCriteria","version","modified","Date","now","currentCriteria","readAsText","deleteCriteria","useCriteriaContext","textTransform","tabs","tab","classes","component","faSpinner","spin","createPathwayButton","alignSelf","pathwayList","marginTop","editButton","dialogCloseButton","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","align","Link","faTrashAlt","pathwayNameRef","pathwayDescRef","closeModal","handleCreateNewPathway","preventDefault","Start","createNewPathway","Dialog","aria-labelledby","DialogTitle","disableTypography","onSubmit","DialogContent","TextField","required","DialogActions","openNewPathwayModal","closeNewPathwayModal","buttonRow","buildCriteriaButton","criteriaList","input","chooseFileInput","inputButton","whiteSpace","fileName","datetime","moment","fromNow","setFileName","importFileRef","selectFile","files","handleChooseFile","inputProps","faFileImport","openImportModal","closeImportModal","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bc7eecd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"actionable\":\"Node_actionable__bHXKd\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childNotActionable\":\"Node_childNotActionable__1bfBq\",\"childActionable\":\"Node_childActionable__SwUjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missingDataPopup\":\"MissingDataPopup_missingDataPopup__A-EBJ\",\"popupContent\":\"MissingDataPopup_popupContent__24BvC\",\"popupTrigger\":\"MissingDataPopup_popupTrigger__11eAy\",\"popupChoice\":\"MissingDataPopup_popupChoice__5oEld\",\"selected\":\"MissingDataPopup_selected__20Or7\",\"footer\":\"MissingDataPopup_footer__1wJXm\",\"externalLink\":\"MissingDataPopup_externalLink__3oYt-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3TM91\",\"arrowhead\":\"Arrow_arrowhead__3XjQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Builder_display__23HzN\",\"graph\":\"Builder_graph__lF-uJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathwayPopup\":\"PathwayPopup_pathwayPopup__2moYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  blue: '#5d89a1',\n  red: '#d95d77',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily: [\n    'Open Sans',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'Roboto',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    'Fira Sans',\n    'Droid Sans',\n    'Helvetica Neue',\n    'sans-serif'\n  ].join(',')\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic'\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600,\n      '&:hover': {}\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      padding: '1em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      padding: '0 4em'\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      padding: '2em 4em'\n    }\n  }\n};\n\nconst materialUiOverridesDark = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  },\n  MuiMenuItem: {\n    root: {\n      color: colors.grayDark\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLighter\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: '#4a4a4a'\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    text: {\n      primary: colors.white,\n      secondary: colors.white\n    }\n  }),\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" className={styles.homeLink}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    backIcon: {\n      fontSize: '20px',\n      color: theme.palette.grey['800'],\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation' }\n);\n","import React, { FC, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from '@material-ui/core';\n\nimport { Pathway } from 'pathways-model';\nimport useStyles from './styles';\n\ninterface Props {\n  pathway: Pathway;\n}\n\nconst Navigation: FC<Props> = ({ pathway }) => {\n  const styles = useStyles();\n  const history = useHistory();\n\n  const handleGoBack = useCallback((): void => {\n    history.push('/');\n  }, [history]);\n\n  return (\n    <nav className={styles.root}>\n      <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n        <FontAwesomeIcon icon={faChevronLeft} className={styles.backIcon} />\n      </IconButton>\n\n      <div className={styles.pathwayName}>{pathway?.name}</div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import {\n  Pathway,\n  Criteria,\n  State,\n  Transition,\n  Action,\n  GuidanceState,\n  ElmLibrary,\n  ElmStatement\n} from 'pathways-model';\nimport shortid from 'shortid';\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\n\nexport function createNewPathway(name: string, description?: string, pathwayId?: string): Pathway {\n  return {\n    id: pathwayId ?? shortid.generate(),\n    name: name,\n    description: description ?? '',\n    library: '',\n    criteria: [],\n    states: {\n      Start: {\n        key: 'Start',\n        label: 'Start',\n        transitions: []\n      }\n    }\n  };\n}\n\nexport function exportPathway(pathway: Pathway): string {\n  const elm: ElmLibrary = {\n    library: {\n      identifier: {\n        id: pathway.id,\n        version: '1.0.0'\n      },\n      schemaIdentifier: {\n        id: 'urn:hl7-org:elm',\n        version: 'r1'\n      },\n      usings: {\n        def: [\n          {\n            localIdentifier: 'System',\n            uri: 'urn:hl7-org:elm-types:r1'\n          },\n          {\n            localId: '1',\n            locator: '3:1-3:26',\n            localIdentifier: 'FHIR',\n            uri: 'http://hl7.org/fhir',\n            version: '4.0.0'\n          }\n        ]\n      },\n      statements: {\n        def: [\n          {\n            locator: '13:1-13:15',\n            name: 'Patient',\n            context: 'Patient',\n            expression: {\n              type: 'SingletonFrom',\n              operand: {\n                locator: '13:1-13:15',\n                dataType: '{http://hl7.org/fhir}Patient',\n                type: 'Retrieve'\n              }\n            }\n          }\n        ]\n      },\n      includes: { def: [] },\n      valueSets: { def: [] }\n    }\n  };\n\n  const pathwayToExport: Pathway = {\n    ...pathway,\n    // Strip id from each criteria\n    criteria: pathway.criteria.map((criteria: Criteria) => ({ ...criteria, id: undefined })),\n    states: { ...pathway.states }\n  };\n\n  Object.keys(pathwayToExport.states).forEach((stateName: string) => {\n    const state = pathway.states[stateName];\n    if ('elm' in state && state.elm && state.key) {\n      mergeElm(elm, state.elm);\n      const elmStatement = getElmStatement(state.elm);\n      elmStatement.name = state.key;\n      elm.library.statements.def.push(elmStatement);\n    }\n\n    pathwayToExport.states[stateName] = {\n      ...pathwayToExport.states[stateName],\n      // Strip key from each state\n      key: undefined,\n      elm: undefined,\n      criteriaSource: undefined,\n      mcodeCriteria: undefined,\n      otherCriteria: undefined,\n      // Strip id from each state.transition\n      transitions: state.transitions.map((transition: Transition) => {\n        if (transition.condition?.elm) {\n          // Add tranistion.condition.elm to elm\n          mergeElm(elm, transition.condition.elm);\n          const elmStatement = getElmStatement(transition.condition.elm);\n          elmStatement.name = transition.condition.description;\n          elm.library.statements.def.push(elmStatement);\n        }\n        return {\n          ...transition,\n          id: undefined,\n          condition: transition.condition ? { ...transition.condition, elm: undefined } : undefined\n        };\n      }),\n      // Strip id from each state.action\n      action:\n        (state as GuidanceState).action == null\n          ? undefined\n          : (state as GuidanceState).action.map((action: Action) => ({\n              ...action,\n              id: undefined\n            }))\n    };\n  });\n\n  setNavigationalElm(pathwayToExport, elm);\n\n  return JSON.stringify(pathwayToExport, undefined, 2);\n}\n\nfunction mergeElm(elm: ElmLibrary, additionalElm: ElmLibrary): void {\n  // Merge usings\n  additionalElm.library.usings.def.forEach(using => {\n    // Check if it is in ELM\n    if (!elm.library.usings.def.find(def => def.uri === using.uri))\n      elm.library.usings.def.push(using);\n  });\n  // Merge includes\n  additionalElm.library.includes.def.forEach(include => {\n    if (!elm.library.includes.def.find(def => def.path === include.path))\n      elm.library.includes.def.push(include);\n  });\n  // Merge valueSets\n  additionalElm.library.valueSets.def.forEach(valueSet => {\n    if (!elm.library.valueSets.def.find(def => def.id === valueSet.id))\n      elm.library.valueSets.def.push(valueSet);\n  });\n  // TODO: merge code, codesystem, and concepts\n}\n\nfunction getElmStatement(elm: ElmLibrary): ElmStatement {\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatement = elm.library.statements.def.find(\n    def => !defaultStatementNames.includes(def.name)\n  );\n\n  // elmStatement type is ElmStatement | undefined but criteria\n  // provider validates such a statement exists in the elm\n  return elmStatement as ElmStatement;\n}\n\n// TODO: possibly add more criteria methods\nexport function addCriteria(\n  pathway: Pathway,\n  elementName: string,\n  expected: string,\n  cql: string\n): string {\n  const id = shortid.generate();\n  const criteria: Criteria = {\n    id: id,\n    elementName: elementName,\n    expected: expected,\n    cql: cql\n  };\n  pathway.criteria.push(criteria);\n\n  return id;\n}\n\nexport function setNavigationalElm(pathway: Pathway, elm: object): void {\n  if (!pathway.elm) pathway.elm = {};\n  pathway.elm.navigational = elm;\n}\n\nexport function setCriteriaElm(pathway: Pathway, elm: object): void {\n  if (!pathway.elm) pathway.elm = {};\n  pathway.elm.criteria = elm;\n}\n\nexport function createState(key?: string): State {\n  if (!key) key = shortid.generate();\n  const state: State = {\n    key,\n    label: 'New Node',\n    transitions: [],\n    nodeTypeIsUndefined: true\n  };\n\n  return state;\n}\n\nexport function addState(pathway: Pathway, state: State): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [state.key as string]: state\n    }\n  };\n}\n\nexport function addGuidanceState(pathway: Pathway): Pathway {\n  const state = createState();\n  const newPathway = addState(pathway, state);\n\n  return makeStateGuidance(newPathway, state.key as string);\n}\n\nexport function setStateLabel(pathway: Pathway, key: string, label: string): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        label\n      }\n    }\n  };\n}\n\nexport function setStateNodeType(pathway: Pathway, stateKey: string, nodeType: string): Pathway {\n  switch (nodeType) {\n    case 'action':\n      return makeStateGuidance(pathway, stateKey);\n    case 'branch':\n      return makeStateBranch(pathway, stateKey);\n    default:\n      return pathway;\n  }\n}\n\nexport function setStateCriteriaSource(\n  pathway: Pathway,\n  key: string,\n  criteriaSource: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        criteriaSource\n      }\n    }\n  };\n}\n\nexport function setStateMcodeCriteria(\n  pathway: Pathway,\n  key: string,\n  mcodeCriteria: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        mcodeCriteria\n      }\n    }\n  };\n}\n\nexport function setStateOtherCriteria(\n  pathway: Pathway,\n  key: string,\n  otherCriteria: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        otherCriteria\n      }\n    }\n  };\n}\n\nexport function addTransition(\n  pathway: Pathway,\n  startStateKey: string,\n  endStateKey: string\n): Pathway {\n  const transition: Transition = {\n    id: shortid.generate(),\n    transition: endStateKey\n  };\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [startStateKey]: {\n        ...pathway.states[startStateKey],\n        transitions: [...pathway.states[startStateKey].transitions, transition]\n      }\n    }\n  };\n}\n\nexport function setTransitionCondition(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string,\n  elm: ElmLibrary\n): void {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition)\n    foundTransition.condition = {\n      description: description,\n      cql: getElmStatement(elm).name,\n      elm: elm\n    };\n}\n\nexport function setGuidanceStateElm(pathway: Pathway, key: string, elm: ElmLibrary): void {\n  (pathway.states[key] as GuidanceState).elm = elm;\n  (pathway.states[key] as GuidanceState).cql = getElmStatement(elm).name;\n}\n\n// TODO: possibly add more action methods\nexport function addAction(\n  pathway: Pathway,\n  key: string,\n  type: string,\n  description: string,\n  resource: MedicationRequest | ServiceRequest\n): string {\n  const id = shortid.generate();\n  const action = {\n    id: id,\n    type: type,\n    description: description,\n    resource: resource\n  };\n  (pathway.states[key] as GuidanceState).action.push(action);\n  return id;\n}\n\nexport function getNodeType(pathway: Pathway, key: string | undefined): string {\n  if (!key) {\n    return 'null';\n  }\n  const state = pathway.states[key];\n  if (state.nodeTypeIsUndefined) {\n    return 'null';\n  } else if (!(state as GuidanceState).action && key !== 'Start') {\n    return 'branch';\n  } else {\n    return 'action';\n  }\n}\n\n/*\nSet Element Functions\n*/\nexport function setPathwayName(pathway: Pathway, name: string): void {\n  pathway.name = name;\n}\n\nexport function setPathwayDescription(pathway: Pathway, description: string): void {\n  pathway.description = description;\n}\n\nexport function setLibrary(pathway: Pathway, library: string): void {\n  pathway.library = library;\n}\n\nexport function setTransition(\n  pathway: Pathway,\n  startStateKey: string,\n  endStateKey: string,\n  transitionId: string\n): void {\n  const transition = pathway.states[startStateKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n  if (transition) transition.transition = endStateKey;\n}\n\nexport function setTransitionConditionDescription(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string\n): void {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition?.condition) foundTransition.condition.description = description;\n}\n\nexport function setTransitionConditionElm(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  elm: ElmLibrary\n): void {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition?.condition) {\n    foundTransition.condition.elm = elm;\n    foundTransition.condition.cql = getElmStatement(elm).name;\n  }\n}\n\nexport function setActionType(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  type: string\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.type = type;\n  }\n}\n\nexport function setActionDescription(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  description: string\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.description = description;\n  }\n}\n\nexport function setActionResource(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  resource: MedicationRequest | ServiceRequest\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.resource = resource;\n  }\n}\n\nexport function makeStateGuidance(pathway: Pathway, stateKey: string): Pathway {\n  const state = pathway.states[stateKey] as GuidanceState;\n\n  if (state.cql !== undefined && state.action !== undefined) {\n    return pathway;\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...state,\n        cql: '',\n        action: [],\n        nodeTypeIsUndefined: undefined,\n        criteriaSource: undefined,\n        mcodeCriteria: undefined,\n        otherCriteria: undefined\n      }\n    }\n  };\n}\n\nexport function makeStateBranch(pathway: Pathway, stateKey: string): Pathway {\n  const state = pathway.states[stateKey] as GuidanceState;\n\n  if (\n    state.cql === undefined &&\n    state.elm === undefined &&\n    state.action === undefined &&\n    state.nodeTypeIsUndefined === undefined\n  ) {\n    return pathway;\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...state,\n        cql: undefined,\n        elm: undefined,\n        action: undefined,\n        nodeTypeIsUndefined: undefined\n      }\n    }\n  };\n}\n\n/*\nRemove Element Function\n*/\nexport function removePathwayDescription(pathway: Pathway): void {\n  delete pathway.description;\n}\n\nexport function removeCriteria(pathway: Pathway, id: string): void {\n  const criteria = pathway.criteria.filter((criteria: Criteria) => criteria.id !== id);\n  pathway.criteria = criteria;\n}\n\nexport function removeNavigationalElm(pathway: Pathway): void {\n  delete pathway.elm?.navigational;\n}\n\nexport function removeCriteriaElm(pathway: Pathway): void {\n  delete pathway.elm?.criteria;\n}\n\nexport function removeState(pathway: Pathway, key: string): void {\n  delete pathway.states[key];\n\n  Object.keys(pathway.states).forEach((stateName: string) => {\n    const state = pathway.states[stateName];\n    state.transitions.forEach((transition: Transition) => {\n      if (transition.transition === key)\n        removeTransition(pathway, stateName, transition.id ?? '-1');\n    });\n  });\n}\n\nexport function removeTransitionCondition(\n  pathway: Pathway,\n  stateKey: string,\n  transitionId: string\n): void {\n  const transition = pathway.states[stateKey].transitions.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n  if (transition) delete transition.condition;\n}\n\nexport function removeTransition(pathway: Pathway, stateKey: string, transitionId: string): void {\n  const transitions = pathway.states[stateKey].transitions.filter(\n    (transition: Transition) => transition.id !== transitionId\n  );\n  pathway.states[stateKey].transitions = transitions;\n}\n\nexport function removeAction(pathway: Pathway, stateKey: string, actionId: string): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const actions = (pathway.states[stateKey] as GuidanceState).action.filter(\n      (action: Action) => action.id !== actionId\n    );\n    (pathway.states[stateKey] as GuidanceState).action = actions;\n  }\n}\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding,\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.grey['800'],\n      width: '33%',\n      minWidth: '500px',\n      overflowY: 'scroll',\n      float: 'left'\n    },\n    formControl: {\n      margin: theme.spacing(1, 0),\n      minWidth: 375\n    },\n    divider: {\n      width: '100%'\n    },\n    sidebarHeader: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    sidebarHeaderGroup: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    sidebarHeaderButton: {\n      height: '45px',\n      width: '45px',\n      color: theme.palette.text.primary\n    },\n    headerLabelGroup: {\n      display: 'flex',\n      cursor: 'pointer',\n      height: '60px'\n    },\n    headerLabel: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '1.6em',\n      fontWeight: 700,\n      margin: '0 5px'\n    },\n    headerLabelText: {\n      marginBottom: '5px'\n    },\n    editIcon: {\n      fontSize: '0.6em',\n      marginLeft: '10px'\n    },\n    sidebarButtonGroup: {\n      display: 'flex',\n      margin: '10px 0'\n    },\n    sidebarButton: {\n      minWidth: 180,\n      marginRight: '20px'\n    },\n    sidebarButtonText: {\n      fontStyle: 'italic'\n    },\n    toggleSidebar: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      float: 'left',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      fontSize: '2em',\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    }\n  }),\n  { name: 'Sidebar' }\n);\n","import React, { FC, memo, useCallback, useState, useEffect, useRef, RefObject } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarHeader, BranchNode, ActionNode, NullNode } from '.';\nimport { State, GuidanceState, BranchState, Pathway } from 'pathways-model';\nimport { setStateNodeType, addTransition, createState, addState, getNodeType } from 'utils/builder';\nimport useStyles from './styles';\n\ninterface SidebarProps {\n  pathway: Pathway;\n  updatePathway: (pathway: Pathway) => void;\n  headerElement: RefObject<HTMLDivElement>;\n  currentNode: GuidanceState | BranchState | State;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ pathway, updatePathway, headerElement, currentNode }) => {\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n  const currentNodeKey = currentNode?.key;\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeKey) updatePathway(setStateNodeType(pathway, currentNodeKey, nodeType));\n    },\n    [pathway, updatePathway, currentNodeKey]\n  );\n\n  const redirectToNode = useCallback(\n    nodeKey => {\n      const url = `/builder/${encodeURIComponent(pathway.id)}/node/${encodeURIComponent(nodeKey)}`;\n      if (url !== history.location.pathname) {\n        history.push(url);\n      }\n    },\n    [history, pathway.id]\n  );\n\n  const addNode = useCallback(\n    (nodeType: string): void => {\n      if (!currentNodeKey) return;\n\n      const newState = createState();\n      let newPathway = addState(pathway, newState);\n      newPathway = addTransition(newPathway, currentNodeKey, newState.key as string);\n      newPathway = setStateNodeType(newPathway, newState.key as string, nodeType);\n\n      updatePathway(newPathway);\n      redirectToNode(newState.key);\n    },\n    [pathway, updatePathway, currentNodeKey, redirectToNode]\n  );\n\n  // Set the height of the sidebar container\n  useEffect(() => {\n    if (sidebarContainerElement?.current && headerElement?.current)\n      sidebarContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [isExpanded, headerElement]);\n\n  const nodeType = getNodeType(pathway, currentNodeKey);\n\n  return (\n    <>\n      {isExpanded && (\n        <div className={styles.root} ref={sidebarContainerElement}>\n          <SidebarHeader\n            pathway={pathway}\n            currentNode={currentNode}\n            updatePathway={updatePathway}\n            isTransition={false}\n          />\n\n          <hr className={styles.divider} />\n\n          {nodeType === 'null' && (\n            <NullNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n              addNode={addNode}\n            />\n          )}\n\n          {nodeType === 'action' && (\n            <ActionNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n              addNode={addNode}\n            />\n          )}\n\n          {nodeType === 'branch' && (\n            <BranchNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n              updatePathway={updatePathway}\n            />\n          )}\n        </div>\n      )}\n\n      <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n        <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n      </div>\n    </>\n  );\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faEllipsisH,\n  faChevronLeft,\n  faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input } from '@material-ui/core';\n\nimport { Pathway, State } from 'pathways-model';\nimport { setStateLabel } from 'utils/builder';\nimport useStyles from './styles';\n\ninterface SidebarHeaderProps {\n  pathway: Pathway;\n  currentNode: State;\n  updatePathway: (pathway: Pathway) => void;\n  isTransition: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({\n  pathway,\n  currentNode,\n  updatePathway,\n  isTransition\n}) => {\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const currentNodeKey = currentNode?.key;\n  const currentNodeLabel = currentNode?.label || '';\n  const styles = useStyles();\n\n  const goToParentNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const goToNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const openNodeOptions = useCallback(() => {\n    // TODO\n  }, []);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (currentNodeKey) updatePathway(setStateLabel(pathway, currentNodeKey, label));\n    setShowInput(false);\n  }, [pathway, updatePathway, currentNodeKey]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {currentNodeLabel !== 'Start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={currentNodeLabel}\n                autoFocus\n              />\n            </FormControl>\n          ) : (\n            <div className={clsx(styles.headerLabel, styles.headerLabelText)}>\n              {currentNodeLabel}\n              <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        <IconButton\n          className={styles.sidebarHeaderButton}\n          onClick={isTransition ? goToNode : openNodeOptions}\n          aria-label={isTransition ? 'go to transition node' : 'open node options'}\n        >\n          <FontAwesomeIcon icon={isTransition ? faChevronRight : faEllipsisH} />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\n\ninterface SidebarButtonProps {\n  buttonName: string;\n  buttonIcon: ReactNode;\n  buttonText: string;\n  onClick?: () => void;\n}\n\nconst SidebarButton: FC<SidebarButtonProps> = ({ buttonName, buttonIcon, buttonText, onClick }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.sidebarButtonGroup}>\n      <Button\n        className={styles.sidebarButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={buttonIcon}\n        onClick={onClick}\n      >\n        {buttonName}\n      </Button>\n\n      <div className={styles.sidebarButtonText}>{buttonText}</div>\n    </div>\n  );\n};\n\nexport default memo(SidebarButton);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface DropDownProps {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  value?: string;\n  onChange: Function | null;\n}\n\nconst DropDown: FC<DropDownProps> = ({ id, label, options, value, onChange }: DropDownProps) => {\n  const handleSetSelected = useCallback(\n    (event: ChangeEvent<{ value: unknown }>): void => {\n      if (onChange) onChange(event);\n    },\n    [onChange]\n  );\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n\n      <Select\n        id={`${id}-select`}\n        value={value || ''}\n        onChange={handleSetSelected}\n        label={label}\n        error={value == null || value === ''}\n        MenuProps={{\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          }\n        }}\n        displayEmpty\n      >\n        {options.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(DropDown);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarButton, BranchTransition } from '.';\nimport DropDown from 'components/elements/DropDown';\nimport {\n  setStateCriteriaSource,\n  setStateMcodeCriteria,\n  setStateOtherCriteria,\n  addTransition,\n  createState,\n  addState\n} from 'utils/builder';\nimport { Pathway, BranchState } from 'pathways-model';\nimport useStyles from './styles';\n\nconst nodeTypeOptions = [\n  { value: 'action', label: 'Action' },\n  { value: 'branch', label: 'Branch' }\n];\n\nconst criteriaSourceOptions = [\n  { value: 'mcode', label: 'mCODE' },\n  { value: 'other', label: 'Other' }\n];\n\nconst mCodeCriteriaOptions = [\n  { value: 'tumorCategory', label: 'Tumor Category' },\n  { value: 'nodeCategory', label: 'Node Category' },\n  { value: 'metastatisCategory', label: 'Metastatis Category' }\n];\n\nconst otherCriteriaOptions = [{ value: 'item', label: 'Item' }];\n\ninterface BranchNodeProps {\n  pathway: Pathway;\n  currentNode: BranchState;\n  changeNodeType: (event: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nconst BranchNode: FC<BranchNodeProps> = ({\n  pathway,\n  currentNode,\n  changeNodeType,\n  updatePathway\n}) => {\n  const currentNodeKey = currentNode?.key;\n  const styles = useStyles();\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const selectCriteriaSource = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey) return;\n\n      const criteriaSource = event?.target.value || '';\n      updatePathway(setStateCriteriaSource(pathway, currentNodeKey, criteriaSource));\n    },\n    [currentNodeKey, updatePathway, pathway]\n  );\n\n  const selectMcodeCriteria = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey) return;\n\n      const mcodeCriteria = event?.target.value || '';\n      updatePathway(setStateMcodeCriteria(pathway, currentNodeKey, mcodeCriteria));\n    },\n    [currentNodeKey, updatePathway, pathway]\n  );\n\n  const selectOtherCriteria = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey) return;\n\n      const otherCriteria = event?.target.value || '';\n      updatePathway(setStateOtherCriteria(pathway, currentNodeKey, otherCriteria));\n    },\n    [currentNodeKey, updatePathway, pathway]\n  );\n\n  const handleAddTransition = useCallback((): void => {\n    const newState = createState();\n\n    const newPathway = addState(pathway, newState);\n    updatePathway(addTransition(newPathway, currentNodeKey || '', newState.key as string));\n  }, [pathway, updatePathway, currentNodeKey]);\n\n  const canAddTransition =\n    currentNode.criteriaSource != null && (currentNode.mcodeCriteria || currentNode.otherCriteria);\n\n  return (\n    <>\n      <DropDown\n        id=\"nodeType\"\n        label=\"Node Type\"\n        options={nodeTypeOptions}\n        onChange={selectNodeType}\n        value=\"branch\"\n      />\n\n      <DropDown\n        id=\"criteriaSource\"\n        label=\"Criteria Source\"\n        options={criteriaSourceOptions}\n        onChange={selectCriteriaSource}\n        value={currentNode.criteriaSource}\n      />\n\n      {currentNode.criteriaSource === 'mcode' && (\n        <DropDown\n          id=\"mCodeCriteria\"\n          label=\"mCODE Criteria\"\n          options={mCodeCriteriaOptions}\n          onChange={selectMcodeCriteria}\n          value={currentNode.mcodeCriteria}\n        />\n      )}\n\n      {currentNode.criteriaSource === 'other' && (\n        <DropDown\n          id=\"otherCriteria\"\n          label=\"Other Criteria\"\n          options={otherCriteriaOptions}\n          onChange={selectOtherCriteria}\n          value={currentNode.otherCriteria}\n        />\n      )}\n\n      {currentNode.transitions.map(transition => {\n        return (\n          <BranchTransition\n            key={transition.id}\n            pathway={pathway}\n            transition={transition}\n            updatePathway={updatePathway}\n          />\n        );\n      })}\n\n      {canAddTransition && (\n        <>\n          <hr className={styles.divider} />\n\n          <SidebarButton\n            buttonName=\"Add Transition\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"Add transition logic for a clinical decision within a workflow.\"\n            onClick={handleAddTransition}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(BranchNode);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from '.';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport DropDown from 'components/elements/DropDown';\nimport { Pathway, State } from 'pathways-model';\nimport useStyles from './styles';\n\nconst nodeTypeOptions = [\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\ninterface ActionNodeProps {\n  pathway: Pathway;\n  currentNode: State;\n  changeNodeType: (event: string) => void;\n  addNode: (event: string) => void;\n}\n\nconst ActionNode: FC<ActionNodeProps> = ({ pathway, currentNode, changeNodeType, addNode }) => {\n  const styles = useStyles();\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode.key !== undefined && currentNode.key !== 'Start';\n\n  // If the node does not have transitions it can be added to\n  const displayAddButtons = currentNode.key !== undefined && currentNode.transitions.length === 0;\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <DropDown\n          id=\"nodeType\"\n          label=\"Node Type\"\n          options={nodeTypeOptions}\n          onChange={selectNodeType}\n          value=\"action\"\n        />\n      )}\n      {displayAddButtons && (\n        <>\n          {changeNodeTypeEnabled && <hr className={styles.divider} />}\n          <SidebarButton\n            buttonName=\"Add Action Node\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"Any clinical or workflow step which is not a decision.\"\n            onClick={(): void => addNode('action')}\n          />\n\n          <SidebarButton\n            buttonName=\"Add Branch Node\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"A logical branching point based on clinical or workflow criteria.\"\n            onClick={(): void => addNode('branch')}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNode);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\n\nimport DropDown from 'components/elements/DropDown';\nimport { Pathway, State } from 'pathways-model';\n\nconst nodeTypeOptions = [\n  { label: '', value: '' },\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\ninterface NullNodeProps {\n  pathway: Pathway;\n  currentNode: State;\n  changeNodeType: (event: string) => void;\n  addNode: (event: string) => void;\n}\n\nconst NullNode: FC<NullNodeProps> = ({ pathway, currentNode, changeNodeType, addNode }) => {\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode.key !== undefined && currentNode.key !== 'Start';\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <DropDown\n          id=\"nodeType\"\n          label=\"Node Type\"\n          options={nodeTypeOptions}\n          onChange={selectNodeType}\n          value=\"\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default memo(NullNode);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTools } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarHeader, SidebarButton } from '.';\nimport { Pathway, Transition } from 'pathways-model';\nimport useStyles from './styles';\n\ninterface BranchTransitionProps {\n  pathway: Pathway;\n  transition: Transition;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({ pathway, transition, updatePathway }) => {\n  const styles = useStyles();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway.states[transitionKey];\n\n  return (\n    <>\n      <hr className={styles.divider} />\n\n      <SidebarHeader\n        pathway={pathway}\n        currentNode={transitionNode}\n        updatePathway={updatePathway}\n        isTransition={true}\n      />\n\n      <SidebarButton\n        buttonName=\"Use Criteria\"\n        buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n        buttonText=\"Add previously built or imported criteria logic to branch node.\"\n      />\n\n      <SidebarButton\n        buttonName=\"Build Criteria\"\n        buttonIcon={<FontAwesomeIcon icon={faTools} />}\n        buttonText=\"Create new criteria logic to add to branch node.\"\n      />\n    </>\n  );\n};\n\nexport default memo(BranchTransition);\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const nodeDimension = nodeDimensions[stateName];\n\n    if (nodeDimension) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactElement } from 'react';\nimport { Popup, StrictPopupProps } from 'semantic-ui-react';\nimport styles from './PathwayPopup.module.scss';\n\ninterface PathwayPopupProps {\n  Content: ReactElement;\n  Trigger: ReactElement;\n  popupPosition?: StrictPopupProps['position'];\n  open?: boolean;\n  setOpen?: Function;\n  className?: string;\n}\n\nconst PathwayPopup: FC<PathwayPopupProps> = ({\n  Content,\n  Trigger,\n  popupPosition,\n  open,\n  setOpen,\n  className\n}: PathwayPopupProps) => {\n  return (\n    <Popup\n      content={Content}\n      position={popupPosition || 'bottom right'}\n      className={`${styles.pathwayPopup} ${className}`}\n      on=\"click\"\n      open={open}\n      onOpen={(): void => {\n        setOpen && setOpen(true);\n      }}\n      onClose={(): void => {\n        setOpen && setOpen(false);\n      }}\n      pinned\n      trigger={Trigger}\n    />\n  );\n};\n\nexport default PathwayPopup;\n","import React, { FC } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} button ${type === 'decline' && styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default ActionButton;\n","import React, { FC, useState } from 'react';\nimport styles from './MissingDataPopup.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\ninterface MissingDataPopup {\n  values: string[];\n}\n\nconst MissingDataPopup: FC<MissingDataPopup> = ({ values }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <PathwayPopup\n      Content={<PopupContent values={values} setOpen={setOpen}></PopupContent>}\n      className={styles.missingDataPopup}\n      Trigger={\n        <div className={styles.popupTrigger}>\n          missing data\n          <FontAwesomeIcon icon={faEdit} className={styles.externalLink} />\n        </div>\n      }\n      open={open}\n      setOpen={setOpen}\n    />\n  );\n};\n\ninterface PopupContentProps {\n  values: Array<string>;\n  setOpen: Function;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ values, setOpen }) => {\n  const [showCheck, setShowCheck] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('');\n\n  return (\n    <div>\n      <div className={styles.popupContent}>\n        Select Value:\n        <div>\n          {values.map(e => {\n            return (\n              <div\n                key={e}\n                className={styles.popupChoice + ' ' + (selected === e ? styles.selected : '')}\n                onClick={(): void => {\n                  if (showCheck && selected === e) {\n                    setShowCheck(false);\n                    setSelected('');\n                  } else {\n                    setShowCheck(true);\n                    setSelected(e);\n                  }\n                }}\n              >\n                {e}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n        {showCheck && (\n          <ActionButton\n            size=\"small\"\n            type=\"accept\"\n            onClick={(): void => {\n              setOpen(false);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MissingDataPopup;\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): boolean {\n  const { action } = state as GuidanceState;\n  return action ? action.length > 0 : false;\n}\n\nexport function isBranchState(state: State): boolean {\n  return !isGuidanceState(state) && state.transitions.length > 1;\n}\n","import React, { FC, ReactNode, ReactElement, memo } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MissingDataPopup from 'components/MissingDataPopup';\nimport styles from './ExpandedNode.module.scss';\nimport { isBranchState } from 'utils/nodeUtils';\n\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState;\n  isActionable: boolean;\n  isGuidance: boolean;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(({ pathwayState, isActionable, isGuidance }) => {\n  return (\n    <>\n      <ExpandedNodeMemo isGuidance={isGuidance} pathwayState={pathwayState} />\n    </>\n  );\n});\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\nfunction renderBranch(pathwayState: State): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  const values: string[] = pathwayState.transitions\n    .map(transition => {\n      const description = transition.condition?.description;\n      return description ? description : '';\n    })\n    // Remove duplicate values\n    .filter((v, i, arr) => arr.indexOf(v) === i);\n\n  returnElements.push(\n    <ExpandedNodeField\n      key=\"value\"\n      title=\"Value\"\n      description={<MissingDataPopup values={values} />}\n    />\n  );\n\n  return returnElements;\n}\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\nfunction renderGuidance(pathwayState: GuidanceState): ReactElement[] {\n  const resource = pathwayState.action[0].resource;\n  const coding = isMedicationRequest(resource)\n    ? resource?.medicationCodeableConcept?.coding\n    : resource?.code?.coding;\n\n  const returnElements = [\n    <ExpandedNodeField\n      key=\"Notes\"\n      title=\"Notes\"\n      description={pathwayState.action[0].description}\n    />,\n    <ExpandedNodeField key=\"Type\" title=\"Type\" description={resource.resourceType} />,\n    <ExpandedNodeField\n      key=\"System\"\n      title=\"System\"\n      description={\n        <>\n          {coding && coding[0].system}\n          <a href={coding && coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n          </a>\n        </>\n      }\n    />,\n    <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n    <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />\n  ];\n\n  return returnElements;\n}\n\ninterface ExpandedNodeMemoProps {\n  pathwayState: GuidanceState;\n  isGuidance: boolean;\n}\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(({ pathwayState, isGuidance }) => {\n  const guidance = isGuidance && renderGuidance(pathwayState);\n  const branch = isBranchState(pathwayState) && renderBranch(pathwayState);\n  return (\n    <div className=\"expandedNode\">\n      <table className={styles.infoTable}>\n        <tbody>{guidance || branch}</tbody>\n      </table>\n    </div>\n  );\n});\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo, useCallback } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState } from 'utils/nodeUtils';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faCapsules,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface NodeProps {\n  name: string;\n  pathwayState: State;\n  isCurrentNode: boolean;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClick?: (nodeName: string) => void;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      { name, pathwayState, isCurrentNode, xCoordinate, yCoordinate, expanded = false, onClick },\n      ref\n    ) => {\n      const onClickHandler = useCallback(() => {\n        if (onClick) onClick(name);\n      }, [onClick, name]);\n\n      const { label } = pathwayState;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n\n      const isActionable = isCurrentNode;\n      const topLevelClasses = [styles.node];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push('expanded');\n      if (isActionable) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = styles.childNotActionable;\n      }\n      const isGuidance = isGuidanceState(pathwayState);\n\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div className={`nodeTitle ${onClickHandler && 'clickable'}`} onClick={onClickHandler}>\n            <div className=\"iconAndLabel\">\n              <NodeIcon pathwayState={pathwayState} isGuidance={isGuidance} />\n              {label}\n            </div>\n            <StatusIcon status={null} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode\n                pathwayState={pathwayState as GuidanceState}\n                isActionable={isActionable}\n                isGuidance={isGuidance}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayState: State;\n  isGuidance: boolean;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, isGuidance }) => {\n  let icon: IconProp = faMicroscope;\n  if (pathwayState.label === 'Start') icon = faPlay;\n  if (isGuidance) {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'MedicationAdministration') icon = faCapsules;\n      else if (resourceType === 'Procedure') icon = faSyringe;\n    }\n  }\n  return <FontAwesomeIcon icon={icon} className={styles.icon} />;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status == null) {\n    return null;\n  }\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return (\n    <div className=\"statusIcon\">\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport styles from './Arrow.module.scss';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  widthOffset: number;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, widthOffset }) => {\n  const className = styles.arrow;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={className}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={styles.arrowhead}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import React, {\n  FC,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { Pathway } from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges } from 'graph-model';\nimport styles from './Graph.module.scss';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\ninterface GraphProps {\n  pathway: Pathway;\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n}\n\ninterface ExpandedState {\n  [key: string]: boolean | string | null;\n}\n\nconst Graph: FC<GraphProps> = memo(({ pathway, interactive = true, expandCurrentNode = true }) => {\n  const graphElement = useRef<HTMLDivElement>(null);\n  const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n  const [parentWidth, setParentWidth] = useState<number>(\n    graphElement?.current?.parentElement?.clientWidth ?? 0\n  );\n\n  // Get the layout of the graph\n  const getGraphLayout = useCallback((): Layout => {\n    const nodeDimensions: NodeDimensions = {};\n\n    // Retrieve dimensions from nodeRefs\n    if (nodeRefs?.current) {\n      Object.keys(nodeRefs.current).forEach(key => {\n        const nodeElement = nodeRefs.current[key];\n        const width = nodeElement.clientWidth;\n        // nodeElement can have multiple children so calculate the sum to get the node height\n        const height = Array.from(nodeElement.children).reduce(\n          (acc, child) => acc + child.clientHeight,\n          0\n        );\n\n        nodeDimensions[key] = { width, height };\n      });\n    }\n\n    return graphLayout(pathway, nodeDimensions);\n  }, [pathway]);\n\n  const [layout, setLayout] = useState(getGraphLayout());\n  const { nodeCoordinates, edges } = layout;\n  const maxHeight = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.y)\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates]);\n\n  // If a node has a negative x value, shift nodes and edges to the right by that value\n  const minX =\n    nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.x + parentWidth / 2)\n          .reduce((a, b) => Math.min(a, b))\n      : 0;\n\n  if (minX < 0) {\n    const toAdd = minX * -1;\n    Object.keys(nodeCoordinates).forEach(key => {\n      const node = nodeCoordinates[key];\n      node.x += toAdd;\n    });\n\n    Object.keys(edges).forEach(key => {\n      const edge = edges[key];\n\n      edge.points.forEach(p => (p.x += toAdd));\n      if (edge.label) edge.label.x += toAdd;\n    });\n  }\n\n  const [expanded, setExpanded] = useState<ExpandedState>(() =>\n    Object.keys(layout).reduce(\n      (acc, curr: string) => {\n        acc[curr] = false;\n        return acc;\n      },\n      { lastSelectedNode: null } as ExpandedState\n    )\n  );\n\n  const toggleExpanded = useCallback((key: string) => {\n    setExpanded(prevState => ({\n      ...prevState,\n      [key]:\n        !prevState[key] || prevState.lastSelectedNode === key ? !prevState[key] : prevState[key],\n      lastSelectedNode: key\n    }));\n  }, []);\n\n  // Recalculate graph layout if graph container size changes\n  useEffect(() => {\n    if (graphElement.current?.parentElement) {\n      new ResizeSensor(graphElement.current.parentElement, function() {\n        setParentWidth(graphElement.current?.parentElement?.clientWidth ?? 0);\n        setLayout(getGraphLayout());\n      });\n    }\n  }, [getGraphLayout]);\n\n  // Recalculate graph layout if a node is expanded\n  useEffect(() => {\n    setLayout(getGraphLayout());\n  }, [pathway, expanded, getGraphLayout]);\n\n  // maxWidth finds the edge label that is farthest to the right\n  const maxWidth: number =\n    edges !== undefined\n      ? Object.values(edges)\n          .map(e => e.label)\n          .map(l => (l ? l.x + l.text.length * 10 + parentWidth / 2 : 0))\n          .reduce((a, b) => Math.max(a, b), 0)\n      : parentWidth;\n\n  return (\n    <GraphMemo\n      graphElement={graphElement}\n      interactive={interactive}\n      maxHeight={maxHeight}\n      nodeCoordinates={nodeCoordinates}\n      edges={edges}\n      pathway={pathway}\n      nodeRefs={nodeRefs}\n      parentWidth={parentWidth}\n      maxWidth={maxWidth}\n      expanded={expanded}\n      toggleExpanded={toggleExpanded}\n    />\n  );\n});\n\ninterface GraphMemoProps {\n  graphElement: RefObject<HTMLDivElement>;\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  edges: Edges;\n  pathway: Pathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  expanded: ExpandedState;\n  toggleExpanded: (key: string) => void;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(\n  ({\n    graphElement,\n    interactive,\n    maxHeight,\n    nodeCoordinates,\n    edges,\n    pathway,\n    nodeRefs,\n    parentWidth,\n    maxWidth,\n    expanded,\n    toggleExpanded\n  }) => {\n    const { id: pathwayId } = useParams();\n    const history = useHistory();\n    const redirectToNode = useCallback(\n      nodeId => {\n        const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeId)}`;\n        if (url !== history.location.pathname) {\n          history.push(url);\n        }\n      },\n      [history, pathwayId]\n    );\n    const onClickHandler = useCallback(\n      (nodeName: string) => {\n        if (interactive) {\n          redirectToNode(nodeName);\n          toggleExpanded(nodeName);\n        }\n      },\n      [redirectToNode, toggleExpanded, interactive]\n    );\n\n    return (\n      <div\n        ref={graphElement}\n        id=\"graph-root\"\n        className={styles.root}\n        style={{\n          height: interactive ? maxHeight + 150 : 'inherit',\n          width: maxWidth + 'px',\n          position: 'relative',\n          marginRight: '5px'\n        }}\n      >\n        {nodeCoordinates !== undefined\n          ? Object.keys(nodeCoordinates).map(nodeName => {\n              return (\n                <Node\n                  key={nodeName}\n                  name={nodeName}\n                  ref={(node: HTMLDivElement): void => {\n                    nodeRefs.current[nodeName] = node;\n                  }}\n                  pathwayState={pathway.states[nodeName]}\n                  isCurrentNode={false}\n                  xCoordinate={nodeCoordinates[nodeName].x + parentWidth / 2}\n                  yCoordinate={nodeCoordinates[nodeName].y}\n                  expanded={Boolean(expanded[nodeName])}\n                  onClick={onClickHandler}\n                />\n              );\n            })\n          : []}\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{\n            // Adding 5 pixels to maxWidth so that the rightmost edge label is not cut off\n            width: maxWidth + 5,\n            height: maxHeight,\n            zIndex: 1,\n            top: 0,\n            left: 0,\n            overflow: 'visible'\n          }}\n        >\n          {edges !== undefined\n            ? Object.keys(edges).map(edgeName => {\n                const edge = edges[edgeName];\n                return (\n                  <Arrow\n                    key={edgeName}\n                    edge={edge}\n                    edgeName={edgeName}\n                    widthOffset={parentWidth / 2}\n                  />\n                );\n              })\n            : []}\n        </svg>\n      </div>\n    );\n  }\n);\n\nexport default Graph;\n","import React, { FC, useRef, useEffect, memo } from 'react';\nimport { Pathway, State } from 'pathways-model';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport Graph from 'components/Graph';\nimport { useTheme } from 'components/ThemeProvider';\n\nimport styles from './Builder.module.scss';\n\ninterface BuilderProps {\n  pathway: Pathway;\n  updatePathway: (pathway: Pathway) => void;\n  currentNode: State;\n}\n\nconst Builder: FC<BuilderProps> = ({ pathway, updatePathway, currentNode }) => {\n  const headerElement = useRef<HTMLDivElement>(null);\n  const graphContainerElement = useRef<HTMLDivElement>(null);\n  const theme = useTheme('dark');\n\n  // Set the height of the graph container\n  useEffect(() => {\n    if (graphContainerElement?.current && headerElement?.current)\n      graphContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [pathway, headerElement, graphContainerElement]);\n\n  return (\n    <>\n      <div ref={headerElement}>\n        <Header />\n        <Navigation pathway={pathway} />\n      </div>\n\n      <div className={styles.display}>\n        <MuiThemeProvider theme={theme}>\n          <Sidebar\n            pathway={pathway}\n            updatePathway={updatePathway}\n            headerElement={headerElement}\n            currentNode={currentNode}\n          />\n        </MuiThemeProvider>\n\n        <div ref={graphContainerElement} className={styles.graph}>\n          <Graph pathway={pathway} expandCurrentNode={true} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default memo(Builder);\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Pathway[]>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetPathwaysService from './PathwaysService';\n\ninterface PathwayContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  deletePathway: (id: string) => void;\n  updatePathwayAtIndex: (pathway: Pathway, index: number) => void;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({} as PathwayContextInterface);\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwayProvider: FC<PathwayProviderProps> = memo(({ children }) => {\n  const [pathways, setPathways] = useState<Pathway[]>([]);\n  const service = useGetPathwaysService(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n\n  const addPathway = useCallback((pathway: Pathway) => {\n    setPathways(currentPathways => [...currentPathways, pathway]);\n  }, []);\n\n  const deletePathway = useCallback((id: string) => {\n    setPathways(currentPathways => currentPathways.filter(pathway => pathway.id !== id));\n  }, []);\n\n  const updatePathwayAtIndex = useCallback((pathway: Pathway, index: number) => {\n    setPathways(currentPathways => [\n      ...currentPathways.slice(0, index),\n      pathway,\n      ...currentPathways.slice(index + 1)\n    ]);\n  }, []);\n\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwayContext.Provider\n          value={{\n            pathways,\n            addPathway,\n            deletePathway,\n            updatePathwayAtIndex,\n            status: service.status\n          }}\n        >\n          {children}\n        </PathwayContext.Provider>\n      );\n  }\n});\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import React, { FC, memo, useMemo, useCallback } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { Pathway } from 'pathways-model';\n\nimport Builder from 'components/Builder';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nconst BuilderRoute: FC = () => {\n  const { id, nodeId } = useParams();\n  const { pathways, updatePathwayAtIndex } = usePathwayContext();\n  const pathwayId = decodeURIComponent(id);\n  const pathwayIndex = useMemo(() => pathways.findIndex(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const pathway = pathways[pathwayIndex];\n  const currentNode = pathway?.states?.[decodeURIComponent(nodeId)];\n\n  const updatePathway = useCallback(\n    (pathway: Pathway) => {\n      updatePathwayAtIndex(pathway, pathwayIndex);\n    },\n    [pathwayIndex, updatePathwayAtIndex]\n  );\n\n  if (pathway == null) return null;\n  if (currentNode == null) return <Redirect to={`/builder/${id}/node/Start`} />;\n\n  return <Builder pathway={pathway} updatePathway={updatePathway} currentNode={currentNode} />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import React, {\n  createContext,\n  ReactNode,\n  FC,\n  useState,\n  memo,\n  useContext,\n  useCallback\n} from 'react';\nimport shortid from 'shortid';\nimport { ElmStatement } from 'pathways-model';\n\ninterface Criteria {\n  id: string;\n  label: string;\n  version: string;\n  modified: number;\n  elm: object;\n}\n\ninterface CriteriaContextInterface {\n  criteria: Criteria[];\n  addCriteria: (file: File) => void;\n  deleteCriteria: (id: string) => void;\n}\n\nexport const CriteriaContext = createContext<CriteriaContextInterface>(\n  {} as CriteriaContextInterface\n);\n\ninterface CriteriaProviderProps {\n  children: ReactNode;\n}\n\nexport const CriteriaProvider: FC<CriteriaProviderProps> = memo(({ children }) => {\n  const [criteria, setCriteria] = useState<Criteria[]>([]);\n\n  const addCriteria = useCallback((file: File) => {\n    const reader = new FileReader();\n    reader.onload = (event: ProgressEvent<FileReader>): void => {\n      if (event.target?.result) {\n        const rawElm = event.target.result as string;\n        const elm = JSON.parse(rawElm);\n        if (!elm.library?.identifier) {\n          alert('Please upload ELM file');\n          return;\n        }\n        const defaultStatementNames = [\n          'Patient',\n          'MeetsInclusionCriteria',\n          'InPopulation',\n          'Recommendation',\n          'Rationale',\n          'Errors'\n        ];\n        const elmStatements: ElmStatement[] = elm.library.statements.def;\n        const elmStatement = elmStatements.find(def => !defaultStatementNames.includes(def.name));\n        if (!elmStatement) {\n          alert('No elm statement found in that file');\n          return;\n        }\n        const newCriteria = {\n          id: shortid.generate(),\n          label: elm.library.identifier.id,\n          version: elm.library.identifier.version,\n          modified: Date.now(),\n          elm: elm\n        };\n        setCriteria(currentCriteria => [...currentCriteria, newCriteria]);\n      } else alert('Unable to read that file');\n    };\n    reader.readAsText(file);\n  }, []);\n\n  const deleteCriteria = useCallback((id: string) => {\n    setCriteria(currentCriteria => currentCriteria.filter(criteria => criteria.id !== id));\n  }, []);\n\n  return (\n    <CriteriaContext.Provider value={{ criteria, addCriteria, deleteCriteria }}>\n      {children}\n    </CriteriaContext.Provider>\n  );\n});\n\nexport const useCriteriaContext = (): CriteriaContextInterface => useContext(CriteriaContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    label: {\n      padding: `0.2em 2em`,\n      textTransform: 'none',\n      fontSize: '1.2em',\n      fontWeight: 100\n    }\n  }),\n  { name: 'Tabs' }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Tab as ReactTab, TabList, TabPanel, Tabs as ReactTabs } from 'react-tabs';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport shortid from 'shortid';\n\ninterface Tab {\n  label: string;\n  component: ReactNode;\n}\n\ninterface TabsProp {\n  tabs: Tab[];\n}\n\nconst Tabs: FC<TabsProp> = ({ tabs }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <ReactTabs>\n        <TabList>\n          {tabs.map(tab => (\n            <ReactTab key={shortid.generate()}>\n              <Button classes={{ label: styles.label }}>{tab.label}</Button>\n            </ReactTab>\n          ))}\n        </TabList>\n\n        {tabs.map(tab => (\n          <TabPanel key={shortid.generate()}>{tab.component}</TabPanel>\n        ))}\n      </ReactTabs>\n    </div>\n  );\n};\n\nexport default memo(Tabs);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end'\n    },\n    pathwayList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    }\n  }),\n  { name: 'PathwaysList' }\n);\n","import React, { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nimport useStyles from './styles';\n\nconst PathwaysTable: FC = () => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwayContext();\n\n  return (\n    <TableContainer className={styles.pathwayList}>\n      <Table aria-label=\"pathway list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Pathway Name</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell>Last Updated</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {pathways.map(pathway => (\n            <TableRow key={pathway.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {pathway.name}\n              </TableCell>\n\n              <TableCell>draft</TableCell>\n              <TableCell>2 days ago</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                  component={Link}\n                  to={`/builder/${encodeURIComponent(pathway.id)}`}\n                >\n                  Edit\n                </Button>\n\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                  onClick={(): void => deletePathway(pathway.id)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport useStyles from './styles';\nimport { createNewPathway } from 'utils/builder';\n\ninterface NewPathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst NewPathwayModal: FC<NewPathwayModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway } = usePathwayContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      addPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={handleCreateNewPathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required\n            inputRef={pathwayNameRef}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(NewPathwayModal);\n","import React, { FC, useCallback, useState, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport NewPathwayModal from './NewPathwayModal';\n\nimport useStyles from './styles';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status } = usePathwayContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={openNewPathwayModal}\n      >\n        Create Pathway\n      </Button>\n\n      <NewPathwayModal open={open} onClose={closeNewPathwayModal} />\n      {status === 'loading' ? <Loading /> : <PathwaysTable />}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    buildCriteriaButton: {\n      alignSelf: 'flex-end',\n      marginLeft: '20px'\n    },\n    criteriaList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    input: {\n      display: 'none'\n    },\n    chooseFileInput: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    inputButton: {\n      whiteSpace: 'nowrap',\n      marginRight: '1em'\n    },\n    fileName: {\n      fontStyle: 'italic'\n    }\n  }),\n  { name: 'CriteriaList' }\n);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport useStyles from './styles';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\n\nconst CriteriaTable: FC = () => {\n  const styles = useStyles();\n  const { criteria, deleteCriteria } = useCriteriaContext();\n\n  const renderDate = (datetime: number): string => {\n    return moment(datetime).fromNow();\n  };\n\n  return (\n    <TableContainer className={styles.criteriaList}>\n      <Table aria-label=\"criteria list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Criteria Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>Added</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {criteria.map(c => (\n            <TableRow key={c.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {c.label}\n              </TableCell>\n              <TableCell>{c.version}</TableCell>\n              <TableCell>{renderDate(c.modified)}</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                >\n                  Edit\n                </Button>\n\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                  onClick={(): void => deleteCriteria(c.id)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(CriteriaTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileImport, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input,\n  IconButton\n} from '@material-ui/core';\n\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface ImportCriteriaModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst ImportCriteriaModal: FC<ImportCriteriaModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const [fileName, setFileName] = useState<string>('');\n  const importFileRef = useRef<HTMLInputElement>(null);\n\n  const { addCriteria } = useCriteriaContext();\n\n  const selectFile = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const files = importFileRef?.current?.files;\n      if (files?.length) addCriteria(files[0]);\n      onClose();\n      setFileName('');\n    },\n    [addCriteria, onClose]\n  );\n\n  const handleChooseFile = useCallback(() => {\n    if (importFileRef?.current?.files?.[0]) setFileName(importFileRef.current.files[0].name);\n  }, [importFileRef]);\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"import-criteria\" fullWidth maxWidth=\"sm\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={selectFile}>\n        <DialogContent>\n          <div className={styles.chooseFileInput}>\n            <Input\n              id=\"choose-file-input\"\n              className={styles.input}\n              inputRef={importFileRef}\n              type=\"file\"\n              inputProps={{ accept: '.json' }}\n              onChange={handleChooseFile}\n            />\n\n            <label htmlFor=\"choose-file-input\">\n              <Button\n                className={styles.inputButton}\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n              >\n                Choose File\n              </Button>\n            </label>\n\n            <div className={styles.fileName}>\n              {fileName ? <span>{fileName}</span> : <span>Choose ELM file to import.</span>}\n            </div>\n          </div>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            type=\"submit\"\n          >\n            Import\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(ImportCriteriaModal);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools, faFileImport } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport Loading from 'components/elements/Loading';\nimport CriteriaTable from './CriteriaTable';\nimport ImportCriteriaModal from './ImportCriteriaModal';\n\nimport useStyles from './styles';\n\nconst CriteriaList: FC = () => {\n  const styles = useStyles();\n  const { status } = usePathwayContext();\n\n  const [open, setOpen] = useState<boolean>(false);\n  const openImportModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeImportModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.buttonRow}>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faFileImport} />}\n          onClick={openImportModal}\n        >\n          Import Library\n        </Button>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faTools} />}\n        >\n          Build Criteria\n        </Button>\n      </div>\n\n      <ImportCriteriaModal open={open} onClose={closeImportModal} />\n\n      {status === 'loading' ? <Loading /> : <CriteriaTable />}\n    </div>\n  );\n};\n\nexport default memo(CriteriaList);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\n\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from './ThemeProvider';\nimport { PathwayProvider } from './PathwayProvider';\nimport { UserProvider } from './UserProvider';\nimport { CriteriaProvider } from './CriteriaProvider';\nimport Tabs from './Tabs';\nimport PathwaysList from './PathwaysList';\nimport CriteriaList from './CriteriaList';\n\nconst App: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <PathwayProvider>\n          <CriteriaProvider>\n            <Router>\n              <Switch>\n                <Route path=\"/builder/:id/node/:nodeId\">\n                  <BuilderRoute />\n                </Route>\n                <Route path=\"/builder/:id\">\n                  <BuilderRoute />\n                </Route>\n                <Route path=\"/\">\n                  <Header />\n                  <Tabs\n                    tabs={[\n                      { label: 'Pathway', component: <PathwaysList /> },\n                      { label: 'Criteria', component: <CriteriaList /> }\n                    ]}\n                  />\n                </Route>\n              </Switch>\n            </Router>\n          </CriteriaProvider>\n        </PathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(App);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};"],"sourceRoot":""}