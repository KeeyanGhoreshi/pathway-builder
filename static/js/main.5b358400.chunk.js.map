{"version":3,"sources":["components/Node/Node.module.scss","components/MissingDataPopup/MissingDataPopup.module.scss","components/ExpandedNode/ExpandedNode.module.scss","utils/ConfigManager.js","components/Header/Header.module.scss","components/Builder/Builder.module.scss","components/elements/Loading/Loading.module.scss","camino-logo-dark.png","components/PathwayPopup/PathwayPopup.module.scss","components/Graph/Graph.module.scss","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","utils/builder.ts","components/Navigation/styles.tsx","components/Navigation/Navigation.tsx","components/Sidebar/styles.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarHeader.tsx","components/Sidebar/SidebarButton.tsx","components/elements/DropDown/DropDown.tsx","components/Sidebar/BranchNode.tsx","components/Sidebar/ActionNode.tsx","components/Sidebar/NullNode.tsx","components/CriteriaProvider.tsx","components/Sidebar/BranchTransition.tsx","visualization/layout.ts","components/PathwayPopup/PathwayPopup.tsx","components/ActionButton/ActionButton.tsx","components/MissingDataPopup/MissingDataPopup.tsx","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/styles.tsx","components/Arrow/Arrow.tsx","components/Graph/Graph.tsx","components/Builder/Builder.tsx","components/PathwaysService/PathwaysService.tsx","components/PathwayProvider.tsx","components/BuilderRoute.tsx","components/UserProvider.tsx","components/Tabs/styles.tsx","components/Tabs/Tabs.tsx","components/elements/Loading/Loading.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwaysTable.tsx","components/PathwaysList/NewPathwayModal.tsx","components/PathwaysList/PathwaysList.tsx","components/CriteriaList/styles.tsx","components/CriteriaList/CriteriaTable.tsx","components/CriteriaList/ImportCriteriaModal.tsx","components/CriteriaList/CriteriaList.tsx","components/App.tsx","index.js","components/ActionButton/ActionButton.module.scss"],"names":["module","exports","config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","variables","spacing","globalPadding","colors","white","black","blue","red","gray","grayMedium","grayBlue","grayLighter","grayDark","green","typography","fontFamily","join","materialUiOverridesBase","MuiButton","root","borderRadius","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","backgroundColor","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","color","MuiInputBase","input","transitionDelay","transitionProperty","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","MuiDialogContent","MuiDialogActions","materialUiOverridesDark","borderColor","notchedOutline","MuiMenuItem","paletteBase","primary","main","secondary","error","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","createContext","ThemeProvider","memo","children","useState","setUseProjector","muiTheme","toggleTheme","useCallback","currentUseProjector","Provider","anchorEl","setAnchorEl","useContext","openMenu","event","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","src","logo","alt","onClick","aria-controls","aria-haspopup","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","downloadPathway","pathway","pathwayString","elm","library","identifier","version","schemaIdentifier","usings","def","localIdentifier","uri","localId","locator","statements","expression","type","operand","dataType","includes","valueSets","pathwayToExport","criteria","map","undefined","states","Object","keys","forEach","stateName","state","key","mergeElm","elmStatement","getElmStatement","push","transitions","transition","condition","description","action","navigational","setNavigationalElm","JSON","stringify","exportPathway","pathwayBlob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","additionalElm","using","find","include","path","valueSet","defaultStatementNames","createState","shortid","generate","nodeTypeIsUndefined","addState","setStateNodeType","stateKey","nodeType","makeStateGuidance","cql","makeStateBranch","setStateAction","addTransition","startStateKey","endStateKey","makeStyles","display","alignItems","height","justifyContent","backButton","width","navigationIcons","cursor","pathwayName","marginLeft","Navigation","useStyles","history","useHistory","handleGoBack","IconButton","aria-label","faChevronLeft","faEllipsisH","getContentAnchorEl","anchorOrigin","vertical","horizontal","flexDirection","minWidth","overflowY","float","formControl","divider","headerLabelStart","displayText","sidebarHeader","sidebarHeaderGroup","sidebarHeaderButton","headerLabelGroup","headerLabel","headerLabelText","marginBottom","editIcon","sidebarButtonGroup","sidebarButton","marginRight","sidebarButtonText","toggleSidebar","updatePathway","headerElement","currentNode","isExpanded","setIsExpanded","sidebarContainerElement","useRef","currentNodeKey","changeNodeType","redirectToNode","nodeKey","encodeURIComponent","location","pathname","addNode","newState","newPathway","useEffect","current","style","innerHeight","clientHeight","getNodeType","ref","isTransition","faChevronRight","showInput","setShowInput","inputRef","currentNodeLabel","goToParentNode","goToNode","openNodeOptions","changeNodeLabel","setStateLabel","handleShowInput","handleKeyPress","FormControl","fullWidth","Input","onBlur","onKeyPress","autoFocus","onFocus","target","select","clsx","faEdit","buttonName","buttonIcon","buttonText","Button","variant","startIcon","options","onChange","handleSetSelected","InputLabel","htmlFor","Select","MenuProps","transformOrigin","displayEmpty","option","nodeTypeOptions","selectNodeType","handleAddTransition","faPlus","actionTypeOptions","codeSystemOptions","changeCode","code","resource","medicationCodeableConcept","coding","resetDisplay","changeDescription","actionId","setActionDescription","changeTitle","title","selectActionType","actionType","resourceType","system","selectCodeSystem","codeSystem","validateFunction","onEnter","e","changeNodeTypeEnabled","length","displayAddButtons","TextField","inputProps","faCheckCircle","CriteriaContext","CriteriaProvider","setCriteria","addCriteria","file","reader","FileReader","onload","result","rawElm","parse","alert","newCriteria","modified","Date","now","currentCriteria","readAsText","deleteCriteria","filter","useCriteriaContext","criteriaOptions","c","transitionKey","transitionNode","useCriteriaSelected","setUseCriteriaSelected","handleUseCriteria","selectCriteriaSource","criteriaSource","startNodeKey","transitionId","criteriaLabel","foundTransition","setTransitionCondition","setCriteriaDisplay","criteriaDisplay","setTransitionConditionDescription","faTools","graphLayoutProvider","get","layout","nodeDimensions","nodeNames","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","nodeDimension","setNode","setEdge","nodeCoordinates","startNodeShift","node","x","nodeName","y","edges","edge","edgeName","v","w","start","end","points","p","layoutDagre","nodes","rank","NaN","horizontalPosition","parents","canMove","initializeNodes","graph","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","NODE_HEIGHT","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","NODE_WIDTH","parentsOnHigherRank","parentName","parent","floor","splice","childNode","spreadChildrenEvenly","sum","reduce","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","PathwayPopup","Content","Trigger","popupPosition","setOpen","Popup","content","position","pathwayPopup","on","onOpen","pinned","trigger","LargeActionButton","largeActionButton","largeDecline","toUpperCase","slice","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","faTimes","MediumActionButton","mediumActionButton","ActionButton","size","PopupContent","values","showCheck","setShowCheck","selected","setSelected","popupContent","popupChoice","footer","MissingDataPopup","missingDataPopup","popupTrigger","externalLink","isGuidanceState","isBranchState","resourceNameConversion","MedicationRequest","ServiceRequest","Careplan","ExpandedNode","pathwayState","isGuidance","isActionable","ExpandedNodeMemo","ExpandedNodeField","descTitle","desc","guidance","returnElements","rel","faExternalLinkAlt","renderGuidance","branch","arr","renderBranch","infoTable","Node","forwardRef","xCoordinate","yCoordinate","expanded","hasMetadata","setHasMetadata","onClickHandler","top","left","isCurrentNode","isTransitionOfCurrentBranch","some","topLevelClasses","expandedNodeClass","actionable","childActionable","childNotActionable","status","expandedNode","NodeIcon","faPlay","guidancePathwayState","faPrescriptionBottleAlt","faSyringe","faBookMedical","faMicroscope","StatusIcon","faTimesCircle","arrow","stroke","strokeWidth","currentBranchArrow","arrowhead","fill","currentBranchArrowhead","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","d","markerEnd","Arrow","isCurrentBranchArrow","edgeNameNoWhitespace","replace","markerWidth","markerHeight","refX","refY","orient","interactive","expandCurrentNode","graphElement","nodeRefs","parentElement","clientWidth","parentWidth","setParentWidth","getGraphLayout","nodeElement","Array","from","graphLayout","setLayout","maxHeight","useMemo","max","minX","min","toAdd","maxWidth","curr","lastSelectedNode","setExpanded","toggleExpanded","prevState","ResizeSensor","GraphMemo","pathwayId","useParams","nodeId","xmlns","zIndex","overflow","graphContainerElement","useTheme","useGetPathwaysService","setResult","fetch","headers","Accept","getPathways","then","response","json","listOfFiles","f","typedFetch","listOfPromises","Promise","all","pathwaysList","payload","catch","PathwayContext","PathwayProvider","pathways","setPathways","service","servicePayload","addPathway","currentPathways","deletePathway","updatePathwayAtIndex","index","usePathwayContext","decodeURIComponent","pathwayIndex","findIndex","UserContext","UserProvider","user","setUser","textTransform","tabs","tab","classes","component","faSpinner","spin","createPathwayButton","alignSelf","pathwayList","marginTop","pathwaysListButton","dialogCloseButton","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","align","Link","faFileDownload","faTrashAlt","pathwayNameRef","pathwayDescRef","closeModal","handleCreateNewPathway","preventDefault","Start","createNewPathway","Dialog","aria-labelledby","DialogTitle","disableTypography","onSubmit","DialogContent","required","DialogActions","openNewPathwayModal","closeNewPathwayModal","buttonRow","buildCriteriaButton","criteriaList","editButton","chooseFileInput","inputButton","whiteSpace","fileName","datetime","moment","fromNow","setFileName","importFileRef","selectFile","files","handleChooseFile","faFileImport","openImportModal","closeImportModal","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5b358400.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"actionable\":\"Node_actionable__bHXKd\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childNotActionable\":\"Node_childNotActionable__1bfBq\",\"childActionable\":\"Node_childActionable__SwUjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missingDataPopup\":\"MissingDataPopup_missingDataPopup__A-EBJ\",\"popupContent\":\"MissingDataPopup_popupContent__24BvC\",\"popupTrigger\":\"MissingDataPopup_popupTrigger__11eAy\",\"popupChoice\":\"MissingDataPopup_popupChoice__5oEld\",\"selected\":\"MissingDataPopup_selected__20Or7\",\"footer\":\"MissingDataPopup_footer__1wJXm\",\"externalLink\":\"MissingDataPopup_externalLink__3oYt-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Builder_display__23HzN\",\"graph\":\"Builder_graph__lF-uJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathwayPopup\":\"PathwayPopup_pathwayPopup__2moYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  blue: '#5d89a1',\n  red: '#d95d77',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily: [\n    'Open Sans',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'Roboto',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    'Fira Sans',\n    'Droid Sans',\n    'Helvetica Neue',\n    'sans-serif'\n  ].join(',')\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic',\n      '&.Mui-error': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600\n    },\n    input: {\n      '&::selection': {\n        color: colors.white,\n        backgroundColor: colors.grayDark\n      },\n      '&:-webkit-autofill': {\n        transitionDelay: '9999s',\n        transitionProperty: 'background-color, color'\n      }\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      padding: '1em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      padding: '0 4em'\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      padding: '2em 4em'\n    }\n  }\n};\n\nconst materialUiOverridesDark = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  },\n  MuiMenuItem: {\n    root: {\n      color: colors.grayDark\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLighter\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: '#4a4a4a'\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    text: {\n      primary: colors.white,\n      secondary: colors.white\n    }\n  }),\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" className={styles.homeLink}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import {\n  Pathway,\n  Criteria,\n  State,\n  Transition,\n  Action,\n  GuidanceState,\n  ElmLibrary,\n  ElmStatement\n} from 'pathways-model';\nimport shortid from 'shortid';\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\n\nexport function createNewPathway(name: string, description?: string, pathwayId?: string): Pathway {\n  return {\n    id: pathwayId ?? shortid.generate(),\n    name: name,\n    description: description ?? '',\n    library: '',\n    criteria: [],\n    states: {\n      Start: {\n        key: 'Start',\n        label: 'Start',\n        transitions: []\n      }\n    }\n  };\n}\n\nexport function downloadPathway(pathway: Pathway): void {\n  const pathwayString = exportPathway(pathway);\n  // Create blob from pathwayString to save to file system\n  const pathwayBlob = new Blob([pathwayString], {\n    type: 'application/json'\n  });\n  // Temporarily create hidden <a> tag to download pathwayBlob\n  // File name is set to <pathway-name>.json\n  const url = window.URL.createObjectURL(pathwayBlob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `${pathway.name}.json`;\n  a.click();\n  window.URL.revokeObjectURL(url);\n}\n\nexport function exportPathway(pathway: Pathway): string {\n  const elm: ElmLibrary = {\n    library: {\n      identifier: {\n        id: pathway.id,\n        version: '1.0.0'\n      },\n      schemaIdentifier: {\n        id: 'urn:hl7-org:elm',\n        version: 'r1'\n      },\n      usings: {\n        def: [\n          {\n            localIdentifier: 'System',\n            uri: 'urn:hl7-org:elm-types:r1'\n          },\n          {\n            localId: '1',\n            locator: '3:1-3:26',\n            localIdentifier: 'FHIR',\n            uri: 'http://hl7.org/fhir',\n            version: '4.0.0'\n          }\n        ]\n      },\n      statements: {\n        def: [\n          {\n            locator: '13:1-13:15',\n            name: 'Patient',\n            context: 'Patient',\n            expression: {\n              type: 'SingletonFrom',\n              operand: {\n                locator: '13:1-13:15',\n                dataType: '{http://hl7.org/fhir}Patient',\n                type: 'Retrieve'\n              }\n            }\n          }\n        ]\n      },\n      includes: { def: [] },\n      valueSets: { def: [] }\n    }\n  };\n\n  const pathwayToExport: Pathway = {\n    ...pathway,\n    // Strip id from each criteria\n    criteria: pathway.criteria.map((criteria: Criteria) => ({ ...criteria, id: undefined })),\n    states: { ...pathway.states }\n  };\n\n  Object.keys(pathwayToExport.states).forEach((stateName: string) => {\n    const state = pathway.states[stateName];\n    if ('elm' in state && state.elm && state.key) {\n      mergeElm(elm, state.elm);\n      const elmStatement = getElmStatement(state.elm);\n      elmStatement.name = state.key;\n      elm.library.statements.def.push(elmStatement);\n    }\n\n    pathwayToExport.states[stateName] = {\n      ...pathwayToExport.states[stateName],\n      // Strip key from each state\n      key: undefined,\n      elm: undefined,\n      // Strip id from each state.transition\n      transitions: state.transitions.map((transition: Transition) => {\n        if (transition.condition?.elm) {\n          // Add tranistion.condition.elm to elm\n          mergeElm(elm, transition.condition.elm);\n          const elmStatement = getElmStatement(transition.condition.elm);\n          elmStatement.name = transition.condition.description;\n          elm.library.statements.def.push(elmStatement);\n        }\n        return {\n          ...transition,\n          id: undefined,\n          condition: transition.condition ? { ...transition.condition, elm: undefined } : undefined\n        };\n      }),\n      // Strip id from each state.action\n      action:\n        (state as GuidanceState).action == null\n          ? undefined\n          : (state as GuidanceState).action.map((action: Action) => ({\n              ...action,\n              id: undefined\n            }))\n    };\n  });\n\n  setNavigationalElm(pathwayToExport, elm);\n\n  return JSON.stringify(pathwayToExport, undefined, 2);\n}\n\nfunction mergeElm(elm: ElmLibrary, additionalElm: ElmLibrary): void {\n  // Merge usings\n  additionalElm.library.usings?.def.forEach(using => {\n    // Check if it is in ELM\n    if (!elm.library.usings.def.find(def => def.uri === using.uri))\n      elm.library.usings.def.push(using);\n  });\n\n  // Merge includes\n  additionalElm.library.includes?.def.forEach(include => {\n    if (!elm.library.includes.def.find(def => def.path === include.path))\n      elm.library.includes.def.push(include);\n  });\n\n  // Merge valueSets\n  additionalElm.library.valueSets?.def.forEach(valueSet => {\n    if (!elm.library.valueSets.def.find(def => def.id === valueSet.id))\n      elm.library.valueSets.def.push(valueSet);\n  });\n  // TODO: merge code, codesystem, and concepts\n}\n\nfunction getElmStatement(elm: ElmLibrary): ElmStatement {\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatement = elm.library.statements.def.find(\n    def => !defaultStatementNames.includes(def.name)\n  );\n\n  // elmStatement type is ElmStatement | undefined but criteria\n  // provider validates such a statement exists in the elm\n  return elmStatement as ElmStatement;\n}\n\n// TODO: possibly add more criteria methods\nexport function addCriteria(\n  pathway: Pathway,\n  elementName: string,\n  expected: string,\n  cql: string\n): string {\n  const id = shortid.generate();\n  const criteria: Criteria = {\n    id: id,\n    elementName: elementName,\n    expected: expected,\n    cql: cql\n  };\n  pathway.criteria.push(criteria);\n\n  return id;\n}\n\nexport function setNavigationalElm(pathway: Pathway, elm: object): void {\n  if (!pathway.elm) pathway.elm = {};\n  pathway.elm.navigational = elm;\n}\n\nexport function setCriteriaElm(pathway: Pathway, elm: object): void {\n  if (!pathway.elm) pathway.elm = {};\n  pathway.elm.criteria = elm;\n}\n\nexport function createState(key?: string): State {\n  if (!key) key = shortid.generate();\n  const state: State = {\n    key,\n    label: 'New Node',\n    transitions: [],\n    nodeTypeIsUndefined: true\n  };\n\n  return state;\n}\n\nexport function addState(pathway: Pathway, state: State): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [state.key as string]: state\n    }\n  };\n}\n\nexport function addGuidanceState(pathway: Pathway): Pathway {\n  const state = createState();\n  const newPathway = addState(pathway, state);\n\n  return makeStateGuidance(newPathway, state.key as string);\n}\n\nexport function setStateLabel(pathway: Pathway, key: string, label: string): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        label\n      }\n    }\n  };\n}\n\nexport function setStateNodeType(pathway: Pathway, stateKey: string, nodeType: string): Pathway {\n  switch (nodeType) {\n    case 'action':\n      return makeStateGuidance(pathway, stateKey);\n    case 'branch':\n      return makeStateBranch(pathway, stateKey);\n    default:\n      return pathway;\n  }\n}\n\nexport function setStateCriteriaSource(\n  pathway: Pathway,\n  key: string,\n  criteriaSource: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        criteriaSource\n      }\n    }\n  };\n}\n\nexport function setStateAction(pathway: Pathway, key: string, action: Action[]): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        action\n      }\n    }\n  };\n}\n\nexport function setStateMcodeCriteria(\n  pathway: Pathway,\n  key: string,\n  mcodeCriteria: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        mcodeCriteria\n      }\n    }\n  };\n}\n\nexport function setStateOtherCriteria(\n  pathway: Pathway,\n  key: string,\n  otherCriteria: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        otherCriteria\n      }\n    }\n  };\n}\n\nexport function addTransition(\n  pathway: Pathway,\n  startStateKey: string,\n  endStateKey: string\n): Pathway {\n  const transition: Transition = {\n    id: shortid.generate(),\n    transition: endStateKey\n  };\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [startStateKey]: {\n        ...pathway.states[startStateKey],\n        transitions: [...pathway.states[startStateKey].transitions, transition]\n      }\n    }\n  };\n}\n\nexport function setTransitionCondition(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string,\n  elm: ElmLibrary,\n  criteriaLabel?: string\n): Pathway {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  const cql = criteriaLabel ? criteriaLabel : getElmStatement(elm).name;\n\n  if (foundTransition)\n    foundTransition.condition = {\n      description: description,\n      cql: cql,\n      elm: elm\n    };\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [startNodeKey]: {\n        ...pathway.states[startNodeKey]\n      }\n    }\n  };\n}\n\nexport function setGuidanceStateElm(pathway: Pathway, key: string, elm: ElmLibrary): void {\n  (pathway.states[key] as GuidanceState).elm = elm;\n  (pathway.states[key] as GuidanceState).cql = getElmStatement(elm).name;\n}\n\n// TODO: possibly add more action methods\nexport function addAction(\n  pathway: Pathway,\n  key: string,\n  type: string,\n  description: string,\n  resource: MedicationRequest | ServiceRequest\n): string {\n  const id = shortid.generate();\n  const action = {\n    id: id,\n    type: type,\n    description: description,\n    resource: resource\n  };\n  (pathway.states[key] as GuidanceState).action.push(action);\n  return id;\n}\n\nexport function getNodeType(pathway: Pathway, key: string | undefined): string {\n  if (!key) {\n    return 'null';\n  }\n  const state = pathway.states[key];\n  if (state.nodeTypeIsUndefined) {\n    return 'null';\n  } else if (!(state as GuidanceState).action && key !== 'Start') {\n    return 'branch';\n  } else {\n    return 'action';\n  }\n}\n\n/*\nSet Element Functions\n*/\nexport function setPathwayName(pathway: Pathway, name: string): void {\n  pathway.name = name;\n}\n\nexport function setPathwayDescription(pathway: Pathway, description: string): void {\n  pathway.description = description;\n}\n\nexport function setLibrary(pathway: Pathway, library: string): void {\n  pathway.library = library;\n}\n\nexport function setTransition(\n  pathway: Pathway,\n  startStateKey: string,\n  endStateKey: string,\n  transitionId: string\n): void {\n  const transition = pathway.states[startStateKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n  if (transition) transition.transition = endStateKey;\n}\n\nexport function setTransitionConditionDescription(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string\n): Pathway {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition?.condition) {\n    foundTransition.condition.description = description;\n  } else if (foundTransition) {\n    foundTransition.condition = {\n      description: description,\n      cql: ''\n    };\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [startNodeKey]: {\n        ...pathway.states[startNodeKey]\n      }\n    }\n  };\n}\n\nexport function setTransitionConditionElm(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  elm: ElmLibrary\n): void {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition?.condition) {\n    foundTransition.condition.elm = elm;\n    foundTransition.condition.cql = getElmStatement(elm).name;\n  }\n}\n\nexport function setActionType(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  type: string\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.type = type;\n  }\n}\n\nexport function setActionDescription(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  description: string\n): void {\n  const state = (pathway.states[stateKey] as GuidanceState).action;\n\n  if (state) {\n    const action = state.find((action: Action) => action.id === actionId);\n    if (action) {\n      action.description = description;\n    }\n  }\n}\n\nexport function setActionResource(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  resource: MedicationRequest | ServiceRequest\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.resource = resource;\n  }\n}\n\nexport function makeStateGuidance(pathway: Pathway, stateKey: string): Pathway {\n  const state = pathway.states[stateKey] as GuidanceState;\n\n  if (state.cql !== undefined && state.action !== undefined) {\n    return pathway;\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...state,\n        cql: '',\n        action: [],\n        nodeTypeIsUndefined: undefined\n      }\n    }\n  };\n}\n\nexport function makeStateBranch(pathway: Pathway, stateKey: string): Pathway {\n  const state = pathway.states[stateKey] as GuidanceState;\n\n  if (\n    state.cql === undefined &&\n    state.elm === undefined &&\n    state.action === undefined &&\n    state.nodeTypeIsUndefined === undefined\n  ) {\n    return pathway;\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...state,\n        cql: undefined,\n        elm: undefined,\n        action: undefined,\n        nodeTypeIsUndefined: undefined\n      }\n    }\n  };\n}\n\n/*\nRemove Element Function\n*/\nexport function removePathwayDescription(pathway: Pathway): void {\n  delete pathway.description;\n}\n\nexport function removeCriteria(pathway: Pathway, id: string): void {\n  const criteria = pathway.criteria.filter((criteria: Criteria) => criteria.id !== id);\n  pathway.criteria = criteria;\n}\n\nexport function removeNavigationalElm(pathway: Pathway): void {\n  delete pathway.elm?.navigational;\n}\n\nexport function removeCriteriaElm(pathway: Pathway): void {\n  delete pathway.elm?.criteria;\n}\n\nexport function removeState(pathway: Pathway, key: string): void {\n  delete pathway.states[key];\n\n  Object.keys(pathway.states).forEach((stateName: string) => {\n    const state = pathway.states[stateName];\n    state.transitions.forEach((transition: Transition) => {\n      if (transition.transition === key)\n        removeTransition(pathway, stateName, transition.id ?? '-1');\n    });\n  });\n}\n\nexport function removeTransitionCondition(\n  pathway: Pathway,\n  stateKey: string,\n  transitionId: string\n): void {\n  const transition = pathway.states[stateKey].transitions.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n  if (transition) delete transition.condition;\n}\n\nexport function removeTransition(pathway: Pathway, stateKey: string, transitionId: string): void {\n  const transitions = pathway.states[stateKey].transitions.filter(\n    (transition: Transition) => transition.id !== transitionId\n  );\n  pathway.states[stateKey].transitions = transitions;\n}\n\nexport function removeAction(pathway: Pathway, stateKey: string, actionId: string): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const actions = (pathway.states[stateKey] as GuidanceState).action.filter(\n      (action: Action) => action.id !== actionId\n    );\n    (pathway.states[stateKey] as GuidanceState).action = actions;\n  }\n}\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em',\n      justifyContent: 'space-between'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    navigationIcons: {\n      fontSize: '20px',\n      color: theme.palette.grey['800'],\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation' }\n);\n","import React, { FC, useCallback, useState, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\n\nimport { Pathway } from 'pathways-model';\nimport { downloadPathway } from 'utils/builder';\nimport useStyles from './styles';\n\ninterface Props {\n  pathway: Pathway;\n}\n\nconst Navigation: FC<Props> = ({ pathway }) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const styles = useStyles();\n  const history = useHistory();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleGoBack = useCallback((): void => {\n    history.push('/');\n  }, [history]);\n\n  return (\n    <nav className={styles.root}>\n      <div>\n        <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n          <FontAwesomeIcon icon={faChevronLeft} className={styles.navigationIcons} />\n        </IconButton>\n\n        <span className={styles.pathwayName}>{pathway?.name}</span>\n      </div>\n      <IconButton onClick={openMenu} aria-controls=\"pathway-options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faEllipsisH} className={styles.navigationIcons} />\n      </IconButton>\n      <Menu\n        id=\"pathway-options-menu\"\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem\n          onClick={(): void => {\n            downloadPathway(pathway);\n            closeMenu();\n          }}\n        >\n          Export Pathway\n        </MenuItem>\n      </Menu>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding,\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.grey['800'],\n      width: '33%',\n      minWidth: '500px',\n      overflowY: 'scroll',\n      float: 'left'\n    },\n    formControl: {\n      margin: theme.spacing(1, 0),\n      minWidth: 375\n    },\n    divider: {\n      width: '100%'\n    },\n    headerLabelStart: {\n      cursor: 'default'\n    },\n    displayText: {\n      margin: '0 0 5px 0',\n      fontWeight: 900,\n      fontSize: '1em'\n    },\n    sidebarHeader: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    sidebarHeaderGroup: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    sidebarHeaderButton: {\n      height: '45px',\n      width: '45px',\n      color: theme.palette.text.primary\n    },\n    headerLabelGroup: {\n      display: 'flex',\n      cursor: 'pointer',\n      height: '60px'\n    },\n    headerLabel: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '1.6em',\n      fontWeight: 700,\n      margin: '0 5px'\n    },\n    headerLabelText: {\n      marginBottom: '5px'\n    },\n    editIcon: {\n      fontSize: '0.6em',\n      marginLeft: '10px'\n    },\n    sidebarButtonGroup: {\n      display: 'flex',\n      margin: '10px 0'\n    },\n    sidebarButton: {\n      minWidth: 180,\n      marginRight: '20px'\n    },\n    sidebarButtonText: {\n      fontStyle: 'italic'\n    },\n    toggleSidebar: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      float: 'left',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      fontSize: '2em',\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    }\n  }),\n  { name: 'Sidebar' }\n);\n","import React, { FC, memo, useCallback, useState, useEffect, useRef, RefObject } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarHeader, BranchNode, ActionNode, NullNode } from '.';\nimport { State, GuidanceState, BranchState, Pathway } from 'pathways-model';\nimport { setStateNodeType, addTransition, createState, addState, getNodeType } from 'utils/builder';\nimport useStyles from './styles';\n\ninterface SidebarProps {\n  pathway: Pathway;\n  updatePathway: (pathway: Pathway) => void;\n  headerElement: RefObject<HTMLDivElement>;\n  currentNode: GuidanceState | BranchState | State;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ pathway, updatePathway, headerElement, currentNode }) => {\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n  const currentNodeKey = currentNode?.key;\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeKey) updatePathway(setStateNodeType(pathway, currentNodeKey, nodeType));\n    },\n    [pathway, updatePathway, currentNodeKey]\n  );\n\n  const redirectToNode = useCallback(\n    nodeKey => {\n      const url = `/builder/${encodeURIComponent(pathway.id)}/node/${encodeURIComponent(nodeKey)}`;\n      if (url !== history.location.pathname) {\n        history.push(url);\n      }\n    },\n    [history, pathway.id]\n  );\n\n  const addNode = useCallback(\n    (nodeType: string): void => {\n      if (!currentNodeKey) return;\n\n      const newState = createState();\n      let newPathway = addState(pathway, newState);\n      newPathway = addTransition(newPathway, currentNodeKey, newState.key as string);\n      newPathway = setStateNodeType(newPathway, newState.key as string, nodeType);\n      updatePathway(newPathway);\n      redirectToNode(newState.key);\n    },\n    [pathway, updatePathway, currentNodeKey, redirectToNode]\n  );\n\n  // Set the height of the sidebar container\n  useEffect(() => {\n    if (sidebarContainerElement?.current && headerElement?.current)\n      sidebarContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [isExpanded, headerElement]);\n\n  const nodeType = getNodeType(pathway, currentNodeKey);\n  return (\n    <>\n      {isExpanded && (\n        <div className={styles.root} ref={sidebarContainerElement}>\n          <SidebarHeader\n            pathway={pathway}\n            currentNode={currentNode}\n            updatePathway={updatePathway}\n            isTransition={false}\n          />\n\n          <hr className={styles.divider} />\n\n          {nodeType === 'null' && (\n            <NullNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n              addNode={addNode}\n            />\n          )}\n\n          {nodeType === 'action' && (\n            <ActionNode\n              pathway={pathway}\n              currentNode={currentNode as GuidanceState}\n              changeNodeType={changeNodeType}\n              updatePathway={updatePathway}\n              addNode={addNode}\n            />\n          )}\n\n          {nodeType === 'branch' && (\n            <BranchNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n              updatePathway={updatePathway}\n            />\n          )}\n        </div>\n      )}\n\n      <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n        <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n      </div>\n    </>\n  );\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent, FocusEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faEllipsisH,\n  faChevronLeft,\n  faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input } from '@material-ui/core';\n\nimport { Pathway, State } from 'pathways-model';\nimport { setStateLabel } from 'utils/builder';\nimport useStyles from './styles';\n\ninterface SidebarHeaderProps {\n  pathway: Pathway;\n  currentNode: State;\n  updatePathway: (pathway: Pathway) => void;\n  isTransition: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({\n  pathway,\n  currentNode,\n  updatePathway,\n  isTransition\n}) => {\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const currentNodeKey = currentNode?.key;\n  const currentNodeLabel = currentNode?.label || '';\n  const styles = useStyles();\n\n  const goToParentNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const goToNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const openNodeOptions = useCallback(() => {\n    // TODO\n  }, []);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (currentNodeKey) updatePathway(setStateLabel(pathway, currentNodeKey, label));\n    setShowInput(false);\n  }, [pathway, updatePathway, currentNodeKey]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {currentNodeKey !== 'Start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput && currentNodeKey !== 'Start' ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={currentNodeLabel}\n                autoFocus\n                onFocus={(event: FocusEvent<HTMLInputElement>): void => event.target.select()}\n              />\n            </FormControl>\n          ) : (\n            <div\n              className={clsx(\n                styles.headerLabel,\n                styles.headerLabelText,\n                currentNodeKey === 'Start' && styles.headerLabelStart\n              )}\n            >\n              {currentNodeLabel}\n              {currentNodeKey !== 'Start' && (\n                <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        <IconButton\n          className={styles.sidebarHeaderButton}\n          onClick={isTransition ? goToNode : openNodeOptions}\n          aria-label={isTransition ? 'go to transition node' : 'open node options'}\n        >\n          <FontAwesomeIcon icon={isTransition ? faChevronRight : faEllipsisH} />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\n\ninterface SidebarButtonProps {\n  buttonName: string;\n  buttonIcon: ReactNode;\n  buttonText: string;\n  onClick?: () => void;\n}\n\nconst SidebarButton: FC<SidebarButtonProps> = ({ buttonName, buttonIcon, buttonText, onClick }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.sidebarButtonGroup}>\n      <Button\n        className={styles.sidebarButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={buttonIcon}\n        onClick={onClick}\n      >\n        {buttonName}\n      </Button>\n\n      <div className={styles.sidebarButtonText}>{buttonText}</div>\n    </div>\n  );\n};\n\nexport default memo(SidebarButton);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface DropDownProps {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  value?: string;\n  onChange: Function | null;\n}\n\nconst DropDown: FC<DropDownProps> = ({ id, label, options, value, onChange }: DropDownProps) => {\n  const handleSetSelected = useCallback(\n    (event: ChangeEvent<{ value: unknown }>): void => {\n      if (onChange) onChange(event);\n    },\n    [onChange]\n  );\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n\n      <Select\n        id={`${id}-select`}\n        value={value || ''}\n        onChange={handleSetSelected}\n        label={label}\n        error={value == null || value === ''}\n        MenuProps={{\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          }\n        }}\n        displayEmpty\n      >\n        {options.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(DropDown);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarButton, BranchTransition } from '.';\nimport DropDown from 'components/elements/DropDown';\nimport { addTransition, createState, addState } from 'utils/builder';\nimport { Pathway, State } from 'pathways-model';\nimport useStyles from './styles';\n\nconst nodeTypeOptions = [\n  { value: 'action', label: 'Action' },\n  { value: 'branch', label: 'Branch' }\n];\n\ninterface BranchNodeProps {\n  pathway: Pathway;\n  currentNode: State;\n  changeNodeType: (event: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nconst BranchNode: FC<BranchNodeProps> = ({\n  pathway,\n  currentNode,\n  changeNodeType,\n  updatePathway\n}) => {\n  const currentNodeKey = currentNode?.key;\n  const styles = useStyles();\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const handleAddTransition = useCallback((): void => {\n    const newState = createState();\n\n    const newPathway = addState(pathway, newState);\n    updatePathway(addTransition(newPathway, currentNodeKey || '', newState.key as string));\n  }, [pathway, updatePathway, currentNodeKey]);\n\n  return (\n    <>\n      <DropDown\n        id=\"nodeType\"\n        label=\"Node Type\"\n        options={nodeTypeOptions}\n        onChange={selectNodeType}\n        value=\"branch\"\n      />\n      {currentNode.transitions.map(transition => {\n        return (\n          <BranchTransition\n            key={transition.id}\n            pathway={pathway}\n            currentNodeKey={currentNodeKey || ''}\n            transition={transition}\n            updatePathway={updatePathway}\n          />\n        );\n      })}\n\n      <hr className={styles.divider} />\n\n      <SidebarButton\n        buttonName=\"Add Transition\"\n        buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n        buttonText=\"Add transition logic for a clinical decision within a workflow.\"\n        onClick={handleAddTransition}\n      />\n    </>\n  );\n};\n\nexport default memo(BranchNode);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from '.';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { setStateAction, setActionDescription } from 'utils/builder';\nimport DropDown from 'components/elements/DropDown';\nimport { Pathway, GuidanceState, Action } from 'pathways-model';\nimport useStyles from './styles';\nimport shortid from 'shortid';\nimport { TextField } from '@material-ui/core';\n\nconst nodeTypeOptions = [\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\nconst actionTypeOptions = [\n  { label: 'Medication', value: 'MedicationRequest' },\n  { label: 'Procedure', value: 'ServiceRequest' },\n  { label: 'Regimen', value: 'Careplan' }\n];\n\nconst codeSystemOptions = [\n  { label: 'ICD-9-CM', value: 'http://hl7.org/fhir/sid/icd-9-cm' },\n  { label: 'ICD-10-CM', value: 'http://hl7.org/fhir/sid/icd-10-cm' },\n  { label: 'LOINC', value: 'http://loinc.org' },\n  { label: 'NCI', value: 'http://ncimeta.nci.nih.gov' },\n  { label: 'RXNORM', value: 'http://www.nlm.nih.gov/research/umls/rxnorm' },\n  { label: 'SNOMED', value: 'http://snomed.info/sct' }\n];\n\ninterface ActionNodeProps {\n  pathway: Pathway;\n  currentNode: GuidanceState;\n  changeNodeType: (event: string) => void;\n  addNode: (event: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nconst ActionNode: FC<ActionNodeProps> = ({\n  pathway,\n  currentNode,\n  changeNodeType,\n  addNode,\n  updatePathway\n}) => {\n  const styles = useStyles();\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const changeCode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const code = event?.target.value || '';\n      const action: Action = currentNode.action[0];\n      if (action.resource.medicationCodeableConcept) {\n        action.resource.medicationCodeableConcept.coding[0].code = code;\n      } else {\n        action.resource.code.coding[0].code = code;\n      }\n      resetDisplay(action);\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const changeDescription = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const description = event?.target.value || '';\n      const actionId = currentNode.action[0].id; // TODO: change this for supporting multiple action\n      if (actionId) {\n        setActionDescription(pathway, currentNode.key, actionId, description);\n        updatePathway(setStateAction(pathway, currentNode.key, currentNode.action));\n      }\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const changeTitle = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const title = event?.target.value || '';\n      const action = currentNode.action[0];\n      action.resource.title = title;\n      resetDisplay(action);\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const selectActionType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n      const value = event?.target.value || '';\n      const actionType = actionTypeOptions.find(option => {\n        return option.value === value;\n      });\n      let action: Action;\n      if (actionType?.value === 'Careplan') {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            title: ''\n          }\n        };\n      } else if (actionType?.value === 'MedicationRequest') {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            medicationCodeableConcept: {\n              coding: [\n                {\n                  system: '',\n                  code: '',\n                  display: ''\n                }\n              ]\n            }\n          }\n        };\n      } else {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            code: {\n              coding: [\n                {\n                  system: '',\n                  code: '',\n                  display: ''\n                }\n              ]\n            }\n          }\n        };\n      }\n\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const selectCodeSystem = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const codeSystem = event?.target.value || '';\n      const action = currentNode.action[0];\n      if (action.resource.medicationCodeableConcept) {\n        action.resource.medicationCodeableConcept.coding[0].system = codeSystem;\n      } else {\n        action.resource.code.coding[0].system = codeSystem;\n      }\n      resetDisplay(action);\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const validateFunction = (): void => {\n    if (!currentNode.key) return;\n\n    const action = currentNode.action[0];\n    if (action.resource.medicationCodeableConcept) {\n      action.resource.medicationCodeableConcept.coding[0].display = 'Example display text';\n    } else if (action.resource.resourceType === 'Careplan') {\n      action.resource.description = 'Example Careplan Text';\n    } else {\n      action.resource.code.coding[0].display = 'Example display text'; // TODO: actually validate\n    }\n    updatePathway(setStateAction(pathway, currentNode.key, [action]));\n  };\n\n  const resetDisplay = (action: Action): void => {\n    if (action.resource.medicationCodeableConcept) {\n      action.resource.medicationCodeableConcept.coding[0].display = '';\n    } else if (action.resource.resourceType === 'Careplan') {\n      action.resource.description = '';\n    } else {\n      action.resource.code.coding[0].display = ''; // TODO: actually validate\n    }\n  };\n  const onEnter = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      validateFunction();\n    }\n  };\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode.key !== undefined && currentNode.key !== 'Start';\n\n  const action = currentNode.action;\n  const resource = action?.length > 0 && action[0].resource;\n  let system = '';\n  let code = '';\n  let display = '';\n  if (resource.resourceType === 'MedicationRequest' || resource.resourceType === 'ServiceRequest') {\n    system = resource.code\n      ? resource.code.coding[0].system\n      : resource.medicationCodeableConcept.coding[0].system;\n    code = resource.code\n      ? resource.code.coding[0].code\n      : resource.medicationCodeableConcept.coding[0].code;\n    display = resource.code\n      ? resource.code.coding[0].display\n      : resource.medicationCodeableConcept.coding[0].display;\n  } else {\n    display = resource.description;\n  }\n  // If the node does not have transitions it can be added to\n  const displayAddButtons = currentNode.key !== undefined && currentNode.transitions.length === 0;\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <DropDown\n            id=\"nodeType\"\n            label=\"Node Type\"\n            options={nodeTypeOptions}\n            onChange={selectNodeType}\n            value=\"action\"\n          />\n          <DropDown\n            id=\"actionType\"\n            label=\"Action Type\"\n            options={actionTypeOptions}\n            onChange={selectActionType}\n            value={resource && resource.resourceType}\n          />\n          {(resource.resourceType === 'MedicationRequest' ||\n            resource.resourceType === 'ServiceRequest') && (\n            <>\n              <DropDown\n                id=\"codeSystem\"\n                label=\"Code System\"\n                options={codeSystemOptions}\n                onChange={selectCodeSystem}\n                value={system}\n              />\n              {system && (\n                <TextField\n                  id=\"code-input\"\n                  label=\"Code\"\n                  value={code}\n                  onChange={changeCode}\n                  variant=\"outlined\"\n                  error={code === ''}\n                  inputProps={{ onKeyPress: onEnter }}\n                />\n              )}\n              {code && (\n                <>\n                  {display ? (\n                    <div className={styles.displayText}>\n                      <FontAwesomeIcon icon={faCheckCircle} /> {display}\n                    </div>\n                  ) : (\n                    <SidebarButton\n                      buttonName=\"Validate\"\n                      buttonIcon={<FontAwesomeIcon icon={faCheckCircle} />}\n                      buttonText={display || 'Check validation of the input system and code'}\n                      onClick={validateFunction}\n                    />\n                  )}\n\n                  <TextField\n                    id=\"description-input\"\n                    label=\"Description\"\n                    value={action[0].description || ''}\n                    onChange={changeDescription}\n                    variant=\"outlined\"\n                    error={action[0].description === ''}\n                  />\n                </>\n              )}\n            </>\n          )}\n\n          {resource.resourceType === 'Careplan' && (\n            // design for careplan ?\n            <>\n              <TextField\n                id=\"title-input\"\n                label=\"Title\"\n                value={resource.title || ''}\n                onChange={changeTitle}\n                variant=\"outlined\"\n                error={resource.title == null}\n                inputProps={{ onKeyPress: onEnter }}\n              />\n              {resource.title && (\n                <TextField\n                  id=\"description-input\"\n                  label=\"Description\"\n                  value={action[0].description || ''}\n                  onChange={changeDescription}\n                  variant=\"outlined\"\n                  error={action[0].description === ''}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n      {displayAddButtons && (\n        <>\n          {changeNodeTypeEnabled && <hr className={styles.divider} />}\n          <SidebarButton\n            buttonName=\"Add Action Node\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"Any clinical or workflow step which is not a decision.\"\n            onClick={(): void => addNode('action')}\n          />\n\n          <SidebarButton\n            buttonName=\"Add Branch Node\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"A logical branching point based on clinical or workflow criteria.\"\n            onClick={(): void => addNode('branch')}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNode);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\n\nimport DropDown from 'components/elements/DropDown';\nimport { Pathway, State } from 'pathways-model';\n\nconst nodeTypeOptions = [\n  { label: '', value: '' },\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\ninterface NullNodeProps {\n  pathway: Pathway;\n  currentNode: State;\n  changeNodeType: (event: string) => void;\n  addNode: (event: string) => void;\n}\n\nconst NullNode: FC<NullNodeProps> = ({ pathway, currentNode, changeNodeType, addNode }) => {\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode.key !== undefined && currentNode.key !== 'Start';\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <DropDown\n          id=\"nodeType\"\n          label=\"Node Type\"\n          options={nodeTypeOptions}\n          onChange={selectNodeType}\n          value=\"\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default memo(NullNode);\n","import React, {\n  createContext,\n  ReactNode,\n  FC,\n  useState,\n  memo,\n  useContext,\n  useCallback\n} from 'react';\nimport shortid from 'shortid';\nimport { ElmStatement } from 'pathways-model';\n\ninterface Criteria {\n  id: string;\n  label: string;\n  version: string;\n  modified: number;\n  elm: object;\n}\n\ninterface CriteriaContextInterface {\n  criteria: Criteria[];\n  addCriteria: (file: File) => void;\n  deleteCriteria: (id: string) => void;\n}\n\nexport const CriteriaContext = createContext<CriteriaContextInterface>(\n  {} as CriteriaContextInterface\n);\n\ninterface CriteriaProviderProps {\n  children: ReactNode;\n}\n\nexport const CriteriaProvider: FC<CriteriaProviderProps> = memo(({ children }) => {\n  const [criteria, setCriteria] = useState<Criteria[]>([]);\n\n  const addCriteria = useCallback((file: File) => {\n    const reader = new FileReader();\n    reader.onload = (event: ProgressEvent<FileReader>): void => {\n      if (event.target?.result) {\n        const rawElm = event.target.result as string;\n        const elm = JSON.parse(rawElm);\n        if (!elm.library?.identifier) {\n          alert('Please upload ELM file');\n          return;\n        }\n        const defaultStatementNames = [\n          'Patient',\n          'MeetsInclusionCriteria',\n          'InPopulation',\n          'Recommendation',\n          'Rationale',\n          'Errors'\n        ];\n        const elmStatements: ElmStatement[] = elm.library.statements.def;\n        const elmStatement = elmStatements.find(def => !defaultStatementNames.includes(def.name));\n        if (!elmStatement) {\n          alert('No elm statement found in that file');\n          return;\n        }\n        const newCriteria = {\n          id: shortid.generate(),\n          label: elm.library.identifier.id,\n          version: elm.library.identifier.version,\n          modified: Date.now(),\n          elm: elm\n        };\n        setCriteria(currentCriteria => [...currentCriteria, newCriteria]);\n      } else alert('Unable to read that file');\n    };\n    reader.readAsText(file);\n  }, []);\n\n  const deleteCriteria = useCallback((id: string) => {\n    setCriteria(currentCriteria => currentCriteria.filter(criteria => criteria.id !== id));\n  }, []);\n\n  return (\n    <CriteriaContext.Provider value={{ criteria, addCriteria, deleteCriteria }}>\n      {children}\n    </CriteriaContext.Provider>\n  );\n});\n\nexport const useCriteriaContext = (): CriteriaContextInterface => useContext(CriteriaContext);\n","import React, { FC, memo, useState, useCallback, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTools } from '@fortawesome/free-solid-svg-icons';\nimport DropDown from 'components/elements/DropDown';\nimport { TextField } from '@material-ui/core';\nimport { setTransitionCondition, setTransitionConditionDescription } from 'utils/builder';\nimport { SidebarHeader, SidebarButton } from '.';\nimport { Pathway, Transition } from 'pathways-model';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface BranchTransitionProps {\n  pathway: Pathway;\n  currentNodeKey: string;\n  transition: Transition;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({\n  pathway,\n  currentNodeKey,\n  transition,\n  updatePathway\n}) => {\n  const { criteria } = useCriteriaContext();\n  const criteriaOptions = criteria.map(c => ({ value: c.id, label: c.label }));\n  const styles = useStyles();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway.states[transitionKey];\n  const [useCriteriaSelected, setUseCriteriaSelected] = useState<boolean>(false);\n\n  const handleUseCriteria = useCallback((): void => {\n    setUseCriteriaSelected(!useCriteriaSelected);\n  }, [useCriteriaSelected]);\n\n  const selectCriteriaSource = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey || !transition.id) return;\n\n      const criteriaSource = event?.target.value || '';\n      let elm = undefined;\n      criteria.forEach(c => {\n        if (c.id === criteriaSource) {\n          elm = c.elm;\n        }\n      });\n      if (!elm) return;\n      updatePathway(\n        setTransitionCondition(\n          pathway,\n          currentNodeKey,\n          transition.id,\n          transition.condition?.description || '',\n          elm,\n          criteriaSource\n        )\n      );\n    },\n    [currentNodeKey, transition.id, updatePathway, pathway, transition.condition, criteria]\n  );\n\n  const setCriteriaDisplay = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey || !transition.id) return;\n\n      const criteriaDisplay = event?.target.value || '';\n      updatePathway(\n        setTransitionConditionDescription(pathway, currentNodeKey, transition.id, criteriaDisplay)\n      );\n    },\n    [currentNodeKey, transition.id, updatePathway, pathway]\n  );\n  return (\n    <>\n      <hr className={styles.divider} />\n\n      <SidebarHeader\n        pathway={pathway}\n        currentNode={transitionNode}\n        updatePathway={updatePathway}\n        isTransition={true}\n      />\n      {!(useCriteriaSelected || transition.condition?.cql) && (\n        <SidebarButton\n          buttonName=\"Use Criteria\"\n          buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n          buttonText=\"Add previously built or imported criteria logic to branch node.\"\n          onClick={handleUseCriteria}\n        />\n      )}\n\n      {(useCriteriaSelected || transition.condition?.cql) && (\n        <>\n          <DropDown\n            id=\"Criteria\"\n            label=\"Criteria\"\n            options={criteriaOptions}\n            onChange={selectCriteriaSource}\n            value={transition.condition?.cql || undefined}\n          />\n          <TextField\n            label=\"Criteria Display\"\n            value={transition.condition?.description || ''}\n            variant=\"outlined\"\n            onChange={setCriteriaDisplay}\n            error={!transition.condition?.description}\n          />\n        </>\n      )}\n\n      <SidebarButton\n        buttonName=\"Build Criteria\"\n        buttonIcon={<FontAwesomeIcon icon={faTools} />}\n        buttonText=\"Create new criteria logic to add to branch node.\"\n      />\n    </>\n  );\n};\nexport default memo(BranchTransition);\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const nodeDimension = nodeDimensions[stateName];\n\n    if (nodeDimension) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2,\n      width: node.width\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactElement } from 'react';\nimport { Popup, StrictPopupProps } from 'semantic-ui-react';\nimport styles from './PathwayPopup.module.scss';\n\ninterface PathwayPopupProps {\n  Content: ReactElement;\n  Trigger: ReactElement;\n  popupPosition?: StrictPopupProps['position'];\n  open?: boolean;\n  setOpen?: Function;\n  className?: string;\n}\n\nconst PathwayPopup: FC<PathwayPopupProps> = ({\n  Content,\n  Trigger,\n  popupPosition,\n  open,\n  setOpen,\n  className\n}: PathwayPopupProps) => {\n  return (\n    <Popup\n      content={Content}\n      position={popupPosition || 'bottom right'}\n      className={`${styles.pathwayPopup} ${className}`}\n      on=\"click\"\n      open={open}\n      onOpen={(): void => {\n        setOpen && setOpen(true);\n      }}\n      onClose={(): void => {\n        setOpen && setOpen(false);\n      }}\n      pinned\n      trigger={Trigger}\n    />\n  );\n};\n\nexport default PathwayPopup;\n","import React, { FC } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} button ${type === 'decline' && styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default ActionButton;\n","import React, { FC, useState } from 'react';\nimport styles from './MissingDataPopup.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\ninterface MissingDataPopup {\n  values: string[];\n}\n\nconst MissingDataPopup: FC<MissingDataPopup> = ({ values }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <PathwayPopup\n      Content={<PopupContent values={values} setOpen={setOpen}></PopupContent>}\n      className={styles.missingDataPopup}\n      Trigger={\n        <div className={styles.popupTrigger}>\n          missing data\n          <FontAwesomeIcon icon={faEdit} className={styles.externalLink} />\n        </div>\n      }\n      open={open}\n      setOpen={setOpen}\n    />\n  );\n};\n\ninterface PopupContentProps {\n  values: Array<string>;\n  setOpen: Function;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ values, setOpen }) => {\n  const [showCheck, setShowCheck] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('');\n\n  return (\n    <div>\n      <div className={styles.popupContent}>\n        Select Value:\n        <div>\n          {values.map(e => {\n            return (\n              <div\n                key={e}\n                className={styles.popupChoice + ' ' + (selected === e ? styles.selected : '')}\n                onClick={(): void => {\n                  if (showCheck && selected === e) {\n                    setShowCheck(false);\n                    setSelected('');\n                  } else {\n                    setShowCheck(true);\n                    setSelected(e);\n                  }\n                }}\n              >\n                {e}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n        {showCheck && (\n          <ActionButton\n            size=\"small\"\n            type=\"accept\"\n            onClick={(): void => {\n              setOpen(false);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MissingDataPopup;\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): state is GuidanceState {\n  const { action } = state as GuidanceState;\n  return action !== undefined;\n}\n\nexport function isBranchState(state: State): boolean {\n  const { action, label } = state as GuidanceState;\n  return action === undefined && label !== 'Start';\n}\n\ntype ConversionResource = {\n  [key: string]: string;\n};\nexport const resourceNameConversion: ConversionResource = {\n  MedicationRequest: 'Medication',\n  ServiceRequest: 'Procedure',\n  Careplan: 'Regimen'\n};\n","import React, { FC, ReactNode, ReactElement, memo } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MissingDataPopup from 'components/MissingDataPopup';\nimport styles from './ExpandedNode.module.scss';\nimport { isBranchState, resourceNameConversion } from 'utils/nodeUtils';\n\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState;\n  isActionable: boolean;\n  isGuidance: boolean;\n}\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(({ pathwayState, isActionable, isGuidance }) => {\n  return (\n    <>\n      <ExpandedNodeMemo isGuidance={isGuidance} pathwayState={pathwayState} />\n    </>\n  );\n});\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  return (\n    <>\n      {description && (\n        <tr>\n          <td className={styles.descTitle}>{title}</td>\n          <td className={styles.desc}>{description}</td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nfunction renderBranch(pathwayState: State): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  const values: string[] = pathwayState.transitions\n    .map(transition => {\n      const description = transition.condition?.description;\n      return description ? description : '';\n    })\n    // Remove duplicate values\n    .filter((v, i, arr) => arr.indexOf(v) === i);\n\n  returnElements.push(\n    <ExpandedNodeField\n      key=\"value\"\n      title=\"Value\"\n      description={<MissingDataPopup values={values} />}\n    />\n  );\n\n  return returnElements;\n}\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\nfunction renderGuidance(pathwayState: GuidanceState): ReactElement[] {\n  let returnElements: ReactElement[] = [];\n  if (pathwayState.action[0]) {\n    const resource = pathwayState.action[0].resource;\n    const coding = isMedicationRequest(resource)\n      ? resource?.medicationCodeableConcept?.coding\n      : resource?.code?.coding;\n\n    const resourceType = resourceNameConversion[resource.resourceType]\n      ? resourceNameConversion[resource.resourceType]\n      : resource.resourceType;\n    returnElements = [\n      <ExpandedNodeField\n        key=\"Description\"\n        title=\"Description\"\n        description={pathwayState.action[0].description}\n      />,\n      <ExpandedNodeField key=\"Type\" title=\"Type\" description={resourceType} />,\n      <ExpandedNodeField\n        key=\"System\"\n        title=\"System\"\n        description={\n          coding &&\n          coding[0].system && (\n            <>\n              {coding[0].system}\n              <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n              </a>\n            </>\n          )\n        }\n      />,\n      <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n      <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />,\n      <ExpandedNodeField key=\"Title\" title=\"Title\" description={resource.title} />\n    ];\n  }\n\n  return returnElements;\n}\ninterface ExpandedNodeMemoProps {\n  pathwayState: GuidanceState;\n  isGuidance: boolean;\n}\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(({ pathwayState, isGuidance }) => {\n  const guidance = isGuidance && renderGuidance(pathwayState);\n  const branch = isBranchState(pathwayState) && renderBranch(pathwayState);\n  return (\n    <div className=\"expandedNode\">\n      <table className={styles.infoTable}>\n        <tbody>{guidance || branch}</tbody>\n      </table>\n    </div>\n  );\n});\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo, useCallback, useState, useEffect } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState, isBranchState } from 'utils/nodeUtils';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle,\n  faBookMedical\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface NodeProps {\n  nodeKey: string;\n  pathwayState: State;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClick?: (nodeName: string) => void;\n  currentNode: State;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      { nodeKey, pathwayState, xCoordinate, yCoordinate, expanded = false, onClick, currentNode },\n      ref\n    ) => {\n      const [hasMetadata, setHasMetadata] = useState<boolean>(\n        isGuidanceState(pathwayState) ? pathwayState.action.length > 0 : false\n      );\n\n      const onClickHandler = useCallback(() => {\n        if (onClick) onClick(nodeKey);\n      }, [onClick, nodeKey]);\n\n      useEffect(() => {\n        if (!hasMetadata && isGuidanceState(pathwayState) && pathwayState.action.length > 0) {\n          setHasMetadata(true);\n          if (!expanded) {\n            onClickHandler();\n          }\n        }\n      }, [hasMetadata, pathwayState, setHasMetadata, onClickHandler, expanded]);\n\n      const { label } = pathwayState;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n\n      const isCurrentNode = pathwayState.key === currentNode.key;\n      const isTransitionOfCurrentBranch =\n        isBranchState(currentNode) && currentNode.transitions.some(e => e?.transition === nodeKey);\n\n      const isActionable = isCurrentNode;\n      const topLevelClasses = [styles.node];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push('expanded');\n      if (isActionable || isTransitionOfCurrentBranch) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = styles.childNotActionable;\n      }\n      const isGuidance = isGuidanceState(pathwayState);\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div className={`nodeTitle ${onClickHandler && 'clickable'}`} onClick={onClickHandler}>\n            <div className=\"iconAndLabel\">\n              <NodeIcon pathwayState={pathwayState} isGuidance={isGuidance} />\n              {label}\n            </div>\n            <StatusIcon status={null} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode\n                pathwayState={pathwayState as GuidanceState}\n                isActionable={isActionable}\n                isGuidance={isGuidance}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayState: State;\n  isGuidance: boolean;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, isGuidance }) => {\n  let icon: IconDefinition | undefined;\n  if (pathwayState.label === 'Start') icon = faPlay;\n  else if (isGuidance) {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'ServiceRequest') icon = faSyringe;\n      else if (resourceType === 'Careplan') icon = faBookMedical;\n    }\n  } else {\n    icon = faMicroscope;\n  }\n\n  return icon ? <FontAwesomeIcon icon={icon} className={styles.icon} /> : null;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status == null) {\n    return null;\n  }\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return (\n    <div className=\"statusIcon\">\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    arrow: {\n      '& path': {\n        stroke: theme.palette.primary.main,\n        strokeWidth: 2\n      },\n      '& text': {\n        fontSize: '18px'\n      }\n    },\n    currentBranchArrow: {\n      '& path': {\n        stroke: theme.palette.secondary.main\n      }\n    },\n    arrowhead: {\n      '& polygon': {\n        fill: theme.palette.primary.main\n      }\n    },\n    currentBranchArrowhead: {\n      '& polygon': {\n        fill: theme.palette.secondary.main\n      }\n    }\n  }),\n  { name: 'Arrow' }\n);\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport { State } from 'pathways-model';\nimport { isBranchState } from 'utils/nodeUtils';\nimport useStyles from './styles';\nimport clsx from 'clsx';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  widthOffset: number;\n  currentNode: State;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, widthOffset, currentNode }) => {\n  const styles = useStyles();\n  const isCurrentBranchArrow = isBranchState(currentNode) && edge.start === currentNode.key;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={clsx(styles.arrow, isCurrentBranchArrow && styles.currentBranchArrow)}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={clsx(isCurrentBranchArrow ? styles.currentBranchArrowhead : styles.arrowhead)}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import React, {\n  FC,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { Pathway, State } from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges } from 'graph-model';\nimport styles from './Graph.module.scss';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\ninterface GraphProps {\n  pathway: Pathway;\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n  currentNode: State;\n}\n\ninterface ExpandedState {\n  [key: string]: boolean | string | null;\n}\n\nconst Graph: FC<GraphProps> = memo(\n  ({ pathway, interactive = true, expandCurrentNode = true, currentNode }) => {\n    const graphElement = useRef<HTMLDivElement>(null);\n    const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n    const [parentWidth, setParentWidth] = useState<number>(\n      graphElement?.current?.parentElement?.clientWidth ?? 0\n    );\n\n    // Get the layout of the graph\n    const getGraphLayout = useCallback((): Layout => {\n      const nodeDimensions: NodeDimensions = {};\n\n      // Retrieve dimensions from nodeRefs\n      if (nodeRefs?.current) {\n        Object.keys(nodeRefs.current).forEach(key => {\n          const nodeElement = nodeRefs.current[key];\n          const width = nodeElement.clientWidth;\n          // nodeElement can have multiple children so calculate the sum to get the node height\n          const height = Array.from(nodeElement.children).reduce(\n            (acc, child) => acc + child.clientHeight,\n            0\n          );\n\n          nodeDimensions[key] = { width, height };\n        });\n      }\n\n      return graphLayout(pathway, nodeDimensions);\n    }, [pathway]);\n\n    const [layout, setLayout] = useState(getGraphLayout());\n    const { nodeCoordinates, edges } = layout;\n    const maxHeight = useMemo(() => {\n      return nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            .map(x => x.y)\n            .reduce((a, b) => Math.max(a, b))\n        : 0;\n    }, [nodeCoordinates]);\n\n    // If a node has a negative x value, shift nodes and edges to the right by that value\n    const minX =\n      nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            .map(x => x.x + parentWidth / 2)\n            .reduce((a, b) => Math.min(a, b))\n        : 0;\n\n    if (minX < 0) {\n      const toAdd = minX * -1;\n      Object.keys(nodeCoordinates).forEach(key => {\n        const node = nodeCoordinates[key];\n        node.x += toAdd;\n      });\n\n      Object.keys(edges).forEach(key => {\n        const edge = edges[key];\n\n        edge.points.forEach(p => (p.x += toAdd));\n        if (edge.label) edge.label.x += toAdd;\n      });\n    }\n\n    // Find node that is farthest to the right\n    const maxWidth = useMemo(() => {\n      return nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            // Add width of the node to account for x coordinate starting at top left corner\n            .map(x => x.x + parentWidth / 2 + (x.width ?? 0))\n            .reduce((a, b) => Math.max(a, b))\n        : 0;\n    }, [nodeCoordinates, parentWidth]);\n\n    const [expanded, setExpanded] = useState<ExpandedState>(() =>\n      Object.keys(layout).reduce(\n        (acc, curr: string) => {\n          acc[curr] = false;\n          return acc;\n        },\n        { lastSelectedNode: null } as ExpandedState\n      )\n    );\n\n    const toggleExpanded = useCallback((key: string) => {\n      if (key === 'Start') {\n        setExpanded(prevState => ({\n          ...prevState,\n          lastSelectedNode: key\n        }));\n      } else {\n        setExpanded(prevState => ({\n          ...prevState,\n          [key]:\n            !prevState[key] || prevState.lastSelectedNode === key\n              ? !prevState[key]\n              : prevState[key],\n          lastSelectedNode: key\n        }));\n      }\n    }, []);\n\n    // Recalculate graph layout if graph container size changes\n    useEffect(() => {\n      if (graphElement.current?.parentElement) {\n        new ResizeSensor(graphElement.current.parentElement, function() {\n          setParentWidth(graphElement.current?.parentElement?.clientWidth ?? 0);\n          setLayout(getGraphLayout());\n        });\n      }\n    }, [getGraphLayout]);\n\n    // Recalculate graph layout if a node is expanded\n    useEffect(() => {\n      setLayout(getGraphLayout());\n    }, [pathway, expanded, getGraphLayout]);\n\n    return (\n      <GraphMemo\n        graphElement={graphElement}\n        interactive={interactive}\n        maxHeight={maxHeight}\n        nodeCoordinates={nodeCoordinates}\n        edges={edges}\n        pathway={pathway}\n        nodeRefs={nodeRefs}\n        parentWidth={parentWidth}\n        maxWidth={maxWidth}\n        expanded={expanded}\n        toggleExpanded={toggleExpanded}\n        currentNode={currentNode}\n      />\n    );\n  }\n);\n\ninterface GraphMemoProps {\n  graphElement: RefObject<HTMLDivElement>;\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  edges: Edges;\n  pathway: Pathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  expanded: ExpandedState;\n  toggleExpanded: (key: string) => void;\n  currentNode: State;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(\n  ({\n    graphElement,\n    interactive,\n    maxHeight,\n    nodeCoordinates,\n    edges,\n    pathway,\n    nodeRefs,\n    parentWidth,\n    maxWidth,\n    expanded,\n    toggleExpanded,\n    currentNode\n  }) => {\n    const { id: pathwayId } = useParams();\n    const history = useHistory();\n    const redirectToNode = useCallback(\n      nodeId => {\n        const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeId)}`;\n        if (url !== history.location.pathname) {\n          history.push(url);\n        }\n      },\n      [history, pathwayId]\n    );\n    const onClickHandler = useCallback(\n      (nodeName: string) => {\n        if (interactive) {\n          redirectToNode(nodeName);\n          toggleExpanded(nodeName);\n        }\n      },\n      [redirectToNode, toggleExpanded, interactive]\n    );\n    return (\n      <div\n        ref={graphElement}\n        id=\"graph-root\"\n        className={styles.root}\n        style={{\n          height: interactive ? maxHeight + 150 : 'inherit',\n          width: maxWidth + 'px',\n          position: 'relative',\n          marginRight: '5px'\n        }}\n      >\n        {nodeCoordinates !== undefined\n          ? Object.keys(nodeCoordinates).map(nodeName => {\n              return (\n                <Node\n                  key={nodeName}\n                  nodeKey={nodeName}\n                  ref={(node: HTMLDivElement): void => {\n                    if (node) nodeRefs.current[nodeName] = node;\n                    else delete nodeRefs.current[nodeName];\n                  }}\n                  pathwayState={pathway.states[nodeName]}\n                  xCoordinate={nodeCoordinates[nodeName].x + parentWidth / 2}\n                  yCoordinate={nodeCoordinates[nodeName].y}\n                  expanded={Boolean(expanded[nodeName])}\n                  onClick={onClickHandler}\n                  currentNode={currentNode}\n                />\n              );\n            })\n          : []}\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{\n            width: maxWidth,\n            height: maxHeight,\n            zIndex: 1,\n            top: 0,\n            left: 0,\n            overflow: 'visible'\n          }}\n        >\n          {edges !== undefined\n            ? Object.keys(edges).map(edgeName => {\n                const edge = edges[edgeName];\n                return (\n                  <Arrow\n                    key={edgeName}\n                    edge={edge}\n                    edgeName={edgeName}\n                    widthOffset={parentWidth / 2}\n                    currentNode={currentNode}\n                  />\n                );\n              })\n            : []}\n        </svg>\n      </div>\n    );\n  }\n);\n\nexport default Graph;\n","import React, { FC, useRef, useEffect, memo } from 'react';\nimport { Pathway, State } from 'pathways-model';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport Graph from 'components/Graph';\nimport { useTheme } from 'components/ThemeProvider';\n\nimport styles from './Builder.module.scss';\n\ninterface BuilderProps {\n  pathway: Pathway;\n  updatePathway: (pathway: Pathway) => void;\n  currentNode: State;\n}\n\nconst Builder: FC<BuilderProps> = ({ pathway, updatePathway, currentNode }) => {\n  const headerElement = useRef<HTMLDivElement>(null);\n  const graphContainerElement = useRef<HTMLDivElement>(null);\n  const theme = useTheme('dark');\n\n  // Set the height of the graph container\n  useEffect(() => {\n    if (graphContainerElement?.current && headerElement?.current)\n      graphContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [pathway, headerElement, graphContainerElement]);\n\n  return (\n    <>\n      <div ref={headerElement}>\n        <Header />\n        <Navigation pathway={pathway} />\n      </div>\n\n      <div className={styles.display}>\n        <MuiThemeProvider theme={theme}>\n          <Sidebar\n            pathway={pathway}\n            updatePathway={updatePathway}\n            headerElement={headerElement}\n            currentNode={currentNode}\n          />\n        </MuiThemeProvider>\n\n        <div ref={graphContainerElement} className={styles.graph}>\n          <Graph pathway={pathway} expandCurrentNode={true} currentNode={currentNode} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default memo(Builder);\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Pathway[]>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetPathwaysService from './PathwaysService';\n\ninterface PathwayContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  deletePathway: (id: string) => void;\n  updatePathwayAtIndex: (pathway: Pathway, index: number) => void;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({} as PathwayContextInterface);\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwayProvider: FC<PathwayProviderProps> = memo(({ children }) => {\n  const [pathways, setPathways] = useState<Pathway[]>([]);\n  const service = useGetPathwaysService(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n\n  const addPathway = useCallback((pathway: Pathway) => {\n    setPathways(currentPathways => [...currentPathways, pathway]);\n  }, []);\n\n  const deletePathway = useCallback((id: string) => {\n    setPathways(currentPathways => currentPathways.filter(pathway => pathway.id !== id));\n  }, []);\n\n  const updatePathwayAtIndex = useCallback((pathway: Pathway, index: number) => {\n    setPathways(currentPathways => [\n      ...currentPathways.slice(0, index),\n      pathway,\n      ...currentPathways.slice(index + 1)\n    ]);\n  }, []);\n\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwayContext.Provider\n          value={{\n            pathways,\n            addPathway,\n            deletePathway,\n            updatePathwayAtIndex,\n            status: service.status\n          }}\n        >\n          {children}\n        </PathwayContext.Provider>\n      );\n  }\n});\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import React, { FC, memo, useMemo, useCallback } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { Pathway } from 'pathways-model';\n\nimport Builder from 'components/Builder';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nconst BuilderRoute: FC = () => {\n  const { id, nodeId } = useParams();\n  const { pathways, updatePathwayAtIndex } = usePathwayContext();\n  const pathwayId = decodeURIComponent(id);\n  const pathwayIndex = useMemo(() => pathways.findIndex(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const pathway = pathways[pathwayIndex];\n  const currentNode = pathway?.states?.[decodeURIComponent(nodeId)];\n\n  const updatePathway = useCallback(\n    (pathway: Pathway) => {\n      updatePathwayAtIndex(pathway, pathwayIndex);\n    },\n    [pathwayIndex, updatePathwayAtIndex]\n  );\n\n  if (pathway == null) return null;\n  if (currentNode == null) return <Redirect to={`/builder/${id}/node/Start`} />;\n\n  return <Builder pathway={pathway} updatePathway={updatePathway} currentNode={currentNode} />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    label: {\n      padding: `0.2em 2em`,\n      textTransform: 'none',\n      fontSize: '1.2em',\n      fontWeight: 100\n    }\n  }),\n  { name: 'Tabs' }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Tab as ReactTab, TabList, TabPanel, Tabs as ReactTabs } from 'react-tabs';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport shortid from 'shortid';\n\ninterface Tab {\n  label: string;\n  component: ReactNode;\n}\n\ninterface TabsProp {\n  tabs: Tab[];\n}\n\nconst Tabs: FC<TabsProp> = ({ tabs }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <ReactTabs>\n        <TabList>\n          {tabs.map(tab => (\n            <ReactTab key={shortid.generate()}>\n              <Button classes={{ label: styles.label }}>{tab.label}</Button>\n            </ReactTab>\n          ))}\n        </TabList>\n\n        {tabs.map(tab => (\n          <TabPanel key={shortid.generate()}>{tab.component}</TabPanel>\n        ))}\n      </ReactTabs>\n    </div>\n  );\n};\n\nexport default memo(Tabs);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end'\n    },\n    pathwayList: {\n      marginTop: '2em'\n    },\n    pathwaysListButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    }\n  }),\n  { name: 'PathwaysList' }\n);\n","import React, { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFileDownload, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport { downloadPathway } from 'utils/builder';\n\nimport useStyles from './styles';\n\nconst PathwaysTable: FC = () => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwayContext();\n\n  return (\n    <TableContainer className={styles.pathwayList}>\n      <Table aria-label=\"pathway list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Pathway Name</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell>Last Updated</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {pathways.map(pathway => (\n            <TableRow key={pathway.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {pathway.name}\n              </TableCell>\n\n              <TableCell>draft</TableCell>\n              <TableCell>2 days ago</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.pathwaysListButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                  component={Link}\n                  to={`/builder/${encodeURIComponent(pathway.id)}`}\n                >\n                  Edit\n                </Button>\n                <Button\n                  className={styles.pathwaysListButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faFileDownload} />}\n                  onClick={(): void => downloadPathway(pathway)}\n                >\n                  Export\n                </Button>\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                  onClick={(): void => deletePathway(pathway.id)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport useStyles from './styles';\nimport { createNewPathway } from 'utils/builder';\n\ninterface NewPathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst NewPathwayModal: FC<NewPathwayModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway } = usePathwayContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      addPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={handleCreateNewPathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required\n            inputRef={pathwayNameRef}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(NewPathwayModal);\n","import React, { FC, useCallback, useState, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport NewPathwayModal from './NewPathwayModal';\n\nimport useStyles from './styles';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status } = usePathwayContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={openNewPathwayModal}\n      >\n        Create Pathway\n      </Button>\n\n      <NewPathwayModal open={open} onClose={closeNewPathwayModal} />\n      {status === 'loading' ? <Loading /> : <PathwaysTable />}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    buildCriteriaButton: {\n      alignSelf: 'flex-end',\n      marginLeft: '20px'\n    },\n    criteriaList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    input: {\n      display: 'none'\n    },\n    chooseFileInput: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    inputButton: {\n      whiteSpace: 'nowrap',\n      marginRight: '1em'\n    },\n    fileName: {\n      fontStyle: 'italic'\n    }\n  }),\n  { name: 'CriteriaList' }\n);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport useStyles from './styles';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\n\nconst CriteriaTable: FC = () => {\n  const styles = useStyles();\n  const { criteria, deleteCriteria } = useCriteriaContext();\n\n  const renderDate = (datetime: number): string => {\n    return moment(datetime).fromNow();\n  };\n\n  return (\n    <TableContainer className={styles.criteriaList}>\n      <Table aria-label=\"criteria list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Criteria Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>Added</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {criteria.map(c => (\n            <TableRow key={c.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {c.label}\n              </TableCell>\n              <TableCell>{c.version}</TableCell>\n              <TableCell>{renderDate(c.modified)}</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                >\n                  Edit\n                </Button>\n\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                  onClick={(): void => deleteCriteria(c.id)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(CriteriaTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileImport, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input,\n  IconButton\n} from '@material-ui/core';\n\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface ImportCriteriaModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst ImportCriteriaModal: FC<ImportCriteriaModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const [fileName, setFileName] = useState<string>('');\n  const importFileRef = useRef<HTMLInputElement>(null);\n\n  const { addCriteria } = useCriteriaContext();\n\n  const selectFile = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const files = importFileRef?.current?.files;\n      if (files?.length) addCriteria(files[0]);\n      onClose();\n      setFileName('');\n    },\n    [addCriteria, onClose]\n  );\n\n  const handleChooseFile = useCallback(() => {\n    if (importFileRef?.current?.files?.[0]) setFileName(importFileRef.current.files[0].name);\n  }, [importFileRef]);\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"import-criteria\" fullWidth maxWidth=\"sm\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={selectFile}>\n        <DialogContent>\n          <div className={styles.chooseFileInput}>\n            <Input\n              id=\"choose-file-input\"\n              className={styles.input}\n              inputRef={importFileRef}\n              type=\"file\"\n              inputProps={{ accept: '.json' }}\n              onChange={handleChooseFile}\n            />\n\n            <label htmlFor=\"choose-file-input\">\n              <Button\n                className={styles.inputButton}\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n              >\n                Choose File\n              </Button>\n            </label>\n\n            <div className={styles.fileName}>\n              {fileName ? <span>{fileName}</span> : <span>Choose ELM file to import.</span>}\n            </div>\n          </div>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            type=\"submit\"\n          >\n            Import\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(ImportCriteriaModal);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools, faFileImport } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport Loading from 'components/elements/Loading';\nimport CriteriaTable from './CriteriaTable';\nimport ImportCriteriaModal from './ImportCriteriaModal';\n\nimport useStyles from './styles';\n\nconst CriteriaList: FC = () => {\n  const styles = useStyles();\n  const { status } = usePathwayContext();\n\n  const [open, setOpen] = useState<boolean>(false);\n  const openImportModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeImportModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.buttonRow}>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faFileImport} />}\n          onClick={openImportModal}\n        >\n          Import Library\n        </Button>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faTools} />}\n        >\n          Build Criteria\n        </Button>\n      </div>\n\n      <ImportCriteriaModal open={open} onClose={closeImportModal} />\n\n      {status === 'loading' ? <Loading /> : <CriteriaTable />}\n    </div>\n  );\n};\n\nexport default memo(CriteriaList);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\n\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from './ThemeProvider';\nimport { PathwayProvider } from './PathwayProvider';\nimport { UserProvider } from './UserProvider';\nimport { CriteriaProvider } from './CriteriaProvider';\nimport Tabs from './Tabs';\nimport PathwaysList from './PathwaysList';\nimport CriteriaList from './CriteriaList';\n\nconst App: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <PathwayProvider>\n          <CriteriaProvider>\n            <Router>\n              <Switch>\n                <Route path=\"/builder/:id/node/:nodeId\">\n                  <BuilderRoute />\n                </Route>\n                <Route path=\"/builder/:id\">\n                  <BuilderRoute />\n                </Route>\n                <Route path=\"/\">\n                  <Header />\n                  <Tabs\n                    tabs={[\n                      { label: 'Pathway', component: <PathwaysList /> },\n                      { label: 'Criteria', component: <CriteriaList /> }\n                    ]}\n                  />\n                </Route>\n              </Switch>\n            </Router>\n          </CriteriaProvider>\n        </PathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(App);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};"],"sourceRoot":""}