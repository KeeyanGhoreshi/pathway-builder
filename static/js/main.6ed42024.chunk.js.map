{"version":3,"sources":["components/Node/Node.module.scss","components/MissingDataPopup/MissingDataPopup.module.scss","utils/ConfigManager.js","components/ExpandedNode/ExpandedNode.module.scss","components/Header/Header.module.scss","components/Builder/Builder.module.scss","components/elements/Loading/Loading.module.scss","camino-logo-dark.png","components/PathwayPopup/PathwayPopup.module.scss","components/Graph/Graph.module.scss","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","utils/builder.ts","components/Navigation/styles.tsx","components/Navigation/Navigation.tsx","components/Sidebar/styles.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarHeader.tsx","components/Sidebar/SidebarButton.tsx","components/elements/DropDown/DropDown.tsx","components/Sidebar/BranchNode.tsx","engine/cql-to-elm.ts","components/Sidebar/ActionNode.tsx","components/Sidebar/NullNode.tsx","components/CriteriaProvider.tsx","components/Sidebar/BranchTransition.tsx","visualization/layout.ts","components/PathwayPopup/PathwayPopup.tsx","components/ActionButton/ActionButton.tsx","components/MissingDataPopup/MissingDataPopup.tsx","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/styles.tsx","components/Arrow/Arrow.tsx","components/Graph/Graph.tsx","components/Builder/Builder.tsx","components/PathwaysService/PathwaysService.tsx","components/PathwayProvider.tsx","components/BuilderRoute.tsx","components/UserProvider.tsx","components/Tabs/styles.tsx","components/Tabs/Tabs.tsx","components/elements/Loading/Loading.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwaysTable.tsx","components/PathwaysList/NewPathwayModal.tsx","components/PathwaysList/PathwaysList.tsx","components/CriteriaList/styles.tsx","components/CriteriaList/CriteriaTable.tsx","components/CriteriaList/ImportCriteriaModal.tsx","components/CriteriaList/CriteriaList.tsx","components/App.tsx","index.js","components/ActionButton/ActionButton.module.scss"],"names":["module","exports","config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","variables","spacing","globalPadding","colors","white","black","blue","red","gray","grayMedium","grayBlue","grayLighter","grayDark","green","typography","fontFamily","join","materialUiOverridesBase","MuiButton","root","borderRadius","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","backgroundColor","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","color","MuiInputBase","input","transitionDelay","transitionProperty","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","MuiDialogContent","MuiDialogActions","materialUiOverridesDark","borderColor","notchedOutline","MuiMenuItem","paletteBase","primary","main","secondary","error","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","createContext","ThemeProvider","memo","children","useState","setUseProjector","muiTheme","toggleTheme","useCallback","currentUseProjector","Provider","anchorEl","setAnchorEl","useContext","openMenu","event","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","src","logo","alt","onClick","aria-controls","aria-haspopup","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","downloadPathway","pathway","pathwayString","elm","library","identifier","version","schemaIdentifier","usings","def","localIdentifier","uri","localId","locator","statements","expression","type","operand","dataType","includes","valueSets","codes","codeSystems","pathwayToExport","criteria","map","undefined","states","Object","keys","forEach","stateName","state","key","mergeElm","elmStatement","getElmStatement","push","transitions","transition","condition","description","action","navigational","setNavigationalElm","JSON","stringify","exportPathway","pathwayBlob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","additionalElm","using","find","include","path","valueSet","code","codesystem","defaultStatementNames","createState","shortid","generate","nodeTypeIsUndefined","addState","setStateNodeType","stateKey","nodeType","makeStateGuidance","cql","makeStateBranch","setStateAction","addTransition","startStateKey","endStateKey","makeStyles","display","alignItems","height","justifyContent","backButton","width","navigationIcons","cursor","pathwayName","marginLeft","Navigation","useStyles","history","useHistory","handleGoBack","IconButton","aria-label","faChevronLeft","faEllipsisH","getContentAnchorEl","anchorOrigin","vertical","horizontal","flexDirection","minWidth","overflowY","float","formControl","divider","headerLabelStart","displayText","sidebarHeader","sidebarHeaderGroup","sidebarHeaderButton","headerLabelGroup","headerLabel","headerLabelText","marginBottom","editIcon","sidebarButtonGroup","sidebarButton","marginRight","sidebarButtonText","toggleSidebar","updatePathway","headerElement","currentNode","isExpanded","setIsExpanded","sidebarContainerElement","useRef","currentNodeKey","changeNodeType","redirectToNode","nodeKey","encodeURIComponent","location","pathname","addNode","newState","newPathway","useEffect","current","style","innerHeight","clientHeight","getNodeType","ref","isTransition","faChevronRight","showInput","setShowInput","inputRef","currentNodeLabel","goToParentNode","goToNode","openNodeOptions","changeNodeLabel","setStateLabel","handleShowInput","handleKeyPress","FormControl","fullWidth","Input","onBlur","onKeyPress","autoFocus","onFocus","target","select","clsx","faEdit","buttonName","buttonIcon","buttonText","Button","variant","startIcon","options","onChange","handleSetSelected","InputLabel","htmlFor","Select","MenuProps","transformOrigin","displayEmpty","option","nodeTypeOptions","selectNodeType","handleAddTransition","faPlus","get","actionTypeOptions","codeSystemOptions","addActionCQL","fetch","method","headers","Accept","body","then","json","convertBasicCQL","resource","cqlId","replace","codesystemStatement","system","returnStatement","resourceType","retrieveStatement","defineStatement","coding","medicationCodeableConcept","escape","title","console","createCQL","setGuidanceStateElm","changeCode","resetDisplay","changeDescription","actionId","setActionDescription","changeTitle","selectActionType","actionType","selectCodeSystem","codeSystem","validateFunction","length","onEnter","e","changeNodeTypeEnabled","displayAddButtons","TextField","inputProps","faCheckCircle","CriteriaContext","CriteriaProvider","setCriteria","addCriteria","file","reader","FileReader","onload","result","rawElm","parse","alert","newCriteria","modified","Date","now","currentCriteria","readAsText","deleteCriteria","filter","useCriteriaContext","criteriaOptions","c","transitionKey","transitionNode","useCriteriaSelected","setUseCriteriaSelected","handleUseCriteria","selectCriteriaSource","criteriaSource","startNodeKey","transitionId","criteriaLabel","foundTransition","setTransitionCondition","setCriteriaDisplay","criteriaDisplay","setTransitionConditionDescription","faTools","graphLayoutProvider","layout","nodeDimensions","nodeNames","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","nodeDimension","setNode","setEdge","nodeCoordinates","startNodeShift","node","x","nodeName","y","edges","edge","edgeName","v","w","start","end","points","p","layoutDagre","nodes","rank","NaN","horizontalPosition","parents","canMove","initializeNodes","graph","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","NODE_HEIGHT","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","NODE_WIDTH","parentsOnHigherRank","parentName","parent","floor","splice","childNode","spreadChildrenEvenly","sum","reduce","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","PathwayPopup","Content","Trigger","popupPosition","setOpen","Popup","content","position","pathwayPopup","on","onOpen","pinned","trigger","LargeActionButton","largeActionButton","largeDecline","toUpperCase","slice","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","faTimes","MediumActionButton","mediumActionButton","ActionButton","size","PopupContent","values","showCheck","setShowCheck","selected","setSelected","popupContent","popupChoice","footer","MissingDataPopup","missingDataPopup","popupTrigger","externalLink","isGuidanceState","isBranchState","resourceNameConversion","MedicationRequest","ServiceRequest","CarePlan","ExpandedNode","pathwayState","isGuidance","isActionable","ExpandedNodeMemo","ExpandedNodeField","descTitle","desc","guidance","returnElements","rel","faExternalLinkAlt","renderGuidance","branch","arr","renderBranch","infoTable","Node","forwardRef","xCoordinate","yCoordinate","expanded","hasMetadata","setHasMetadata","onClickHandler","top","left","isCurrentNode","isTransitionOfCurrentBranch","some","topLevelClasses","expandedNodeClass","actionable","childActionable","childNotActionable","status","expandedNode","NodeIcon","faPlay","guidancePathwayState","faPrescriptionBottleAlt","faSyringe","faBookMedical","faMicroscope","StatusIcon","faTimesCircle","arrow","stroke","strokeWidth","currentBranchArrow","arrowhead","fill","currentBranchArrowhead","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","d","markerEnd","Arrow","isCurrentBranchArrow","edgeNameNoWhitespace","markerWidth","markerHeight","refX","refY","orient","interactive","expandCurrentNode","graphElement","nodeRefs","parentElement","clientWidth","parentWidth","setParentWidth","getGraphLayout","nodeElement","Array","from","graphLayout","setLayout","maxHeight","useMemo","max","minX","min","toAdd","maxWidth","curr","lastSelectedNode","setExpanded","toggleExpanded","prevState","ResizeSensor","GraphMemo","pathwayId","useParams","nodeId","xmlns","zIndex","overflow","graphContainerElement","useTheme","useGetPathwaysService","setResult","getPathways","response","listOfFiles","f","typedFetch","listOfPromises","Promise","all","pathwaysList","payload","catch","PathwayContext","PathwayProvider","pathways","setPathways","service","servicePayload","addPathway","currentPathways","deletePathway","updatePathwayAtIndex","index","usePathwayContext","decodeURIComponent","pathwayIndex","findIndex","UserContext","UserProvider","user","setUser","textTransform","tabs","tab","classes","component","faSpinner","spin","createPathwayButton","alignSelf","pathwayList","marginTop","pathwaysListButton","dialogCloseButton","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","align","Link","faFileDownload","faTrashAlt","pathwayNameRef","pathwayDescRef","closeModal","handleCreateNewPathway","preventDefault","Start","createNewPathway","Dialog","aria-labelledby","DialogTitle","disableTypography","onSubmit","DialogContent","required","DialogActions","openNewPathwayModal","closeNewPathwayModal","buttonRow","buildCriteriaButton","criteriaList","editButton","chooseFileInput","inputButton","whiteSpace","fileName","datetime","moment","fromNow","setFileName","importFileRef","selectFile","files","handleChooseFile","faFileImport","openImportModal","closeImportModal","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6ed42024.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"actionable\":\"Node_actionable__bHXKd\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childNotActionable\":\"Node_childNotActionable__1bfBq\",\"childActionable\":\"Node_childActionable__SwUjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missingDataPopup\":\"MissingDataPopup_missingDataPopup__A-EBJ\",\"popupContent\":\"MissingDataPopup_popupContent__24BvC\",\"popupTrigger\":\"MissingDataPopup_popupTrigger__11eAy\",\"popupChoice\":\"MissingDataPopup_popupChoice__5oEld\",\"selected\":\"MissingDataPopup_selected__20Or7\",\"footer\":\"MissingDataPopup_footer__1wJXm\",\"externalLink\":\"MissingDataPopup_externalLink__3oYt-\"};","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Builder_display__23HzN\",\"graph\":\"Builder_graph__lF-uJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathwayPopup\":\"PathwayPopup_pathwayPopup__2moYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  blue: '#5d89a1',\n  red: '#d95d77',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily: [\n    'Open Sans',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'Roboto',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    'Fira Sans',\n    'Droid Sans',\n    'Helvetica Neue',\n    'sans-serif'\n  ].join(',')\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic',\n      '&.Mui-error': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600\n    },\n    input: {\n      '&::selection': {\n        color: colors.white,\n        backgroundColor: colors.grayDark\n      },\n      '&:-webkit-autofill': {\n        transitionDelay: '9999s',\n        transitionProperty: 'background-color, color'\n      }\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      padding: '1em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      padding: '0 4em'\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      padding: '2em 4em'\n    }\n  }\n};\n\nconst materialUiOverridesDark = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  },\n  MuiMenuItem: {\n    root: {\n      color: colors.grayDark\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLighter\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: '#4a4a4a'\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    text: {\n      primary: colors.white,\n      secondary: colors.white\n    }\n  }),\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" className={styles.homeLink}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import { Pathway, Criteria, State, Transition, Action, GuidanceState } from 'pathways-model';\nimport { ElmLibrary, ElmStatement } from 'elm-model';\nimport shortid from 'shortid';\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\n\nexport function createNewPathway(name: string, description?: string, pathwayId?: string): Pathway {\n  return {\n    id: pathwayId ?? shortid.generate(),\n    name: name,\n    description: description ?? '',\n    library: '',\n    criteria: [],\n    states: {\n      Start: {\n        key: 'Start',\n        label: 'Start',\n        transitions: []\n      }\n    }\n  };\n}\n\nexport function downloadPathway(pathway: Pathway): void {\n  const pathwayString = exportPathway(pathway);\n  // Create blob from pathwayString to save to file system\n  const pathwayBlob = new Blob([pathwayString], {\n    type: 'application/json'\n  });\n  // Temporarily create hidden <a> tag to download pathwayBlob\n  // File name is set to <pathway-name>.json\n  const url = window.URL.createObjectURL(pathwayBlob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `${pathway.name}.json`;\n  a.click();\n  window.URL.revokeObjectURL(url);\n}\n\nexport function exportPathway(pathway: Pathway): string {\n  const elm: ElmLibrary = {\n    library: {\n      identifier: {\n        id: pathway.id,\n        version: '1.0.0'\n      },\n      schemaIdentifier: {\n        id: 'urn:hl7-org:elm',\n        version: 'r1'\n      },\n      usings: {\n        def: [\n          {\n            localIdentifier: 'System',\n            uri: 'urn:hl7-org:elm-types:r1'\n          },\n          {\n            localId: '1',\n            locator: '3:1-3:26',\n            localIdentifier: 'FHIR',\n            uri: 'http://hl7.org/fhir',\n            version: '4.0.0'\n          }\n        ]\n      },\n      statements: {\n        def: [\n          {\n            locator: '13:1-13:15',\n            name: 'Patient',\n            context: 'Patient',\n            expression: {\n              type: 'SingletonFrom',\n              operand: {\n                locator: '13:1-13:15',\n                dataType: '{http://hl7.org/fhir}Patient',\n                type: 'Retrieve'\n              }\n            }\n          }\n        ]\n      },\n      includes: { def: [] },\n      valueSets: { def: [] },\n      codes: { def: [] },\n      codeSystems: { def: [] }\n    }\n  };\n\n  const pathwayToExport: Pathway = {\n    ...pathway,\n    // Strip id from each criteria\n    criteria: pathway.criteria.map((criteria: Criteria) => ({ ...criteria, id: undefined })),\n    states: { ...pathway.states }\n  };\n\n  Object.keys(pathwayToExport.states).forEach((stateName: string) => {\n    const state = pathway.states[stateName];\n    if ('elm' in state && state.elm && state.key) {\n      mergeElm(elm, state.elm);\n      const elmStatement = getElmStatement(state.elm);\n      elmStatement.name = state.key;\n      elm.library.statements.def.push(elmStatement);\n    }\n\n    pathwayToExport.states[stateName] = {\n      ...pathwayToExport.states[stateName],\n      // Strip key from each state\n      key: undefined,\n      elm: undefined,\n      // Strip id from each state.transition\n      transitions: state.transitions.map((transition: Transition) => {\n        if (transition.condition?.elm) {\n          // Add tranistion.condition.elm to elm\n          mergeElm(elm, transition.condition.elm);\n          const elmStatement = getElmStatement(transition.condition.elm);\n          elmStatement.name = transition.condition.description;\n          elm.library.statements.def.push(elmStatement);\n        }\n        return {\n          ...transition,\n          id: undefined,\n          condition: transition.condition ? { ...transition.condition, elm: undefined } : undefined\n        };\n      }),\n      // Strip id from each state.action\n      action:\n        (state as GuidanceState).action == null\n          ? undefined\n          : (state as GuidanceState).action.map((action: Action) => ({\n              ...action,\n              id: undefined\n            }))\n    };\n  });\n\n  setNavigationalElm(pathwayToExport, elm);\n\n  return JSON.stringify(pathwayToExport, undefined, 2);\n}\n\nfunction mergeElm(elm: ElmLibrary, additionalElm: ElmLibrary): void {\n  // Merge usings\n  additionalElm.library.usings?.def.forEach(using => {\n    // Check if it is in ELM\n    if (!elm.library.usings?.def.find(def => def.uri === using.uri))\n      elm.library.usings?.def.push(using);\n  });\n\n  // Merge includes\n  additionalElm.library.includes?.def.forEach(include => {\n    if (!elm.library.includes?.def.find(def => def.path === include.path))\n      elm.library.includes?.def.push(include);\n  });\n\n  // Merge valueSets\n  additionalElm.library.valueSets?.def.forEach(valueSet => {\n    if (!elm.library.valueSets?.def.find(def => def.id === valueSet.id))\n      elm.library.valueSets?.def.push(valueSet);\n  });\n  // Merge codes\n  additionalElm.library.codes?.def.forEach(code => {\n    if (!elm.library.codes?.def.find(def => def.name === code.name))\n      elm.library.codes?.def.push(code);\n  });\n  // Merge codesystems\n  additionalElm.library.codeSystems?.def.forEach(codesystem => {\n    if (!elm.library.codeSystems?.def.find(def => def.name === codesystem.name))\n      elm.library.codeSystems?.def.push(codesystem);\n  });\n\n  // TODO: merge concepts\n}\n\nfunction getElmStatement(elm: ElmLibrary): ElmStatement {\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatement = elm.library.statements.def.find(\n    def => !defaultStatementNames.includes(def.name)\n  );\n\n  // elmStatement type is ElmStatement | undefined but criteria\n  // provider validates such a statement exists in the elm\n  return elmStatement as ElmStatement;\n}\n\n// TODO: possibly add more criteria methods\nexport function addCriteria(\n  pathway: Pathway,\n  elementName: string,\n  expected: string,\n  cql: string\n): string {\n  const id = shortid.generate();\n  const criteria: Criteria = {\n    id: id,\n    elementName: elementName,\n    expected: expected,\n    cql: cql\n  };\n  pathway.criteria.push(criteria);\n\n  return id;\n}\n\nexport function setNavigationalElm(pathway: Pathway, elm: object): void {\n  if (!pathway.elm) pathway.elm = {};\n  pathway.elm.navigational = elm;\n}\n\nexport function setCriteriaElm(pathway: Pathway, elm: object): void {\n  if (!pathway.elm) pathway.elm = {};\n  pathway.elm.criteria = elm;\n}\n\nexport function createState(key?: string): State {\n  if (!key) key = shortid.generate();\n  const state: State = {\n    key,\n    label: 'New Node',\n    transitions: [],\n    nodeTypeIsUndefined: true\n  };\n\n  return state;\n}\n\nexport function addState(pathway: Pathway, state: State): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [state.key as string]: state\n    }\n  };\n}\n\nexport function addGuidanceState(pathway: Pathway): Pathway {\n  const state = createState();\n  const newPathway = addState(pathway, state);\n\n  return makeStateGuidance(newPathway, state.key as string);\n}\n\nexport function setStateLabel(pathway: Pathway, key: string, label: string): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        label\n      }\n    }\n  };\n}\n\nexport function setStateNodeType(pathway: Pathway, stateKey: string, nodeType: string): Pathway {\n  switch (nodeType) {\n    case 'action':\n      return makeStateGuidance(pathway, stateKey);\n    case 'branch':\n      return makeStateBranch(pathway, stateKey);\n    default:\n      return pathway;\n  }\n}\n\nexport function setStateCriteriaSource(\n  pathway: Pathway,\n  key: string,\n  criteriaSource: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        criteriaSource\n      }\n    }\n  };\n}\n\nexport function setStateAction(pathway: Pathway, key: string, action: Action[]): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        action\n      }\n    }\n  };\n}\n\nexport function setStateMcodeCriteria(\n  pathway: Pathway,\n  key: string,\n  mcodeCriteria: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        mcodeCriteria\n      }\n    }\n  };\n}\n\nexport function setStateOtherCriteria(\n  pathway: Pathway,\n  key: string,\n  otherCriteria: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        otherCriteria\n      }\n    }\n  };\n}\n\nexport function addTransition(\n  pathway: Pathway,\n  startStateKey: string,\n  endStateKey: string\n): Pathway {\n  const transition: Transition = {\n    id: shortid.generate(),\n    transition: endStateKey\n  };\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [startStateKey]: {\n        ...pathway.states[startStateKey],\n        transitions: [...pathway.states[startStateKey].transitions, transition]\n      }\n    }\n  };\n}\n\nexport function setTransitionCondition(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string,\n  elm: ElmLibrary,\n  criteriaLabel?: string\n): Pathway {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  const cql = criteriaLabel ? criteriaLabel : getElmStatement(elm).name;\n\n  if (foundTransition)\n    foundTransition.condition = {\n      description: description,\n      cql: cql,\n      elm: elm\n    };\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [startNodeKey]: {\n        ...pathway.states[startNodeKey]\n      }\n    }\n  };\n}\n\nexport function setGuidanceStateElm(pathway: Pathway, stateKey: string, elm: ElmLibrary): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...pathway.states[stateKey],\n        elm: elm,\n        cql: getElmStatement(elm).name\n      }\n    }\n  };\n}\n\n// TODO: possibly add more action methods\nexport function addAction(\n  pathway: Pathway,\n  key: string,\n  type: string,\n  description: string,\n  resource: MedicationRequest | ServiceRequest\n): string {\n  const id = shortid.generate();\n  const action = {\n    id: id,\n    type: type,\n    description: description,\n    resource: resource\n  };\n  (pathway.states[key] as GuidanceState).action.push(action);\n  return id;\n}\n\nexport function getNodeType(pathway: Pathway, key: string | undefined): string {\n  if (!key) {\n    return 'null';\n  }\n  const state = pathway.states[key];\n  if (state.nodeTypeIsUndefined) {\n    return 'null';\n  } else if (!(state as GuidanceState).action && key !== 'Start') {\n    return 'branch';\n  } else {\n    return 'action';\n  }\n}\n\n/*\nSet Element Functions\n*/\nexport function setPathwayName(pathway: Pathway, name: string): void {\n  pathway.name = name;\n}\n\nexport function setPathwayDescription(pathway: Pathway, description: string): void {\n  pathway.description = description;\n}\n\nexport function setLibrary(pathway: Pathway, library: string): void {\n  pathway.library = library;\n}\n\nexport function setTransition(\n  pathway: Pathway,\n  startStateKey: string,\n  endStateKey: string,\n  transitionId: string\n): void {\n  const transition = pathway.states[startStateKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n  if (transition) transition.transition = endStateKey;\n}\n\nexport function setTransitionConditionDescription(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string\n): Pathway {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition?.condition) {\n    foundTransition.condition.description = description;\n  } else if (foundTransition) {\n    foundTransition.condition = {\n      description: description,\n      cql: ''\n    };\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [startNodeKey]: {\n        ...pathway.states[startNodeKey]\n      }\n    }\n  };\n}\n\nexport function setTransitionConditionElm(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  elm: ElmLibrary\n): void {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition?.condition) {\n    foundTransition.condition.elm = elm;\n    foundTransition.condition.cql = getElmStatement(elm).name;\n  }\n}\n\nexport function setActionType(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  type: string\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.type = type;\n  }\n}\n\nexport function setActionDescription(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  description: string\n): void {\n  const state = (pathway.states[stateKey] as GuidanceState).action;\n\n  if (state) {\n    const action = state.find((action: Action) => action.id === actionId);\n    if (action) {\n      action.description = description;\n    }\n  }\n}\n\nexport function setActionResource(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  resource: MedicationRequest | ServiceRequest\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.resource = resource;\n  }\n}\n\nexport function setActionResourceDisplay(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  display: string\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    const resource = action?.resource;\n    if (\n      resource?.resourceType === 'MedicationRequest' &&\n      resource.medicationCodeableConcept.coding.length\n    )\n      resource.medicationCodeableConcept.coding[0].display = display;\n    else if (resource?.resourceType === 'ServiceRequest' && resource.code.coding.length)\n      resource.code.coding[0].display = display;\n  }\n}\n\nexport function makeStateGuidance(pathway: Pathway, stateKey: string): Pathway {\n  const state = pathway.states[stateKey] as GuidanceState;\n\n  if (state.cql !== undefined && state.action !== undefined) {\n    return pathway;\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...state,\n        cql: '',\n        action: [],\n        nodeTypeIsUndefined: undefined\n      }\n    }\n  };\n}\n\nexport function makeStateBranch(pathway: Pathway, stateKey: string): Pathway {\n  const state = pathway.states[stateKey] as GuidanceState;\n\n  if (\n    state.cql === undefined &&\n    state.elm === undefined &&\n    state.action === undefined &&\n    state.nodeTypeIsUndefined === undefined\n  ) {\n    return pathway;\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...state,\n        cql: undefined,\n        elm: undefined,\n        action: undefined,\n        nodeTypeIsUndefined: undefined\n      }\n    }\n  };\n}\n\nexport function createCQL(action: Action, stateKey: string): string {\n  const resource = action.resource;\n  // CQl identifier cannot start with a number or contain '-'\n  const cqlId = `cql${shortid.generate().replace(/-/g, 'a')}`;\n  let cql = `library ${cqlId} version '1'\\nusing FHIR version '4.0.0'\\n`;\n\n  const codesystemStatement = (system: string): string => `codesystem \"${system}\": '${system}'\\n`;\n\n  const returnStatement = (resourceType: string): string =>\n    `return Tuple{ resourceType: '${resourceType}', id: R.id.value, status: R.status.value}`;\n\n  const retrieveStatement = (resourceType: string): string => `[${resourceType}: \"${cqlId} code\"]`;\n\n  const defineStatement = (): string => `define \"${stateKey}\":`;\n\n  if (resource.resourceType === 'MedicationRequest') {\n    const coding = resource.medicationCodeableConcept.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      ${retrieveStatement('MedicationRequest')} R ${returnStatement('MedicationRequest')}`;\n  } else if (resource.resourceType === 'ServiceRequest') {\n    const coding = resource.code.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      if exists ${retrieveStatement('Procedure')} \n      then ${retrieveStatement('Procedure')} R ${returnStatement('Procedure')} \n      else ${retrieveStatement('ServiceRequest')} R ${returnStatement('ServiceRequest')}`;\n  } else if (resource.resourceType === 'CarePlan') {\n    cql += `${defineStatement()}\n      [CarePlan] R where R.title.value = '${escape(resource.title)}' ${returnStatement(\n      'CarePlan'\n    )}`;\n  } else {\n    console.error(\n      'Auto generating CQL for action - unsupported resource type: ' + resource.resourceType\n    );\n  }\n\n  return cql;\n}\n\n/*\nRemove Element Function\n*/\nexport function removePathwayDescription(pathway: Pathway): void {\n  delete pathway.description;\n}\n\nexport function removeCriteria(pathway: Pathway, id: string): void {\n  const criteria = pathway.criteria.filter((criteria: Criteria) => criteria.id !== id);\n  pathway.criteria = criteria;\n}\n\nexport function removeNavigationalElm(pathway: Pathway): void {\n  delete pathway.elm?.navigational;\n}\n\nexport function removeCriteriaElm(pathway: Pathway): void {\n  delete pathway.elm?.criteria;\n}\n\nexport function removeState(pathway: Pathway, key: string): void {\n  delete pathway.states[key];\n\n  Object.keys(pathway.states).forEach((stateName: string) => {\n    const state = pathway.states[stateName];\n    state.transitions.forEach((transition: Transition) => {\n      if (transition.transition === key)\n        removeTransition(pathway, stateName, transition.id ?? '-1');\n    });\n  });\n}\n\nexport function removeTransitionCondition(\n  pathway: Pathway,\n  stateKey: string,\n  transitionId: string\n): void {\n  const transition = pathway.states[stateKey].transitions.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n  if (transition) delete transition.condition;\n}\n\nexport function removeTransition(pathway: Pathway, stateKey: string, transitionId: string): void {\n  const transitions = pathway.states[stateKey].transitions.filter(\n    (transition: Transition) => transition.id !== transitionId\n  );\n  pathway.states[stateKey].transitions = transitions;\n}\n\nexport function removeAction(pathway: Pathway, stateKey: string, actionId: string): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const actions = (pathway.states[stateKey] as GuidanceState).action.filter(\n      (action: Action) => action.id !== actionId\n    );\n    (pathway.states[stateKey] as GuidanceState).action = actions;\n  }\n}\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em',\n      justifyContent: 'space-between'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    navigationIcons: {\n      fontSize: '20px',\n      color: theme.palette.grey['800'],\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation' }\n);\n","import React, { FC, useCallback, useState, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\n\nimport { Pathway } from 'pathways-model';\nimport { downloadPathway } from 'utils/builder';\nimport useStyles from './styles';\n\ninterface Props {\n  pathway: Pathway;\n}\n\nconst Navigation: FC<Props> = ({ pathway }) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const styles = useStyles();\n  const history = useHistory();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleGoBack = useCallback((): void => {\n    history.push('/');\n  }, [history]);\n\n  return (\n    <nav className={styles.root}>\n      <div>\n        <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n          <FontAwesomeIcon icon={faChevronLeft} className={styles.navigationIcons} />\n        </IconButton>\n\n        <span className={styles.pathwayName}>{pathway?.name}</span>\n      </div>\n      <IconButton onClick={openMenu} aria-controls=\"pathway-options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faEllipsisH} className={styles.navigationIcons} />\n      </IconButton>\n      <Menu\n        id=\"pathway-options-menu\"\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem\n          onClick={(): void => {\n            downloadPathway(pathway);\n            closeMenu();\n          }}\n        >\n          Export Pathway\n        </MenuItem>\n      </Menu>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding,\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.grey['800'],\n      width: '33%',\n      minWidth: '500px',\n      overflowY: 'scroll',\n      float: 'left'\n    },\n    formControl: {\n      margin: theme.spacing(1, 0),\n      minWidth: 375\n    },\n    divider: {\n      width: '100%'\n    },\n    headerLabelStart: {\n      cursor: 'default'\n    },\n    displayText: {\n      margin: '0 0 5px 0',\n      fontWeight: 900,\n      fontSize: '1em'\n    },\n    sidebarHeader: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    sidebarHeaderGroup: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    sidebarHeaderButton: {\n      height: '45px',\n      width: '45px',\n      color: theme.palette.text.primary\n    },\n    headerLabelGroup: {\n      display: 'flex',\n      cursor: 'pointer',\n      height: '60px'\n    },\n    headerLabel: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '1.6em',\n      fontWeight: 700,\n      margin: '0 5px'\n    },\n    headerLabelText: {\n      marginBottom: '5px'\n    },\n    editIcon: {\n      fontSize: '0.6em',\n      marginLeft: '10px'\n    },\n    sidebarButtonGroup: {\n      display: 'flex',\n      margin: '10px 0'\n    },\n    sidebarButton: {\n      minWidth: 180,\n      marginRight: '20px'\n    },\n    sidebarButtonText: {\n      fontStyle: 'italic'\n    },\n    toggleSidebar: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      float: 'left',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      fontSize: '2em',\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    }\n  }),\n  { name: 'Sidebar' }\n);\n","import React, { FC, memo, useCallback, useState, useEffect, useRef, RefObject } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarHeader, BranchNode, ActionNode, NullNode } from '.';\nimport { State, GuidanceState, BranchState, Pathway } from 'pathways-model';\nimport { setStateNodeType, addTransition, createState, addState, getNodeType } from 'utils/builder';\nimport useStyles from './styles';\n\ninterface SidebarProps {\n  pathway: Pathway;\n  updatePathway: (pathway: Pathway) => void;\n  headerElement: RefObject<HTMLDivElement>;\n  currentNode: GuidanceState | BranchState | State;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ pathway, updatePathway, headerElement, currentNode }) => {\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n  const currentNodeKey = currentNode?.key;\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeKey) updatePathway(setStateNodeType(pathway, currentNodeKey, nodeType));\n    },\n    [pathway, updatePathway, currentNodeKey]\n  );\n\n  const redirectToNode = useCallback(\n    nodeKey => {\n      const url = `/builder/${encodeURIComponent(pathway.id)}/node/${encodeURIComponent(nodeKey)}`;\n      if (url !== history.location.pathname) {\n        history.push(url);\n      }\n    },\n    [history, pathway.id]\n  );\n\n  const addNode = useCallback(\n    (nodeType: string): void => {\n      if (!currentNodeKey) return;\n\n      const newState = createState();\n      let newPathway = addState(pathway, newState);\n      newPathway = addTransition(newPathway, currentNodeKey, newState.key as string);\n      newPathway = setStateNodeType(newPathway, newState.key as string, nodeType);\n      updatePathway(newPathway);\n      redirectToNode(newState.key);\n    },\n    [pathway, updatePathway, currentNodeKey, redirectToNode]\n  );\n\n  // Set the height of the sidebar container\n  useEffect(() => {\n    if (sidebarContainerElement?.current && headerElement?.current)\n      sidebarContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [isExpanded, headerElement]);\n\n  const nodeType = getNodeType(pathway, currentNodeKey);\n  return (\n    <>\n      {isExpanded && (\n        <div className={styles.root} ref={sidebarContainerElement}>\n          <SidebarHeader\n            pathway={pathway}\n            currentNode={currentNode}\n            updatePathway={updatePathway}\n            isTransition={false}\n          />\n\n          <hr className={styles.divider} />\n\n          {nodeType === 'null' && (\n            <NullNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n              addNode={addNode}\n            />\n          )}\n\n          {nodeType === 'action' && (\n            <ActionNode\n              pathway={pathway}\n              currentNode={currentNode as GuidanceState}\n              changeNodeType={changeNodeType}\n              updatePathway={updatePathway}\n              addNode={addNode}\n            />\n          )}\n\n          {nodeType === 'branch' && (\n            <BranchNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n              updatePathway={updatePathway}\n            />\n          )}\n        </div>\n      )}\n\n      <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n        <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n      </div>\n    </>\n  );\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent, FocusEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faEllipsisH,\n  faChevronLeft,\n  faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input } from '@material-ui/core';\n\nimport { Pathway, State } from 'pathways-model';\nimport { setStateLabel } from 'utils/builder';\nimport useStyles from './styles';\n\ninterface SidebarHeaderProps {\n  pathway: Pathway;\n  currentNode: State;\n  updatePathway: (pathway: Pathway) => void;\n  isTransition: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({\n  pathway,\n  currentNode,\n  updatePathway,\n  isTransition\n}) => {\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const currentNodeKey = currentNode?.key;\n  const currentNodeLabel = currentNode?.label || '';\n  const styles = useStyles();\n\n  const goToParentNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const goToNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const openNodeOptions = useCallback(() => {\n    // TODO\n  }, []);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (currentNodeKey) updatePathway(setStateLabel(pathway, currentNodeKey, label));\n    setShowInput(false);\n  }, [pathway, updatePathway, currentNodeKey]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {currentNodeKey !== 'Start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput && currentNodeKey !== 'Start' ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={currentNodeLabel}\n                autoFocus\n                onFocus={(event: FocusEvent<HTMLInputElement>): void => event.target.select()}\n              />\n            </FormControl>\n          ) : (\n            <div\n              className={clsx(\n                styles.headerLabel,\n                styles.headerLabelText,\n                currentNodeKey === 'Start' && styles.headerLabelStart\n              )}\n            >\n              {currentNodeLabel}\n              {currentNodeKey !== 'Start' && (\n                <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        <IconButton\n          className={styles.sidebarHeaderButton}\n          onClick={isTransition ? goToNode : openNodeOptions}\n          aria-label={isTransition ? 'go to transition node' : 'open node options'}\n        >\n          <FontAwesomeIcon icon={isTransition ? faChevronRight : faEllipsisH} />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\n\ninterface SidebarButtonProps {\n  buttonName: string;\n  buttonIcon: ReactNode;\n  buttonText: string;\n  onClick?: () => void;\n}\n\nconst SidebarButton: FC<SidebarButtonProps> = ({ buttonName, buttonIcon, buttonText, onClick }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.sidebarButtonGroup}>\n      <Button\n        className={styles.sidebarButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={buttonIcon}\n        onClick={onClick}\n      >\n        {buttonName}\n      </Button>\n\n      <div className={styles.sidebarButtonText}>{buttonText}</div>\n    </div>\n  );\n};\n\nexport default memo(SidebarButton);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface DropDownProps {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  value?: string;\n  onChange: Function | null;\n}\n\nconst DropDown: FC<DropDownProps> = ({ id, label, options, value, onChange }: DropDownProps) => {\n  const handleSetSelected = useCallback(\n    (event: ChangeEvent<{ value: unknown }>): void => {\n      if (onChange) onChange(event);\n    },\n    [onChange]\n  );\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n\n      <Select\n        id={`${id}-select`}\n        value={value || ''}\n        onChange={handleSetSelected}\n        label={label}\n        error={value == null || value === ''}\n        MenuProps={{\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          }\n        }}\n        displayEmpty\n      >\n        {options.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(DropDown);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarButton, BranchTransition } from '.';\nimport DropDown from 'components/elements/DropDown';\nimport { addTransition, createState, addState } from 'utils/builder';\nimport { Pathway, State } from 'pathways-model';\nimport useStyles from './styles';\n\nconst nodeTypeOptions = [\n  { value: 'action', label: 'Action' },\n  { value: 'branch', label: 'Branch' }\n];\n\ninterface BranchNodeProps {\n  pathway: Pathway;\n  currentNode: State;\n  changeNodeType: (event: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nconst BranchNode: FC<BranchNodeProps> = ({\n  pathway,\n  currentNode,\n  changeNodeType,\n  updatePathway\n}) => {\n  const currentNodeKey = currentNode?.key;\n  const styles = useStyles();\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const handleAddTransition = useCallback((): void => {\n    const newState = createState();\n\n    const newPathway = addState(pathway, newState);\n    updatePathway(addTransition(newPathway, currentNodeKey || '', newState.key as string));\n  }, [pathway, updatePathway, currentNodeKey]);\n\n  return (\n    <>\n      <DropDown\n        id=\"nodeType\"\n        label=\"Node Type\"\n        options={nodeTypeOptions}\n        onChange={selectNodeType}\n        value=\"branch\"\n      />\n      {currentNode.transitions.map(transition => {\n        return (\n          <BranchTransition\n            key={transition.id}\n            pathway={pathway}\n            currentNodeKey={currentNodeKey || ''}\n            transition={transition}\n            updatePathway={updatePathway}\n          />\n        );\n      })}\n\n      <hr className={styles.divider} />\n\n      <SidebarButton\n        buttonName=\"Add Transition\"\n        buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n        buttonText=\"Add transition logic for a clinical decision within a workflow.\"\n        onClick={handleAddTransition}\n      />\n    </>\n  );\n};\n\nexport default memo(BranchNode);\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<object> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from '.';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  setStateAction,\n  createCQL,\n  setActionDescription,\n  setGuidanceStateElm\n} from 'utils/builder';\nimport DropDown from 'components/elements/DropDown';\nimport { Pathway, GuidanceState, Action } from 'pathways-model';\nimport { ElmLibrary } from 'elm-model';\nimport useStyles from './styles';\nimport shortid from 'shortid';\nimport { TextField } from '@material-ui/core';\nimport { convertBasicCQL } from 'engine/cql-to-elm';\n\nconst nodeTypeOptions = [\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\nconst actionTypeOptions = [\n  { label: 'Medication', value: 'MedicationRequest' },\n  { label: 'Procedure', value: 'ServiceRequest' },\n  { label: 'Regimen', value: 'CarePlan' }\n];\n\nconst codeSystemOptions = [\n  { label: 'ICD-9-CM', value: 'http://hl7.org/fhir/sid/icd-9-cm' },\n  { label: 'ICD-10-CM', value: 'http://hl7.org/fhir/sid/icd-10-cm' },\n  { label: 'LOINC', value: 'http://loinc.org' },\n  { label: 'NCI', value: 'http://ncimeta.nci.nih.gov' },\n  { label: 'RXNORM', value: 'http://www.nlm.nih.gov/research/umls/rxnorm' },\n  { label: 'SNOMED', value: 'http://snomed.info/sct' }\n];\n\ninterface ActionNodeProps {\n  pathway: Pathway;\n  currentNode: GuidanceState;\n  changeNodeType: (event: string) => void;\n  addNode: (event: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nconst ActionNode: FC<ActionNodeProps> = ({\n  pathway,\n  currentNode,\n  changeNodeType,\n  addNode,\n  updatePathway\n}) => {\n  const styles = useStyles();\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const addActionCQL = useCallback(\n    (action: Action, currentNodeKey: string): void => {\n      const cql = createCQL(action, currentNodeKey);\n      convertBasicCQL(cql).then(elm => {\n        updatePathway(setGuidanceStateElm(pathway, currentNodeKey, elm as ElmLibrary));\n      });\n    },\n    [pathway, updatePathway]\n  );\n\n  const changeCode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const code = event?.target.value || '';\n      const action: Action = currentNode.action[0];\n      if (action.resource.medicationCodeableConcept) {\n        action.resource.medicationCodeableConcept.coding[0].code = code;\n      } else {\n        action.resource.code.coding[0].code = code;\n      }\n      resetDisplay(action);\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const changeDescription = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const description = event?.target.value || '';\n      const actionId = currentNode.action[0].id; // TODO: change this for supporting multiple action\n      if (actionId) {\n        setActionDescription(pathway, currentNode.key, actionId, description);\n        updatePathway(setStateAction(pathway, currentNode.key, currentNode.action));\n      }\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const changeTitle = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const title = event?.target.value || '';\n      const action = currentNode.action[0];\n      action.resource.title = title;\n      resetDisplay(action);\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n\n      addActionCQL(action, currentNode.key);\n    },\n    [currentNode, pathway, updatePathway, addActionCQL]\n  );\n\n  const selectActionType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n      const value = event?.target.value || '';\n      const actionType = actionTypeOptions.find(option => {\n        return option.value === value;\n      });\n      let action: Action;\n      if (actionType?.value === 'CarePlan') {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            title: ''\n          }\n        };\n      } else if (actionType?.value === 'MedicationRequest') {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            medicationCodeableConcept: {\n              coding: [\n                {\n                  system: '',\n                  code: '',\n                  display: ''\n                }\n              ]\n            }\n          }\n        };\n      } else {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            code: {\n              coding: [\n                {\n                  system: '',\n                  code: '',\n                  display: ''\n                }\n              ]\n            }\n          }\n        };\n      }\n\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const selectCodeSystem = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const codeSystem = event?.target.value || '';\n      const action = currentNode.action[0];\n      if (action.resource.medicationCodeableConcept) {\n        action.resource.medicationCodeableConcept.coding[0].system = codeSystem;\n      } else {\n        action.resource.code.coding[0].system = codeSystem;\n      }\n      resetDisplay(action);\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const validateFunction = (): void => {\n    if (currentNode.key && currentNode.action.length) {\n      const action = currentNode.action[0];\n      if (action.resource.medicationCodeableConcept) {\n        action.resource.medicationCodeableConcept.coding[0].display = 'Example display text';\n      } else if (action.resource.title) {\n        action.resource.description = 'Example CarePlan Text';\n      } else {\n        action.resource.code.coding[0].display = 'Example display text'; // TODO: actually validate\n      }\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n\n      addActionCQL(action, currentNode.key);\n    } else {\n      console.error('No Actions -- Cannot Validate');\n    }\n  };\n\n  const resetDisplay = (action: Action): void => {\n    if (action.resource.medicationCodeableConcept) {\n      action.resource.medicationCodeableConcept.coding[0].display = '';\n    } else if (action.resource.resourceType === 'CarePlan') {\n      action.resource.description = '';\n    } else {\n      action.resource.code.coding[0].display = ''; // TODO: actually validate\n    }\n  };\n\n  const onEnter = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      validateFunction();\n    }\n  };\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode.key !== undefined && currentNode.key !== 'Start';\n\n  const action = currentNode.action;\n  const resource = action?.length > 0 && action[0].resource;\n  let system = '';\n  let code = '';\n  let display = '';\n  if (resource.resourceType === 'MedicationRequest' || resource.resourceType === 'ServiceRequest') {\n    system = resource.code\n      ? resource.code.coding[0].system\n      : resource.medicationCodeableConcept.coding[0].system;\n    code = resource.code\n      ? resource.code.coding[0].code\n      : resource.medicationCodeableConcept.coding[0].code;\n    display = resource.code\n      ? resource.code.coding[0].display\n      : resource.medicationCodeableConcept.coding[0].display;\n  } else {\n    display = resource.description;\n  }\n  // If the node does not have transitions it can be added to\n  const displayAddButtons = currentNode.key !== undefined && currentNode.transitions.length === 0;\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <DropDown\n            id=\"nodeType\"\n            label=\"Node Type\"\n            options={nodeTypeOptions}\n            onChange={selectNodeType}\n            value=\"action\"\n          />\n          <DropDown\n            id=\"actionType\"\n            label=\"Action Type\"\n            options={actionTypeOptions}\n            onChange={selectActionType}\n            value={resource.resourceType}\n          />\n          {(resource.resourceType === 'MedicationRequest' ||\n            resource.resourceType === 'ServiceRequest') && (\n            <>\n              <DropDown\n                id=\"codeSystem\"\n                label=\"Code System\"\n                options={codeSystemOptions}\n                onChange={selectCodeSystem}\n                value={system}\n              />\n              {system && (\n                <TextField\n                  id=\"code-input\"\n                  label=\"Code\"\n                  value={code}\n                  onChange={changeCode}\n                  variant=\"outlined\"\n                  error={code === ''}\n                  inputProps={{ onKeyPress: onEnter }}\n                />\n              )}\n              {code && (\n                <>\n                  {display ? (\n                    <div className={styles.displayText}>\n                      <FontAwesomeIcon icon={faCheckCircle} /> {display}\n                    </div>\n                  ) : (\n                    <SidebarButton\n                      buttonName=\"Validate\"\n                      buttonIcon={<FontAwesomeIcon icon={faCheckCircle} />}\n                      buttonText={display || 'Check validation of the input system and code'}\n                      onClick={validateFunction}\n                    />\n                  )}\n\n                  <TextField\n                    id=\"description-input\"\n                    label=\"Description\"\n                    value={action[0].description || ''}\n                    onChange={changeDescription}\n                    variant=\"outlined\"\n                    error={action[0].description === ''}\n                  />\n                </>\n              )}\n            </>\n          )}\n\n          {resource.resourceType === 'CarePlan' && (\n            // design for careplan ?\n            <>\n              <TextField\n                id=\"title-input\"\n                label=\"Title\"\n                value={resource.title || ''}\n                onChange={changeTitle}\n                variant=\"outlined\"\n                error={resource.title == null}\n                inputProps={{ onKeyPress: onEnter }}\n              />\n              {resource.title && (\n                <TextField\n                  id=\"description-input\"\n                  label=\"Description\"\n                  value={action[0].description || ''}\n                  onChange={changeDescription}\n                  variant=\"outlined\"\n                  error={action[0].description === ''}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n      {displayAddButtons && (\n        <>\n          {changeNodeTypeEnabled && <hr className={styles.divider} />}\n          <SidebarButton\n            buttonName=\"Add Action Node\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"Any clinical or workflow step which is not a decision.\"\n            onClick={(): void => addNode('action')}\n          />\n\n          <SidebarButton\n            buttonName=\"Add Branch Node\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"A logical branching point based on clinical or workflow criteria.\"\n            onClick={(): void => addNode('branch')}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNode);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\n\nimport DropDown from 'components/elements/DropDown';\nimport { Pathway, State } from 'pathways-model';\n\nconst nodeTypeOptions = [\n  { label: '', value: '' },\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\ninterface NullNodeProps {\n  pathway: Pathway;\n  currentNode: State;\n  changeNodeType: (event: string) => void;\n  addNode: (event: string) => void;\n}\n\nconst NullNode: FC<NullNodeProps> = ({ pathway, currentNode, changeNodeType, addNode }) => {\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode.key !== undefined && currentNode.key !== 'Start';\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <DropDown\n          id=\"nodeType\"\n          label=\"Node Type\"\n          options={nodeTypeOptions}\n          onChange={selectNodeType}\n          value=\"\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default memo(NullNode);\n","import React, {\n  createContext,\n  ReactNode,\n  FC,\n  useState,\n  memo,\n  useContext,\n  useCallback\n} from 'react';\nimport shortid from 'shortid';\nimport { ElmStatement } from 'elm-model';\n\ninterface Criteria {\n  id: string;\n  label: string;\n  version: string;\n  modified: number;\n  elm: object;\n}\n\ninterface CriteriaContextInterface {\n  criteria: Criteria[];\n  addCriteria: (file: File) => void;\n  deleteCriteria: (id: string) => void;\n}\n\nexport const CriteriaContext = createContext<CriteriaContextInterface>(\n  {} as CriteriaContextInterface\n);\n\ninterface CriteriaProviderProps {\n  children: ReactNode;\n}\n\nexport const CriteriaProvider: FC<CriteriaProviderProps> = memo(({ children }) => {\n  const [criteria, setCriteria] = useState<Criteria[]>([]);\n\n  const addCriteria = useCallback((file: File) => {\n    const reader = new FileReader();\n    reader.onload = (event: ProgressEvent<FileReader>): void => {\n      if (event.target?.result) {\n        const rawElm = event.target.result as string;\n        const elm = JSON.parse(rawElm);\n        if (!elm.library?.identifier) {\n          alert('Please upload ELM file');\n          return;\n        }\n        const defaultStatementNames = [\n          'Patient',\n          'MeetsInclusionCriteria',\n          'InPopulation',\n          'Recommendation',\n          'Rationale',\n          'Errors'\n        ];\n        const elmStatements: ElmStatement[] = elm.library.statements.def;\n        const elmStatement = elmStatements.find(def => !defaultStatementNames.includes(def.name));\n        if (!elmStatement) {\n          alert('No elm statement found in that file');\n          return;\n        }\n        const newCriteria = {\n          id: shortid.generate(),\n          label: elm.library.identifier.id,\n          version: elm.library.identifier.version,\n          modified: Date.now(),\n          elm: elm\n        };\n        setCriteria(currentCriteria => [...currentCriteria, newCriteria]);\n      } else alert('Unable to read that file');\n    };\n    reader.readAsText(file);\n  }, []);\n\n  const deleteCriteria = useCallback((id: string) => {\n    setCriteria(currentCriteria => currentCriteria.filter(criteria => criteria.id !== id));\n  }, []);\n\n  return (\n    <CriteriaContext.Provider value={{ criteria, addCriteria, deleteCriteria }}>\n      {children}\n    </CriteriaContext.Provider>\n  );\n});\n\nexport const useCriteriaContext = (): CriteriaContextInterface => useContext(CriteriaContext);\n","import React, { FC, memo, useState, useCallback, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTools } from '@fortawesome/free-solid-svg-icons';\nimport DropDown from 'components/elements/DropDown';\nimport { TextField } from '@material-ui/core';\nimport { setTransitionCondition, setTransitionConditionDescription } from 'utils/builder';\nimport { SidebarHeader, SidebarButton } from '.';\nimport { Pathway, Transition } from 'pathways-model';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface BranchTransitionProps {\n  pathway: Pathway;\n  currentNodeKey: string;\n  transition: Transition;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({\n  pathway,\n  currentNodeKey,\n  transition,\n  updatePathway\n}) => {\n  const { criteria } = useCriteriaContext();\n  const criteriaOptions = criteria.map(c => ({ value: c.id, label: c.label }));\n  const styles = useStyles();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway.states[transitionKey];\n  const [useCriteriaSelected, setUseCriteriaSelected] = useState<boolean>(false);\n\n  const handleUseCriteria = useCallback((): void => {\n    setUseCriteriaSelected(!useCriteriaSelected);\n  }, [useCriteriaSelected]);\n\n  const selectCriteriaSource = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey || !transition.id) return;\n\n      const criteriaSource = event?.target.value || '';\n      let elm = undefined;\n      criteria.forEach(c => {\n        if (c.id === criteriaSource) {\n          elm = c.elm;\n        }\n      });\n      if (!elm) return;\n      updatePathway(\n        setTransitionCondition(\n          pathway,\n          currentNodeKey,\n          transition.id,\n          transition.condition?.description || '',\n          elm,\n          criteriaSource\n        )\n      );\n    },\n    [currentNodeKey, transition.id, updatePathway, pathway, transition.condition, criteria]\n  );\n\n  const setCriteriaDisplay = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey || !transition.id) return;\n\n      const criteriaDisplay = event?.target.value || '';\n      updatePathway(\n        setTransitionConditionDescription(pathway, currentNodeKey, transition.id, criteriaDisplay)\n      );\n    },\n    [currentNodeKey, transition.id, updatePathway, pathway]\n  );\n  return (\n    <>\n      <hr className={styles.divider} />\n\n      <SidebarHeader\n        pathway={pathway}\n        currentNode={transitionNode}\n        updatePathway={updatePathway}\n        isTransition={true}\n      />\n      {!(useCriteriaSelected || transition.condition?.cql) && (\n        <SidebarButton\n          buttonName=\"Use Criteria\"\n          buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n          buttonText=\"Add previously built or imported criteria logic to branch node.\"\n          onClick={handleUseCriteria}\n        />\n      )}\n\n      {(useCriteriaSelected || transition.condition?.cql) && (\n        <>\n          <DropDown\n            id=\"Criteria\"\n            label=\"Criteria\"\n            options={criteriaOptions}\n            onChange={selectCriteriaSource}\n            value={transition.condition?.cql || undefined}\n          />\n          <TextField\n            label=\"Criteria Display\"\n            value={transition.condition?.description || ''}\n            variant=\"outlined\"\n            onChange={setCriteriaDisplay}\n            error={!transition.condition?.description}\n          />\n        </>\n      )}\n\n      <SidebarButton\n        buttonName=\"Build Criteria\"\n        buttonIcon={<FontAwesomeIcon icon={faTools} />}\n        buttonText=\"Create new criteria logic to add to branch node.\"\n      />\n    </>\n  );\n};\nexport default memo(BranchTransition);\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const nodeDimension = nodeDimensions[stateName];\n\n    if (nodeDimension) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2,\n      width: node.width\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactElement } from 'react';\nimport { Popup, StrictPopupProps } from 'semantic-ui-react';\nimport styles from './PathwayPopup.module.scss';\n\ninterface PathwayPopupProps {\n  Content: ReactElement;\n  Trigger: ReactElement;\n  popupPosition?: StrictPopupProps['position'];\n  open?: boolean;\n  setOpen?: Function;\n  className?: string;\n}\n\nconst PathwayPopup: FC<PathwayPopupProps> = ({\n  Content,\n  Trigger,\n  popupPosition,\n  open,\n  setOpen,\n  className\n}: PathwayPopupProps) => {\n  return (\n    <Popup\n      content={Content}\n      position={popupPosition || 'bottom right'}\n      className={`${styles.pathwayPopup} ${className}`}\n      on=\"click\"\n      open={open}\n      onOpen={(): void => {\n        setOpen && setOpen(true);\n      }}\n      onClose={(): void => {\n        setOpen && setOpen(false);\n      }}\n      pinned\n      trigger={Trigger}\n    />\n  );\n};\n\nexport default PathwayPopup;\n","import React, { FC } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} button ${type === 'decline' && styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default ActionButton;\n","import React, { FC, useState } from 'react';\nimport styles from './MissingDataPopup.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\ninterface MissingDataPopup {\n  values: string[];\n}\n\nconst MissingDataPopup: FC<MissingDataPopup> = ({ values }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <PathwayPopup\n      Content={<PopupContent values={values} setOpen={setOpen}></PopupContent>}\n      className={styles.missingDataPopup}\n      Trigger={\n        <div className={styles.popupTrigger}>\n          missing data\n          <FontAwesomeIcon icon={faEdit} className={styles.externalLink} />\n        </div>\n      }\n      open={open}\n      setOpen={setOpen}\n    />\n  );\n};\n\ninterface PopupContentProps {\n  values: Array<string>;\n  setOpen: Function;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ values, setOpen }) => {\n  const [showCheck, setShowCheck] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('');\n\n  return (\n    <div>\n      <div className={styles.popupContent}>\n        Select Value:\n        <div>\n          {values.map(e => {\n            return (\n              <div\n                key={e}\n                className={styles.popupChoice + ' ' + (selected === e ? styles.selected : '')}\n                onClick={(): void => {\n                  if (showCheck && selected === e) {\n                    setShowCheck(false);\n                    setSelected('');\n                  } else {\n                    setShowCheck(true);\n                    setSelected(e);\n                  }\n                }}\n              >\n                {e}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n        {showCheck && (\n          <ActionButton\n            size=\"small\"\n            type=\"accept\"\n            onClick={(): void => {\n              setOpen(false);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MissingDataPopup;\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): state is GuidanceState {\n  const { action } = state as GuidanceState;\n  return action !== undefined;\n}\n\nexport function isBranchState(state: State): boolean {\n  const { action, label } = state as GuidanceState;\n  return action === undefined && label !== 'Start';\n}\n\ntype ConversionResource = {\n  [key: string]: string;\n};\nexport const resourceNameConversion: ConversionResource = {\n  MedicationRequest: 'Medication',\n  ServiceRequest: 'Procedure',\n  CarePlan: 'Regimen'\n};\n","import React, { FC, ReactNode, ReactElement, memo } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MissingDataPopup from 'components/MissingDataPopup';\nimport styles from './ExpandedNode.module.scss';\nimport { isBranchState, resourceNameConversion } from 'utils/nodeUtils';\n\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState;\n  isActionable: boolean;\n  isGuidance: boolean;\n}\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(({ pathwayState, isActionable, isGuidance }) => {\n  return (\n    <>\n      <ExpandedNodeMemo isGuidance={isGuidance} pathwayState={pathwayState} />\n    </>\n  );\n});\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  if (!description) return null;\n\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\nfunction renderBranch(pathwayState: State): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  const values: string[] = pathwayState.transitions\n    .map(transition => {\n      const description = transition.condition?.description;\n      return description ? description : '';\n    })\n    // Remove duplicate values\n    .filter((v, i, arr) => arr.indexOf(v) === i);\n\n  returnElements.push(\n    <ExpandedNodeField\n      key=\"value\"\n      title=\"Value\"\n      description={<MissingDataPopup values={values} />}\n    />\n  );\n\n  return returnElements;\n}\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\nfunction renderGuidance(pathwayState: GuidanceState): ReactElement[] {\n  let returnElements: ReactElement[] = [];\n  if (pathwayState.action[0]) {\n    const resource = pathwayState.action[0].resource;\n    const coding = isMedicationRequest(resource)\n      ? resource?.medicationCodeableConcept?.coding\n      : resource?.code?.coding;\n\n    const resourceType = resourceNameConversion[resource.resourceType]\n      ? resourceNameConversion[resource.resourceType]\n      : resource.resourceType;\n    returnElements = [\n      <ExpandedNodeField\n        key=\"Description\"\n        title=\"Description\"\n        description={pathwayState.action[0].description}\n      />,\n      <ExpandedNodeField key=\"Type\" title=\"Type\" description={resourceType} />,\n      <ExpandedNodeField\n        key=\"System\"\n        title=\"System\"\n        description={\n          coding &&\n          coding[0].system && (\n            <>\n              {coding[0].system}\n              <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n              </a>\n            </>\n          )\n        }\n      />,\n      <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n      <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />,\n      <ExpandedNodeField key=\"Title\" title=\"Title\" description={resource.title} />\n    ];\n  }\n\n  return returnElements;\n}\ninterface ExpandedNodeMemoProps {\n  pathwayState: GuidanceState;\n  isGuidance: boolean;\n}\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(({ pathwayState, isGuidance }) => {\n  const guidance = isGuidance && renderGuidance(pathwayState);\n  const branch = isBranchState(pathwayState) && renderBranch(pathwayState);\n  return (\n    <div className=\"expandedNode\">\n      <table className={styles.infoTable}>\n        <tbody>{guidance || branch}</tbody>\n      </table>\n    </div>\n  );\n});\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo, useCallback, useState, useEffect } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState, isBranchState } from 'utils/nodeUtils';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle,\n  faBookMedical\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface NodeProps {\n  nodeKey: string;\n  pathwayState: State;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClick?: (nodeName: string) => void;\n  currentNode: State;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      { nodeKey, pathwayState, xCoordinate, yCoordinate, expanded = false, onClick, currentNode },\n      ref\n    ) => {\n      const [hasMetadata, setHasMetadata] = useState<boolean>(\n        isGuidanceState(pathwayState) ? pathwayState.action.length > 0 : false\n      );\n\n      const onClickHandler = useCallback(() => {\n        if (onClick) onClick(nodeKey);\n      }, [onClick, nodeKey]);\n\n      useEffect(() => {\n        if (!hasMetadata && isGuidanceState(pathwayState) && pathwayState.action.length > 0) {\n          setHasMetadata(true);\n          if (!expanded) {\n            onClickHandler();\n          }\n        }\n      }, [hasMetadata, pathwayState, setHasMetadata, onClickHandler, expanded]);\n\n      const { label } = pathwayState;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n\n      const isCurrentNode = pathwayState.key === currentNode.key;\n      const isTransitionOfCurrentBranch =\n        isBranchState(currentNode) && currentNode.transitions.some(e => e?.transition === nodeKey);\n\n      const isActionable = isCurrentNode;\n      const topLevelClasses = [styles.node];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push('expanded');\n      if (isActionable || isTransitionOfCurrentBranch) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = styles.childNotActionable;\n      }\n      const isGuidance = isGuidanceState(pathwayState);\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div className={`nodeTitle ${onClickHandler && 'clickable'}`} onClick={onClickHandler}>\n            <div className=\"iconAndLabel\">\n              <NodeIcon pathwayState={pathwayState} isGuidance={isGuidance} />\n              {label}\n            </div>\n            <StatusIcon status={null} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode\n                pathwayState={pathwayState as GuidanceState}\n                isActionable={isActionable}\n                isGuidance={isGuidance}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayState: State;\n  isGuidance: boolean;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, isGuidance }) => {\n  let icon: IconDefinition | undefined;\n  if (pathwayState.label === 'Start') icon = faPlay;\n  else if (isGuidance) {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'ServiceRequest') icon = faSyringe;\n      else if (resourceType === 'CarePlan') icon = faBookMedical;\n    }\n  } else {\n    icon = faMicroscope;\n  }\n\n  return icon ? <FontAwesomeIcon icon={icon} className={styles.icon} /> : null;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status == null) {\n    return null;\n  }\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return (\n    <div className=\"statusIcon\">\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    arrow: {\n      '& path': {\n        stroke: theme.palette.primary.main,\n        strokeWidth: 2\n      },\n      '& text': {\n        fontSize: '18px'\n      }\n    },\n    currentBranchArrow: {\n      '& path': {\n        stroke: theme.palette.secondary.main\n      }\n    },\n    arrowhead: {\n      '& polygon': {\n        fill: theme.palette.primary.main\n      }\n    },\n    currentBranchArrowhead: {\n      '& polygon': {\n        fill: theme.palette.secondary.main\n      }\n    }\n  }),\n  { name: 'Arrow' }\n);\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport { State } from 'pathways-model';\nimport { isBranchState } from 'utils/nodeUtils';\nimport useStyles from './styles';\nimport clsx from 'clsx';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  widthOffset: number;\n  currentNode: State;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, widthOffset, currentNode }) => {\n  const styles = useStyles();\n  const isCurrentBranchArrow = isBranchState(currentNode) && edge.start === currentNode.key;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={clsx(styles.arrow, isCurrentBranchArrow && styles.currentBranchArrow)}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={clsx(isCurrentBranchArrow ? styles.currentBranchArrowhead : styles.arrowhead)}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import React, {\n  FC,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { Pathway, State } from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges } from 'graph-model';\nimport styles from './Graph.module.scss';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\ninterface GraphProps {\n  pathway: Pathway;\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n  currentNode: State;\n}\n\ninterface ExpandedState {\n  [key: string]: boolean | string | null;\n}\n\nconst Graph: FC<GraphProps> = memo(\n  ({ pathway, interactive = true, expandCurrentNode = true, currentNode }) => {\n    const graphElement = useRef<HTMLDivElement>(null);\n    const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n    const [parentWidth, setParentWidth] = useState<number>(\n      graphElement?.current?.parentElement?.clientWidth ?? 0\n    );\n\n    // Get the layout of the graph\n    const getGraphLayout = useCallback((): Layout => {\n      const nodeDimensions: NodeDimensions = {};\n\n      // Retrieve dimensions from nodeRefs\n      if (nodeRefs?.current) {\n        Object.keys(nodeRefs.current).forEach(key => {\n          const nodeElement = nodeRefs.current[key];\n          const width = nodeElement.clientWidth;\n          // nodeElement can have multiple children so calculate the sum to get the node height\n          const height = Array.from(nodeElement.children).reduce(\n            (acc, child) => acc + child.clientHeight,\n            0\n          );\n\n          nodeDimensions[key] = { width, height };\n        });\n      }\n\n      return graphLayout(pathway, nodeDimensions);\n    }, [pathway]);\n\n    const [layout, setLayout] = useState(getGraphLayout());\n    const { nodeCoordinates, edges } = layout;\n    const maxHeight = useMemo(() => {\n      return nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            .map(x => x.y)\n            .reduce((a, b) => Math.max(a, b))\n        : 0;\n    }, [nodeCoordinates]);\n\n    // If a node has a negative x value, shift nodes and edges to the right by that value\n    const minX =\n      nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            .map(x => x.x + parentWidth / 2)\n            .reduce((a, b) => Math.min(a, b))\n        : 0;\n\n    if (minX < 0) {\n      const toAdd = minX * -1;\n      Object.keys(nodeCoordinates).forEach(key => {\n        const node = nodeCoordinates[key];\n        node.x += toAdd;\n      });\n\n      Object.keys(edges).forEach(key => {\n        const edge = edges[key];\n\n        edge.points.forEach(p => (p.x += toAdd));\n        if (edge.label) edge.label.x += toAdd;\n      });\n    }\n\n    // Find node that is farthest to the right\n    const maxWidth = useMemo(() => {\n      return nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            // Add width of the node to account for x coordinate starting at top left corner\n            .map(x => x.x + parentWidth / 2 + (x.width ?? 0))\n            .reduce((a, b) => Math.max(a, b))\n        : 0;\n    }, [nodeCoordinates, parentWidth]);\n\n    const [expanded, setExpanded] = useState<ExpandedState>(() =>\n      Object.keys(layout).reduce(\n        (acc, curr: string) => {\n          acc[curr] = false;\n          return acc;\n        },\n        { lastSelectedNode: null } as ExpandedState\n      )\n    );\n\n    const toggleExpanded = useCallback((key: string) => {\n      if (key === 'Start') {\n        setExpanded(prevState => ({\n          ...prevState,\n          lastSelectedNode: key\n        }));\n      } else {\n        setExpanded(prevState => ({\n          ...prevState,\n          [key]:\n            !prevState[key] || prevState.lastSelectedNode === key\n              ? !prevState[key]\n              : prevState[key],\n          lastSelectedNode: key\n        }));\n      }\n    }, []);\n\n    // Recalculate graph layout if graph container size changes\n    useEffect(() => {\n      if (graphElement.current?.parentElement) {\n        new ResizeSensor(graphElement.current.parentElement, function() {\n          setParentWidth(graphElement.current?.parentElement?.clientWidth ?? 0);\n          setLayout(getGraphLayout());\n        });\n      }\n    }, [getGraphLayout]);\n\n    // Recalculate graph layout if a node is expanded\n    useEffect(() => {\n      setLayout(getGraphLayout());\n    }, [pathway, expanded, getGraphLayout]);\n\n    return (\n      <GraphMemo\n        graphElement={graphElement}\n        interactive={interactive}\n        maxHeight={maxHeight}\n        nodeCoordinates={nodeCoordinates}\n        edges={edges}\n        pathway={pathway}\n        nodeRefs={nodeRefs}\n        parentWidth={parentWidth}\n        maxWidth={maxWidth}\n        expanded={expanded}\n        toggleExpanded={toggleExpanded}\n        currentNode={currentNode}\n      />\n    );\n  }\n);\n\ninterface GraphMemoProps {\n  graphElement: RefObject<HTMLDivElement>;\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  edges: Edges;\n  pathway: Pathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  expanded: ExpandedState;\n  toggleExpanded: (key: string) => void;\n  currentNode: State;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(\n  ({\n    graphElement,\n    interactive,\n    maxHeight,\n    nodeCoordinates,\n    edges,\n    pathway,\n    nodeRefs,\n    parentWidth,\n    maxWidth,\n    expanded,\n    toggleExpanded,\n    currentNode\n  }) => {\n    const { id: pathwayId } = useParams();\n    const history = useHistory();\n    const redirectToNode = useCallback(\n      nodeId => {\n        const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeId)}`;\n        if (url !== history.location.pathname) {\n          history.push(url);\n        }\n      },\n      [history, pathwayId]\n    );\n    const onClickHandler = useCallback(\n      (nodeName: string) => {\n        if (interactive) {\n          redirectToNode(nodeName);\n          toggleExpanded(nodeName);\n        }\n      },\n      [redirectToNode, toggleExpanded, interactive]\n    );\n    return (\n      <div\n        ref={graphElement}\n        id=\"graph-root\"\n        className={styles.root}\n        style={{\n          height: interactive ? maxHeight + 150 : 'inherit',\n          width: maxWidth + 'px',\n          position: 'relative',\n          marginRight: '5px'\n        }}\n      >\n        {nodeCoordinates !== undefined\n          ? Object.keys(nodeCoordinates).map(nodeName => {\n              return (\n                <Node\n                  key={nodeName}\n                  nodeKey={nodeName}\n                  ref={(node: HTMLDivElement): void => {\n                    if (node) nodeRefs.current[nodeName] = node;\n                    else delete nodeRefs.current[nodeName];\n                  }}\n                  pathwayState={pathway.states[nodeName]}\n                  xCoordinate={nodeCoordinates[nodeName].x + parentWidth / 2}\n                  yCoordinate={nodeCoordinates[nodeName].y}\n                  expanded={Boolean(expanded[nodeName])}\n                  onClick={onClickHandler}\n                  currentNode={currentNode}\n                />\n              );\n            })\n          : []}\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{\n            width: maxWidth,\n            height: maxHeight,\n            zIndex: 1,\n            top: 0,\n            left: 0,\n            overflow: 'visible'\n          }}\n        >\n          {edges !== undefined\n            ? Object.keys(edges).map(edgeName => {\n                const edge = edges[edgeName];\n                return (\n                  <Arrow\n                    key={edgeName}\n                    edge={edge}\n                    edgeName={edgeName}\n                    widthOffset={parentWidth / 2}\n                    currentNode={currentNode}\n                  />\n                );\n              })\n            : []}\n        </svg>\n      </div>\n    );\n  }\n);\n\nexport default Graph;\n","import React, { FC, useRef, useEffect, memo } from 'react';\nimport { Pathway, State } from 'pathways-model';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport Graph from 'components/Graph';\nimport { useTheme } from 'components/ThemeProvider';\n\nimport styles from './Builder.module.scss';\n\ninterface BuilderProps {\n  pathway: Pathway;\n  updatePathway: (pathway: Pathway) => void;\n  currentNode: State;\n}\n\nconst Builder: FC<BuilderProps> = ({ pathway, updatePathway, currentNode }) => {\n  const headerElement = useRef<HTMLDivElement>(null);\n  const graphContainerElement = useRef<HTMLDivElement>(null);\n  const theme = useTheme('dark');\n\n  // Set the height of the graph container\n  useEffect(() => {\n    if (graphContainerElement?.current && headerElement?.current)\n      graphContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [pathway, headerElement, graphContainerElement]);\n\n  return (\n    <>\n      <div ref={headerElement}>\n        <Header />\n        <Navigation pathway={pathway} />\n      </div>\n\n      <div className={styles.display}>\n        <MuiThemeProvider theme={theme}>\n          <Sidebar\n            pathway={pathway}\n            updatePathway={updatePathway}\n            headerElement={headerElement}\n            currentNode={currentNode}\n          />\n        </MuiThemeProvider>\n\n        <div ref={graphContainerElement} className={styles.graph}>\n          <Graph pathway={pathway} expandCurrentNode={true} currentNode={currentNode} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default memo(Builder);\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Pathway[]>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetPathwaysService from './PathwaysService';\n\ninterface PathwayContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  deletePathway: (id: string) => void;\n  updatePathwayAtIndex: (pathway: Pathway, index: number) => void;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({} as PathwayContextInterface);\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwayProvider: FC<PathwayProviderProps> = memo(({ children }) => {\n  const [pathways, setPathways] = useState<Pathway[]>([]);\n  const service = useGetPathwaysService(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n\n  const addPathway = useCallback((pathway: Pathway) => {\n    setPathways(currentPathways => [...currentPathways, pathway]);\n  }, []);\n\n  const deletePathway = useCallback((id: string) => {\n    setPathways(currentPathways => currentPathways.filter(pathway => pathway.id !== id));\n  }, []);\n\n  const updatePathwayAtIndex = useCallback((pathway: Pathway, index: number) => {\n    setPathways(currentPathways => [\n      ...currentPathways.slice(0, index),\n      pathway,\n      ...currentPathways.slice(index + 1)\n    ]);\n  }, []);\n\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwayContext.Provider\n          value={{\n            pathways,\n            addPathway,\n            deletePathway,\n            updatePathwayAtIndex,\n            status: service.status\n          }}\n        >\n          {children}\n        </PathwayContext.Provider>\n      );\n  }\n});\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import React, { FC, memo, useMemo, useCallback } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { Pathway } from 'pathways-model';\n\nimport Builder from 'components/Builder';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nconst BuilderRoute: FC = () => {\n  const { id, nodeId } = useParams();\n  const { pathways, updatePathwayAtIndex } = usePathwayContext();\n  const pathwayId = decodeURIComponent(id);\n  const pathwayIndex = useMemo(() => pathways.findIndex(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const pathway = pathways[pathwayIndex];\n  const currentNode = pathway?.states?.[decodeURIComponent(nodeId)];\n\n  const updatePathway = useCallback(\n    (pathway: Pathway) => {\n      updatePathwayAtIndex(pathway, pathwayIndex);\n    },\n    [pathwayIndex, updatePathwayAtIndex]\n  );\n\n  if (pathway == null) return null;\n  if (currentNode == null) return <Redirect to={`/builder/${id}/node/Start`} />;\n\n  return <Builder pathway={pathway} updatePathway={updatePathway} currentNode={currentNode} />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    label: {\n      padding: `0.2em 2em`,\n      textTransform: 'none',\n      fontSize: '1.2em',\n      fontWeight: 100\n    }\n  }),\n  { name: 'Tabs' }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Tab as ReactTab, TabList, TabPanel, Tabs as ReactTabs } from 'react-tabs';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport shortid from 'shortid';\n\ninterface Tab {\n  label: string;\n  component: ReactNode;\n}\n\ninterface TabsProp {\n  tabs: Tab[];\n}\n\nconst Tabs: FC<TabsProp> = ({ tabs }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <ReactTabs>\n        <TabList>\n          {tabs.map(tab => (\n            <ReactTab key={shortid.generate()}>\n              <Button classes={{ label: styles.label }}>{tab.label}</Button>\n            </ReactTab>\n          ))}\n        </TabList>\n\n        {tabs.map(tab => (\n          <TabPanel key={shortid.generate()}>{tab.component}</TabPanel>\n        ))}\n      </ReactTabs>\n    </div>\n  );\n};\n\nexport default memo(Tabs);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end'\n    },\n    pathwayList: {\n      marginTop: '2em'\n    },\n    pathwaysListButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    }\n  }),\n  { name: 'PathwaysList' }\n);\n","import React, { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFileDownload, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport { downloadPathway } from 'utils/builder';\n\nimport useStyles from './styles';\n\nconst PathwaysTable: FC = () => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwayContext();\n\n  return (\n    <TableContainer className={styles.pathwayList}>\n      <Table aria-label=\"pathway list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Pathway Name</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell>Last Updated</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {pathways.map(pathway => (\n            <TableRow key={pathway.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {pathway.name}\n              </TableCell>\n\n              <TableCell>draft</TableCell>\n              <TableCell>2 days ago</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.pathwaysListButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                  component={Link}\n                  to={`/builder/${encodeURIComponent(pathway.id)}`}\n                >\n                  Edit\n                </Button>\n                <Button\n                  className={styles.pathwaysListButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faFileDownload} />}\n                  onClick={(): void => downloadPathway(pathway)}\n                >\n                  Export\n                </Button>\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                  onClick={(): void => deletePathway(pathway.id)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport useStyles from './styles';\nimport { createNewPathway } from 'utils/builder';\n\ninterface NewPathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst NewPathwayModal: FC<NewPathwayModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway } = usePathwayContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      addPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={handleCreateNewPathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required\n            inputRef={pathwayNameRef}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(NewPathwayModal);\n","import React, { FC, useCallback, useState, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport NewPathwayModal from './NewPathwayModal';\n\nimport useStyles from './styles';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status } = usePathwayContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={openNewPathwayModal}\n      >\n        Create Pathway\n      </Button>\n\n      <NewPathwayModal open={open} onClose={closeNewPathwayModal} />\n      {status === 'loading' ? <Loading /> : <PathwaysTable />}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    buildCriteriaButton: {\n      alignSelf: 'flex-end',\n      marginLeft: '20px'\n    },\n    criteriaList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    input: {\n      display: 'none'\n    },\n    chooseFileInput: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    inputButton: {\n      whiteSpace: 'nowrap',\n      marginRight: '1em'\n    },\n    fileName: {\n      fontStyle: 'italic'\n    }\n  }),\n  { name: 'CriteriaList' }\n);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport useStyles from './styles';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\n\nconst CriteriaTable: FC = () => {\n  const styles = useStyles();\n  const { criteria, deleteCriteria } = useCriteriaContext();\n\n  const renderDate = (datetime: number): string => {\n    return moment(datetime).fromNow();\n  };\n\n  return (\n    <TableContainer className={styles.criteriaList}>\n      <Table aria-label=\"criteria list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Criteria Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>Added</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {criteria.map(c => (\n            <TableRow key={c.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {c.label}\n              </TableCell>\n              <TableCell>{c.version}</TableCell>\n              <TableCell>{renderDate(c.modified)}</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                >\n                  Edit\n                </Button>\n\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                  onClick={(): void => deleteCriteria(c.id)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(CriteriaTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileImport, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input,\n  IconButton\n} from '@material-ui/core';\n\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface ImportCriteriaModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst ImportCriteriaModal: FC<ImportCriteriaModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const [fileName, setFileName] = useState<string>('');\n  const importFileRef = useRef<HTMLInputElement>(null);\n\n  const { addCriteria } = useCriteriaContext();\n\n  const selectFile = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const files = importFileRef?.current?.files;\n      if (files?.length) addCriteria(files[0]);\n      onClose();\n      setFileName('');\n    },\n    [addCriteria, onClose]\n  );\n\n  const handleChooseFile = useCallback(() => {\n    if (importFileRef?.current?.files?.[0]) setFileName(importFileRef.current.files[0].name);\n  }, [importFileRef]);\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"import-criteria\" fullWidth maxWidth=\"sm\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={selectFile}>\n        <DialogContent>\n          <div className={styles.chooseFileInput}>\n            <Input\n              id=\"choose-file-input\"\n              className={styles.input}\n              inputRef={importFileRef}\n              type=\"file\"\n              inputProps={{ accept: '.json' }}\n              onChange={handleChooseFile}\n            />\n\n            <label htmlFor=\"choose-file-input\">\n              <Button\n                className={styles.inputButton}\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n              >\n                Choose File\n              </Button>\n            </label>\n\n            <div className={styles.fileName}>\n              {fileName ? <span>{fileName}</span> : <span>Choose ELM file to import.</span>}\n            </div>\n          </div>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            type=\"submit\"\n          >\n            Import\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(ImportCriteriaModal);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools, faFileImport } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport Loading from 'components/elements/Loading';\nimport CriteriaTable from './CriteriaTable';\nimport ImportCriteriaModal from './ImportCriteriaModal';\n\nimport useStyles from './styles';\n\nconst CriteriaList: FC = () => {\n  const styles = useStyles();\n  const { status } = usePathwayContext();\n\n  const [open, setOpen] = useState<boolean>(false);\n  const openImportModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeImportModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.buttonRow}>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faFileImport} />}\n          onClick={openImportModal}\n        >\n          Import Library\n        </Button>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faTools} />}\n        >\n          Build Criteria\n        </Button>\n      </div>\n\n      <ImportCriteriaModal open={open} onClose={closeImportModal} />\n\n      {status === 'loading' ? <Loading /> : <CriteriaTable />}\n    </div>\n  );\n};\n\nexport default memo(CriteriaList);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\n\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from './ThemeProvider';\nimport { PathwayProvider } from './PathwayProvider';\nimport { UserProvider } from './UserProvider';\nimport { CriteriaProvider } from './CriteriaProvider';\nimport Tabs from './Tabs';\nimport PathwaysList from './PathwaysList';\nimport CriteriaList from './CriteriaList';\n\nconst App: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <PathwayProvider>\n          <CriteriaProvider>\n            <Router>\n              <Switch>\n                <Route path=\"/builder/:id/node/:nodeId\">\n                  <BuilderRoute />\n                </Route>\n                <Route path=\"/builder/:id\">\n                  <BuilderRoute />\n                </Route>\n                <Route path=\"/\">\n                  <Header />\n                  <Tabs\n                    tabs={[\n                      { label: 'Pathway', component: <PathwaysList /> },\n                      { label: 'Criteria', component: <CriteriaList /> }\n                    ]}\n                  />\n                </Route>\n              </Switch>\n            </Router>\n          </CriteriaProvider>\n        </PathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(App);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};"],"sourceRoot":""}