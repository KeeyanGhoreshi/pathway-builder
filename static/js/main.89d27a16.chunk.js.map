{"version":3,"sources":["components/Node/Node.module.scss","components/MissingDataPopup/MissingDataPopup.module.scss","components/ExpandedNode/ExpandedNode.module.scss","utils/ConfigManager.js","components/Header/Header.module.scss","components/elements/Loading/Loading.module.scss","components/Arrow/Arrow.module.scss","components/Builder/Builder.module.scss","components/Sidebar/Sidebar.module.scss","camino-logo-dark.png","components/DropDown/DropDown.module.scss","components/PathwayPopup/PathwayPopup.module.scss","components/Graph/Graph.module.scss","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","components/PathwaysService/PathwaysService.tsx","components/PathwayProvider.tsx","components/elements/Loading/Loading.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwaysTable.tsx","components/PathwaysList/NewPathwayModal.tsx","components/PathwaysList/PathwaysList.tsx","components/Navigation/styles.tsx","components/Navigation/Navigation.tsx","components/DropDown/DropDown.tsx","components/Sidebar/Sidebar.tsx","visualization/layout.ts","components/PathwayPopup/PathwayPopup.tsx","components/ActionButton/ActionButton.tsx","components/MissingDataPopup/MissingDataPopup.tsx","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/Arrow.tsx","components/Graph/Graph.tsx","components/Builder/Builder.tsx","components/BuilderRoute.tsx","components/UserProvider.tsx","components/App.tsx","index.js","components/ActionButton/ActionButton.module.scss"],"names":["module","exports","config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","variables","spacing","globalPadding","colors","white","black","blue","red","gray","grayMedium","grayBlue","grayLighter","grayDark","green","typography","fontFamily","materialUiOverridesBase","MuiButton","root","borderRadius","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","backgroundColor","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","MuiInputBase","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","MuiDialogContent","MuiDialogActions","materialUiOverridesDark","borderColor","color","notchedOutline","paletteBase","primary","main","secondary","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","createContext","ThemeProvider","memo","children","useState","setUseProjector","muiTheme","toggleTheme","useCallback","currentUseProjector","Provider","anchorEl","setAnchorEl","useContext","openMenu","event","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","src","logo","alt","onClick","aria-controls","aria-haspopup","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","useGetPathwaysService","url","status","result","setResult","useEffect","fetch","headers","Accept","getPathways","then","response","json","listOfFiles","map","f","options","typedFetch","listOfPromises","Promise","all","pathwaysList","payload","catch","error","PathwayContext","PathwayProvider","pathways","setPathways","service","get","servicePayload","addPathway","pathway","currentPathways","deletePathway","usePathwayContext","faSpinner","size","spin","makeStyles","display","flexDirection","createPathwayButton","alignSelf","pathwayList","marginTop","editButton","marginRight","dialogCloseButton","float","width","useStyles","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","key","component","scope","align","Button","startIcon","faEdit","Link","encodeURIComponent","faTrashAlt","history","useHistory","pathwayNameRef","useRef","pathwayDescRef","closeModal","pathwayId","push","createNewPathway","preventDefault","shortid","generate","current","description","library","criteria","states","Start","transitions","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","disableTypography","IconButton","faTimes","onSubmit","DialogContent","TextField","variant","autoFocus","required","inputRef","DialogActions","faPlus","type","setOpen","openNewPathwayModal","closeNewPathwayModal","alignItems","height","backButton","backIcon","cursor","pathwayName","marginLeft","Navigation","handleGoBack","faChevronLeft","DropDown","initialSelected","selected","_setSelected","FormControl","dropdown","InputLabel","htmlFor","Select","onChange","selectedOption","find","opt","target","option","nodeTypeOptions","AddNodes","addNodesContainer","button","SidebarHeader","currentNodeLabel","back","nodeName","nodeSettings","faEllipsisH","headerElement","currentNode","isExpanded","setIsExpanded","useTheme","sidebarContainerElement","toggleSidebar","expanded","style","window","innerHeight","clientHeight","sidebarContainer","ref","sidebar","sidebarToggle","faChevronRight","graphLayoutProvider","layout","nodeDimensions","nodeNames","Object","keys","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","forEach","stateName","state","nodeDimension","setNode","length","transition","condition","setEdge","nodeCoordinates","startNodeShift","node","x","y","edges","e","edge","edgeName","v","w","start","end","points","p","layoutDagre","nodes","rank","NaN","horizontalPosition","parents","canMove","includes","initializeNodes","graph","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","NODE_HEIGHT","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","NODE_WIDTH","parentsOnHigherRank","filter","parentName","parent","floor","c","splice","childNode","spreadChildrenEvenly","sum","reduce","a","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","PathwayPopup","Content","Trigger","popupPosition","Popup","content","position","pathwayPopup","on","onOpen","pinned","trigger","LargeActionButton","largeActionButton","largeDecline","toUpperCase","slice","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","MediumActionButton","mediumActionButton","ActionButton","PopupContent","values","showCheck","setShowCheck","setSelected","popupContent","popupChoice","footer","MissingDataPopup","missingDataPopup","popupTrigger","externalLink","isGuidanceState","action","ExpandedNode","pathwayState","isGuidance","isActionable","ExpandedNodeMemo","ExpandedNodeField","title","descTitle","desc","guidance","resource","coding","undefined","medicationCodeableConcept","code","resourceType","system","href","rel","faExternalLinkAlt","renderGuidance","branch","returnElements","arr","renderBranch","infoTable","Node","forwardRef","isCurrentNode","xCoordinate","yCoordinate","onClickHandler","top","left","topLevelClasses","expandedNodeClass","actionable","childActionable","childNotActionable","join","expandedNode","NodeIcon","faMicroscope","faPlay","guidancePathwayState","faPrescriptionBottleAlt","faCapsules","faSyringe","StatusIcon","faCheckCircle","faTimesCircle","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","d","fill","markerEnd","Arrow","arrow","edgeNameNoWhitespace","replace","arrowhead","markerWidth","markerHeight","refX","refY","orient","interactive","graphElement","expandCurrentNode","nodeRefs","parentElement","clientWidth","parentWidth","setParentWidth","getGraphLayout","nodeElement","Array","from","graphLayout","setLayout","maxHeight","useMemo","max","minX","min","toAdd","curr","lastSelectedNode","setExpanded","toggleExpanded","prevState","ResizeSensor","l","GraphMemo","useParams","redirectToNode","nodeId","location","pathname","xmlns","zIndex","overflow","graphContainerElement","decodeURIComponent","UserContext","UserProvider","user","setUser","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89d27a16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"actionable\":\"Node_actionable__bHXKd\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childNotActionable\":\"Node_childNotActionable__1bfBq\",\"childActionable\":\"Node_childActionable__SwUjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missingDataPopup\":\"MissingDataPopup_missingDataPopup__A-EBJ\",\"popupContent\":\"MissingDataPopup_popupContent__24BvC\",\"popupTrigger\":\"MissingDataPopup_popupTrigger__11eAy\",\"popupChoice\":\"MissingDataPopup_popupChoice__5oEld\",\"selected\":\"MissingDataPopup_selected__20Or7\",\"footer\":\"MissingDataPopup_footer__1wJXm\",\"externalLink\":\"MissingDataPopup_externalLink__3oYt-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3TM91\",\"arrowhead\":\"Arrow_arrowhead__3XjQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Builder_display__23HzN\",\"graph\":\"Builder_graph__lF-uJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarContainer\":\"Sidebar_sidebarContainer__3IS0-\",\"sidebarToggle\":\"Sidebar_sidebarToggle__2OC3L\",\"sidebar\":\"Sidebar_sidebar__3qUkX\",\"header\":\"Sidebar_header__2SFYN\",\"nodeName\":\"Sidebar_nodeName__3ow6C\",\"icon\":\"Sidebar_icon__vghqV\",\"back\":\"Sidebar_back__a1oXX\",\"nodeSettings\":\"Sidebar_nodeSettings__mx65c\",\"addNodesContainer\":\"Sidebar_addNodesContainer__25qXW\",\"button\":\"Sidebar_button__tmvcR\",\"description\":\"Sidebar_description__3buTg\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"DropDown_dropdown__1KvCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathwayPopup\":\"PathwayPopup_pathwayPopup__2moYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  blue: '#5d89a1',\n  red: '#d95d77',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily:\n    \"'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic'\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600,\n      '&:hover': {}\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      padding: '1em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      padding: '0 4em'\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      padding: '2em 4em'\n    }\n  }\n};\n\nconst materialUiOverridesDark = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLighter\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: '#4a4a4a'\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" className={styles.homeLink}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Pathway[]>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetPathwaysService from './PathwaysService';\n\ninterface PathwayContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  deletePathway: (pathway: Pathway) => void;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({} as PathwayContextInterface);\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwayProvider: FC<PathwayProviderProps> = memo(({ children }) => {\n  const [pathways, setPathways] = useState<Pathway[]>([]);\n  const service = useGetPathwaysService(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n\n  const addPathway = useCallback((pathway: Pathway) => {\n    setPathways(currentPathways => [...currentPathways, pathway]);\n  }, []);\n\n  const deletePathway = useCallback((pathway: Pathway) => {\n    // TODO\n  }, []);\n\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwayContext.Provider\n          value={{ pathways, addPathway, deletePathway, status: service.status }}\n        >\n          {children}\n        </PathwayContext.Provider>\n      );\n  }\n});\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end'\n    },\n    pathwayList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    }\n  }),\n  { name: 'PathwaysList' }\n);\n","import React, { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nimport useStyles from './styles';\n\nconst PathwaysTable: FC = () => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwayContext();\n\n  return (\n    <TableContainer className={styles.pathwayList}>\n      <Table aria-label=\"pathway list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Pathway Name</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell>Last Updated</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {pathways.map(pathway => (\n            <TableRow key={pathway.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {pathway.name}\n              </TableCell>\n\n              <TableCell>draft</TableCell>\n              <TableCell>2 days ago</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                  component={Link}\n                  to={`/builder/${encodeURIComponent(pathway.id)}`}\n                >\n                  Edit\n                </Button>\n\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                  onClick={(): void => deletePathway(pathway)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport useStyles from './styles';\n\ninterface NewPathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst NewPathwayModal: FC<NewPathwayModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway } = usePathwayContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const createNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n\n      addPathway({\n        id: pathwayId,\n        name: pathwayNameRef.current?.value ?? '',\n        description: pathwayDescRef.current?.value ?? '',\n        library: '',\n        criteria: [],\n        states: {\n          Start: {\n            label: 'Start',\n            transitions: []\n          }\n        }\n      });\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={createNewPathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required\n            inputRef={pathwayNameRef}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(NewPathwayModal);\n","import React, { FC, useCallback, useState, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport NewPathwayModal from './NewPathwayModal';\n\nimport useStyles from './styles';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status } = usePathwayContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={openNewPathwayModal}\n      >\n        Create Pathway\n      </Button>\n\n      <NewPathwayModal open={open} onClose={closeNewPathwayModal} />\n      {status === 'loading' ? <Loading /> : <PathwaysTable />}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    backIcon: {\n      fontSize: '20px',\n      color: theme.palette.grey['800'],\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation' }\n);\n","import React, { FC, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton } from '@material-ui/core';\n\nimport { Pathway } from 'pathways-model';\nimport useStyles from './styles';\n\ninterface Props {\n  pathway: Pathway;\n}\n\nconst Navigation: FC<Props> = ({ pathway }) => {\n  const styles = useStyles();\n  const history = useHistory();\n\n  const handleGoBack = useCallback((): void => {\n    history.push('/');\n  }, [history]);\n\n  return (\n    <nav className={styles.root}>\n      <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n        <FontAwesomeIcon icon={faChevronLeft} className={styles.backIcon} />\n      </IconButton>\n\n      <div className={styles.pathwayName}>{pathway?.name}</div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { FC, useState } from 'react';\nimport styles from './DropDown.module.scss';\n\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface Props {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  initialSelected?: Option;\n}\n\nconst DropDown: FC<Props> = ({ id, label, options, initialSelected }: Props) => {\n  const [selected, _setSelected] = useState<Option>(initialSelected ?? options[0]);\n\n  const setSelected = (event: React.ChangeEvent<{ value: unknown }>): void => {\n    const selectedOption = options.find(opt => opt.value === (event.target.value as string));\n    if (selectedOption) _setSelected(selectedOption);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className={styles.dropdown}>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n      <Select id={`${id}-select`} value={selected.value} onChange={setSelected} label={label}>\n        {options.map(option => (\n          <MenuItem value={option.value} key={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default DropDown;\n","import React, { FC, memo, useCallback, useState, useEffect, useRef, RefObject } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faPlus,\n  faEdit,\n  faEllipsisH\n} from '@fortawesome/free-solid-svg-icons';\n\nimport DropDown from 'components/DropDown';\nimport { useTheme } from 'components/ThemeProvider';\nimport { State } from 'pathways-model';\nimport styles from './Sidebar.module.scss';\n\ninterface SidebarProps {\n  headerElement: RefObject<HTMLDivElement>;\n  currentNode: State;\n}\n\ninterface SidebarHeaderProps {\n  currentNodeLabel: string;\n}\n\nconst nodeTypeOptions = [\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\nconst AddNodes: FC = memo(() => {\n  return (\n    <div className={styles.addNodesContainer}>\n      <table>\n        <tbody>\n          <tr>\n            <td className={styles.button}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<FontAwesomeIcon icon={faPlus} />}\n              >\n                Add Action Node\n              </Button>\n            </td>\n            <td className={styles.description}>\n              Any clinical or worfklow step which is not a decision.\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.button}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<FontAwesomeIcon icon={faPlus} />}\n              >\n                Add Branch Node\n              </Button>\n            </td>\n            <td className={styles.description}>\n              A logical branching point based on clinical or workflow criteria.\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.button}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<FontAwesomeIcon icon={faPlus} />}\n              >\n                Add Reusable Node\n              </Button>\n            </td>\n            <td className={styles.description}>\n              A previously built node or group of nodes defining a set of criteria.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n});\n\nconst SidebarHeader: FC<SidebarHeaderProps> = memo(({ currentNodeLabel }) => {\n  return (\n    <div className={styles.header}>\n      <div className={styles.icon} id={styles.back}>\n        <FontAwesomeIcon icon={faChevronLeft} />\n      </div>\n\n      <div className={styles.nodeName}>{currentNodeLabel}</div>\n\n      <div className={styles.icon}>\n        <FontAwesomeIcon icon={faEdit} />\n      </div>\n\n      <div className={styles.icon} id={styles.nodeSettings}>\n        <FontAwesomeIcon icon={faEllipsisH} />\n      </div>\n    </div>\n  );\n});\n\nconst Sidebar: FC<SidebarProps> = ({ headerElement, currentNode }) => {\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const theme = useTheme('dark');\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(expanded => !expanded);\n  }, []);\n\n  // Set the height of the sidebar container\n  useEffect(() => {\n    if (sidebarContainerElement?.current && headerElement?.current)\n      sidebarContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [isExpanded, headerElement]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={styles.sidebarContainer} ref={sidebarContainerElement}>\n        {isExpanded && (\n          <div className={styles.sidebar}>\n            <SidebarHeader currentNodeLabel={currentNode?.label || ''} />\n            <hr />\n            <DropDown label=\"Node Type\" id=\"Node Type\" options={nodeTypeOptions} />\n            <AddNodes />\n          </div>\n        )}\n\n        <div className={styles.sidebarToggle} onClick={toggleSidebar}>\n          <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n        </div>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default memo(Sidebar);\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const nodeDimension = nodeDimensions[stateName];\n\n    if (nodeDimension) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactElement } from 'react';\nimport { Popup, StrictPopupProps } from 'semantic-ui-react';\nimport styles from './PathwayPopup.module.scss';\n\ninterface PathwayPopupProps {\n  Content: ReactElement;\n  Trigger: ReactElement;\n  popupPosition?: StrictPopupProps['position'];\n  open?: boolean;\n  setOpen?: Function;\n  className?: string;\n}\n\nconst PathwayPopup: FC<PathwayPopupProps> = ({\n  Content,\n  Trigger,\n  popupPosition,\n  open,\n  setOpen,\n  className\n}: PathwayPopupProps) => {\n  return (\n    <Popup\n      content={Content}\n      position={popupPosition || 'bottom right'}\n      className={`${styles.pathwayPopup} ${className}`}\n      on=\"click\"\n      open={open}\n      onOpen={(): void => {\n        setOpen && setOpen(true);\n      }}\n      onClose={(): void => {\n        setOpen && setOpen(false);\n      }}\n      pinned\n      trigger={Trigger}\n    />\n  );\n};\n\nexport default PathwayPopup;\n","import React, { FC } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} button ${type === 'decline' && styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default ActionButton;\n","import React, { FC, useState } from 'react';\nimport styles from './MissingDataPopup.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\ninterface MissingDataPopup {\n  values: string[];\n}\n\nconst MissingDataPopup: FC<MissingDataPopup> = ({ values }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <PathwayPopup\n      Content={<PopupContent values={values} setOpen={setOpen}></PopupContent>}\n      className={styles.missingDataPopup}\n      Trigger={\n        <div className={styles.popupTrigger}>\n          missing data\n          <FontAwesomeIcon icon={faEdit} className={styles.externalLink} />\n        </div>\n      }\n      open={open}\n      setOpen={setOpen}\n    />\n  );\n};\n\ninterface PopupContentProps {\n  values: Array<string>;\n  setOpen: Function;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ values, setOpen }) => {\n  const [showCheck, setShowCheck] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('');\n\n  return (\n    <div>\n      <div className={styles.popupContent}>\n        Select Value:\n        <div>\n          {values.map(e => {\n            return (\n              <div\n                key={e}\n                className={styles.popupChoice + ' ' + (selected === e ? styles.selected : '')}\n                onClick={(): void => {\n                  if (showCheck && selected === e) {\n                    setShowCheck(false);\n                    setSelected('');\n                  } else {\n                    setShowCheck(true);\n                    setSelected(e);\n                  }\n                }}\n              >\n                {e}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n        {showCheck && (\n          <ActionButton\n            size=\"small\"\n            type=\"accept\"\n            onClick={(): void => {\n              setOpen(false);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MissingDataPopup;\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): boolean {\n  const { action } = state as GuidanceState;\n  return action ? action.length > 0 : false;\n}\n\nexport function isBranchState(state: State): boolean {\n  return !isGuidanceState(state) && state.transitions.length > 1;\n}\n","import React, { FC, ReactNode, ReactElement, memo } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MissingDataPopup from 'components/MissingDataPopup';\nimport styles from './ExpandedNode.module.scss';\nimport { isBranchState } from 'utils/nodeUtils';\n\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState;\n  isActionable: boolean;\n  isGuidance: boolean;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(({ pathwayState, isActionable, isGuidance }) => {\n  return (\n    <>\n      <ExpandedNodeMemo isGuidance={isGuidance} pathwayState={pathwayState} />\n    </>\n  );\n});\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\nfunction renderBranch(pathwayState: State): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  const values: string[] = pathwayState.transitions\n    .map(transition => {\n      const description = transition.condition?.description;\n      return description ? description : '';\n    })\n    // Remove duplicate values\n    .filter((v, i, arr) => arr.indexOf(v) === i);\n\n  returnElements.push(\n    <ExpandedNodeField\n      key=\"value\"\n      title=\"Value\"\n      description={<MissingDataPopup values={values} />}\n    />\n  );\n\n  return returnElements;\n}\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\nfunction renderGuidance(pathwayState: GuidanceState): ReactElement[] {\n  const resource = pathwayState.action[0].resource;\n  const coding = isMedicationRequest(resource)\n    ? resource?.medicationCodeableConcept?.coding\n    : resource?.code?.coding;\n\n  const returnElements = [\n    <ExpandedNodeField\n      key=\"Notes\"\n      title=\"Notes\"\n      description={pathwayState.action[0].description}\n    />,\n    <ExpandedNodeField key=\"Type\" title=\"Type\" description={resource.resourceType} />,\n    <ExpandedNodeField\n      key=\"System\"\n      title=\"System\"\n      description={\n        <>\n          {coding && coding[0].system}\n          <a href={coding && coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n          </a>\n        </>\n      }\n    />,\n    <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n    <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />\n  ];\n\n  return returnElements;\n}\n\ninterface ExpandedNodeMemoProps {\n  pathwayState: GuidanceState;\n  isGuidance: boolean;\n}\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(({ pathwayState, isGuidance }) => {\n  const guidance = isGuidance && renderGuidance(pathwayState);\n  const branch = isBranchState(pathwayState) && renderBranch(pathwayState);\n  return (\n    <div className=\"expandedNode\">\n      <table className={styles.infoTable}>\n        <tbody>{guidance || branch}</tbody>\n      </table>\n    </div>\n  );\n});\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState } from 'utils/nodeUtils';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faCapsules,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface NodeProps {\n  pathwayState: State;\n  isCurrentNode: boolean;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClickHandler?: () => void;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      { pathwayState, isCurrentNode, xCoordinate, yCoordinate, expanded = false, onClickHandler },\n      ref\n    ) => {\n      const { label } = pathwayState;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n\n      const isActionable = isCurrentNode;\n      const topLevelClasses = [styles.node];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push('expanded');\n      if (isActionable) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = styles.childNotActionable;\n      }\n      const isGuidance = isGuidanceState(pathwayState);\n\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div className={`nodeTitle ${onClickHandler && 'clickable'}`} onClick={onClickHandler}>\n            <div className=\"iconAndLabel\">\n              <NodeIcon pathwayState={pathwayState} isGuidance={isGuidance} />\n              {label}\n            </div>\n            <StatusIcon status={null} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode\n                pathwayState={pathwayState as GuidanceState}\n                isActionable={isActionable}\n                isGuidance={isGuidance}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayState: State;\n  isGuidance: boolean;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, isGuidance }) => {\n  let icon: IconProp = faMicroscope;\n  if (pathwayState.label === 'Start') icon = faPlay;\n  if (isGuidance) {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'MedicationAdministration') icon = faCapsules;\n      else if (resourceType === 'Procedure') icon = faSyringe;\n    }\n  }\n  return <FontAwesomeIcon icon={icon} className={styles.icon} />;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status == null) {\n    return null;\n  }\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return (\n    <div className=\"statusIcon\">\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport styles from './Arrow.module.scss';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  widthOffset: number;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, widthOffset }) => {\n  const className = styles.arrow;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={className}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={styles.arrowhead}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import React, {\n  FC,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { Pathway } from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges } from 'graph-model';\nimport styles from './Graph.module.scss';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\ninterface GraphProps {\n  pathway: Pathway;\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n}\n\ninterface ExpandedState {\n  [key: string]: boolean | string | null;\n}\n\nconst Graph: FC<GraphProps> = memo(({ pathway, interactive = true, expandCurrentNode = true }) => {\n  const graphElement = useRef<HTMLDivElement>(null);\n  const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n  const [parentWidth, setParentWidth] = useState<number>(\n    graphElement?.current?.parentElement?.clientWidth ?? 0\n  );\n\n  // Get the layout of the graph\n  const getGraphLayout = useCallback((): Layout => {\n    const nodeDimensions: NodeDimensions = {};\n\n    // Retrieve dimensions from nodeRefs\n    if (nodeRefs?.current) {\n      Object.keys(nodeRefs.current).forEach(key => {\n        const nodeElement = nodeRefs.current[key];\n        const width = nodeElement.clientWidth;\n        // nodeElement can have multiple children so calculate the sum to get the node height\n        const height = Array.from(nodeElement.children).reduce(\n          (acc, child) => acc + child.clientHeight,\n          0\n        );\n\n        nodeDimensions[key] = { width, height };\n      });\n    }\n\n    return graphLayout(pathway, nodeDimensions);\n  }, [pathway]);\n\n  const [layout, setLayout] = useState(getGraphLayout());\n  const { nodeCoordinates, edges } = layout;\n  const maxHeight = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.y)\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates]);\n\n  // If a node has a negative x value, shift nodes and edges to the right by that value\n  const minX =\n    nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.x + parentWidth / 2)\n          .reduce((a, b) => Math.min(a, b))\n      : 0;\n\n  if (minX < 0) {\n    const toAdd = minX * -1;\n    Object.keys(nodeCoordinates).forEach(key => {\n      const node = nodeCoordinates[key];\n      node.x += toAdd;\n    });\n\n    Object.keys(edges).forEach(key => {\n      const edge = edges[key];\n\n      edge.points.forEach(p => (p.x += toAdd));\n      if (edge.label) edge.label.x += toAdd;\n    });\n  }\n\n  const [expanded, setExpanded] = useState<ExpandedState>(() =>\n    Object.keys(layout).reduce(\n      (acc, curr: string) => {\n        acc[curr] = false;\n        return acc;\n      },\n      { lastSelectedNode: null } as ExpandedState\n    )\n  );\n\n  const toggleExpanded = useCallback((key: string) => {\n    setExpanded(prevState => ({\n      ...prevState,\n      [key]:\n        !prevState[key] || prevState.lastSelectedNode === key ? !prevState[key] : prevState[key],\n      lastSelectedNode: key\n    }));\n  }, []);\n\n  // Recalculate graph layout if graph container size changes\n  useEffect(() => {\n    if (graphElement.current?.parentElement) {\n      new ResizeSensor(graphElement.current.parentElement, function() {\n        setParentWidth(graphElement.current?.parentElement?.clientWidth ?? 0);\n        setLayout(getGraphLayout());\n      });\n    }\n  }, [getGraphLayout]);\n\n  // Recalculate graph layout if a node is expanded\n  useEffect(() => {\n    setLayout(getGraphLayout());\n  }, [expanded, getGraphLayout]);\n\n  // maxWidth finds the edge label that is farthest to the right\n  const maxWidth: number =\n    edges !== undefined\n      ? Object.values(edges)\n          .map(e => e.label)\n          .map(l => (l ? l.x + l.text.length * 10 + parentWidth / 2 : 0))\n          .reduce((a, b) => Math.max(a, b), 0)\n      : parentWidth;\n\n  return (\n    <GraphMemo\n      graphElement={graphElement}\n      interactive={interactive}\n      maxHeight={maxHeight}\n      nodeCoordinates={nodeCoordinates}\n      edges={edges}\n      pathway={pathway}\n      nodeRefs={nodeRefs}\n      parentWidth={parentWidth}\n      maxWidth={maxWidth}\n      expanded={expanded}\n      toggleExpanded={toggleExpanded}\n    />\n  );\n});\n\ninterface GraphMemoProps {\n  graphElement: RefObject<HTMLDivElement>;\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  edges: Edges;\n  pathway: Pathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  expanded: ExpandedState;\n  toggleExpanded: (key: string) => void;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(\n  ({\n    graphElement,\n    interactive,\n    maxHeight,\n    nodeCoordinates,\n    edges,\n    pathway,\n    nodeRefs,\n    parentWidth,\n    maxWidth,\n    expanded,\n    toggleExpanded\n  }) => {\n    const { id: pathwayId } = useParams();\n    const history = useHistory();\n    const redirectToNode = useCallback(\n      nodeId => {\n        const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeId)}`;\n        if (url !== history.location.pathname) {\n          history.push(url);\n        }\n      },\n      [history, pathwayId]\n    );\n\n    return (\n      <div\n        ref={graphElement}\n        id=\"graph-root\"\n        className={styles.root}\n        style={{\n          height: interactive ? maxHeight + 150 : 'inherit',\n          width: maxWidth + 'px',\n          position: 'relative',\n          marginRight: '5px'\n        }}\n      >\n        {nodeCoordinates !== undefined\n          ? Object.keys(nodeCoordinates).map(nodeName => {\n              const onClickHandler = useCallback(() => {\n                if (interactive) {\n                  redirectToNode(nodeName);\n                  toggleExpanded(nodeName);\n                }\n              }, [nodeName]);\n              return (\n                <Node\n                  key={nodeName}\n                  ref={(node: HTMLDivElement): void => {\n                    nodeRefs.current[nodeName] = node;\n                  }}\n                  pathwayState={pathway.states[nodeName]}\n                  isCurrentNode={false}\n                  xCoordinate={nodeCoordinates[nodeName].x + parentWidth / 2}\n                  yCoordinate={nodeCoordinates[nodeName].y}\n                  expanded={Boolean(expanded[nodeName])}\n                  onClickHandler={onClickHandler}\n                />\n              );\n            })\n          : []}\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{\n            // Adding 5 pixels to maxWidth so that the rightmost edge label is not cut off\n            width: maxWidth + 5,\n            height: maxHeight,\n            zIndex: 1,\n            top: 0,\n            left: 0,\n            overflow: 'visible'\n          }}\n        >\n          {edges !== undefined\n            ? Object.keys(edges).map(edgeName => {\n                const edge = edges[edgeName];\n                return (\n                  <Arrow\n                    key={edgeName}\n                    edge={edge}\n                    edgeName={edgeName}\n                    widthOffset={parentWidth / 2}\n                  />\n                );\n              })\n            : []}\n        </svg>\n      </div>\n    );\n  }\n);\n\nexport default Graph;\n","import React, { FC, useRef, useEffect, memo } from 'react';\nimport { Pathway, State } from 'pathways-model';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport Graph from 'components/Graph';\n\nimport styles from './Builder.module.scss';\n\ninterface BuilderProps {\n  pathway: Pathway;\n  currentNode: State;\n}\n\nconst Builder: FC<BuilderProps> = ({ pathway, currentNode }) => {\n  const headerElement = useRef<HTMLDivElement>(null);\n  const graphContainerElement = useRef<HTMLDivElement>(null);\n\n  // Set the height of the graph container\n  useEffect(() => {\n    if (graphContainerElement?.current && headerElement?.current)\n      graphContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [pathway, headerElement, graphContainerElement]);\n\n  return (\n    <>\n      <div ref={headerElement}>\n        <Header />\n        <Navigation pathway={pathway} />\n      </div>\n\n      <div className={styles.display}>\n        <Sidebar headerElement={headerElement} currentNode={currentNode} />\n\n        <div ref={graphContainerElement} className={styles.graph}>\n          <Graph pathway={pathway} expandCurrentNode={true} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default memo(Builder);\n","import React, { FC, memo, useMemo } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport Builder from 'components/Builder';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nconst BuilderRoute: FC = () => {\n  const { id, nodeId } = useParams();\n  const { pathways } = usePathwayContext();\n  const pathwayId = decodeURIComponent(id);\n  const pathway = useMemo(() => pathways.find(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const currentNode = pathway?.states?.[decodeURIComponent(nodeId)];\n\n  if (pathway == null) return null;\n  if (currentNode == null) return <Redirect to={`/builder/${id}/node/Start`} />;\n\n  return <Builder pathway={pathway} currentNode={currentNode} />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\nimport PathwaysList from 'components/PathwaysList';\n\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from './ThemeProvider';\nimport { PathwayProvider } from './PathwayProvider';\nimport { UserProvider } from './UserProvider';\n\nconst App: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <PathwayProvider>\n          <Router>\n            <Switch>\n              <Route path=\"/builder/:id/node/:nodeId\">\n                <BuilderRoute />\n              </Route>\n              <Route path=\"/builder/:id\">\n                <BuilderRoute />\n              </Route>\n              <Route path=\"/\">\n                <Header />\n                <PathwaysList />\n              </Route>\n            </Switch>\n          </Router>\n        </PathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(App);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};"],"sourceRoot":""}