{"version":3,"sources":["components/Node/Node.module.scss","components/MissingDataPopup/MissingDataPopup.module.scss","components/ExpandedNode/ExpandedNode.module.scss","components/PathwaysList/PathwaysList.module.scss","utils/ConfigManager.js","components/Navigation/Navigation.module.scss","components/Arrow/Arrow.module.scss","components/elements/Loading/Loading.module.scss","components/App.module.scss","components/Sidebar/Sidebar.module.scss","camino-logo-dark.png","components/DropDown/DropDown.module.scss","components/PathwayPopup/PathwayPopup.module.scss","components/Graph/Graph.module.scss","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","components/Navigation/Navigation.tsx","components/DropDown/DropDown.tsx","components/Sidebar/Sidebar.tsx","visualization/layout.ts","components/PathwayPopup/PathwayPopup.tsx","components/ActionButton/ActionButton.tsx","components/MissingDataPopup/MissingDataPopup.tsx","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/Arrow.tsx","components/Graph/Graph.tsx","components/elements/Loading/Loading.js","components/PathwaysList/PathwaysList.tsx","components/PathwayProvider.tsx","components/PathwaysService/PathwaysService.tsx","components/UserProvider.tsx","components/App.tsx","index.js","components/ActionButton/ActionButton.module.scss"],"names":["module","exports","config","this","global","CONFIG","name","defaultValue","parts","split","context","value","i","conf","colors","white","black","blue","red","gray","grayMedium","grayBlue","grayLighter","grayDark","green","typography","fontFamily","materialUiOverrides","MuiButton","root","borderRadius","label","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","backgroundColor","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","borderColor","MuiFormLabel","color","fontStyle","MuiInputBase","MuiOutlinedInput","notchedOutline","MuiSelect","icon","MuiPaper","rounded","theme","createMuiTheme","palette","primary","main","secondary","common","background","default","text","overrides","projectorTheme","ThemeContext","createContext","ThemeProvider","children","useState","defaultTheme","setTheme","toggleTheme","useCallback","currentTheme","Provider","Header","props","anchorEl","setAnchorEl","useContext","handleClose","className","styles","header","src","logo","alt","onClick","event","currentTarget","aria-controls","aria-haspopup","faCog","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","useStyles","makeStyles","navigation","Navigation","onBack","classes","clsx","navigation__leftPanel","faChevronLeft","navigation__back","DropDown","options","initialSelected","selected","_setSelected","FormControl","variant","dropdown","InputLabel","htmlFor","Select","onChange","selectedOption","find","opt","target","map","option","key","AddNodes","addNodesContainer","button","Button","startIcon","faPlus","description","SidebarHeader","currentNode","back","nodeName","faEdit","nodeSettings","faEllipsisH","Sidebar","headerElement","sidebarContainerElement","useRef","isExpanded","setIsExpanded","expand","useEffect","current","style","height","window","innerHeight","clientHeight","sidebarContainer","ref","sidebar","sidebarToggle","faChevronRight","graphLayoutProvider","get","layout","pathway","nodeDimensions","nodeNames","Object","keys","states","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","forEach","stateName","state","nodeDimension","setNode","width","length","transitions","transition","condition","setEdge","nodeCoordinates","startNodeShift","node","x","y","edges","e","edge","edgeName","v","w","start","end","points","p","layoutDagre","nodes","rank","NaN","horizontalPosition","parents","canMove","includes","push","initializeNodes","graph","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","NODE_HEIGHT","produceCoordinates","hPos","isNaN","hasOverlap","direction","Math","ceil","NODE_WIDTH","parentsOnHigherRank","filter","parentName","parent","floor","c","splice","childNode","spreadChildrenEvenly","sum","reduce","a","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","PathwayPopup","Content","Trigger","popupPosition","setOpen","Popup","content","position","pathwayPopup","on","onOpen","pinned","trigger","LargeActionButton","type","largeActionButton","largeDecline","toUpperCase","slice","SmallActionButton","accept","decline","smallActionButton","data-testid","faCheck","faTimes","MediumActionButton","mediumActionButton","ActionButton","size","PopupContent","values","showCheck","setShowCheck","setSelected","popupContent","popupChoice","footer","MissingDataPopup","missingDataPopup","popupTrigger","externalLink","isGuidanceState","action","ExpandedNode","memo","pathwayState","isGuidance","isActionable","ExpandedNodeMemo","ExpandedNodeField","title","descTitle","desc","guidance","resource","coding","undefined","medicationCodeableConcept","code","resourceType","system","href","rel","faExternalLinkAlt","display","renderGuidance","branch","returnElements","arr","renderBranch","infoTable","Node","forwardRef","isCurrentNode","xCoordinate","yCoordinate","expanded","onClickHandler","top","left","topLevelClasses","expandedNodeClass","actionable","childActionable","childNotActionable","join","status","expandedNode","NodeIcon","faMicroscope","faPlay","guidancePathwayState","faPrescriptionBottleAlt","faCapsules","faSyringe","StatusIcon","faCheckCircle","faTimesCircle","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","d","fill","markerEnd","Arrow","arrow","edgeNameNoWhitespace","replace","arrowhead","markerWidth","markerHeight","refX","refY","orient","interactive","graphElement","expandCurrentNode","nodeRefs","parentElement","clientWidth","parentWidth","setParentWidth","getGraphLayout","nodeElement","Array","from","graphLayout","setLayout","maxHeight","useMemo","max","minX","min","toAdd","layoutKeys","toString","initialExpandedState","curr","_setExpanded","setExpanded","prevState","ResizeSensor","maxWidth","l","GraphMemo","marginRight","xmlns","zIndex","overflow","Loading","faSpinner","spin","PathwaysTable","pathways","deleteButton","editButton","TableContainer","pathwayList","Table","aria-label","TableHead","TableRow","TableCell","TableBody","component","scope","align","faTrashAlt","PathwaysList","callback","service","createPathwayButton","PathwayContext","setPathway","PathwayProvider","pathwayCtx","useGetPathwaysService","url","result","setResult","fetch","headers","Accept","getPathways","then","response","json","listOfFiles","f","typedFetch","listOfPromises","Promise","all","pathwaysList","payload","catch","error","UserContext","user","setUser","UserProvider","App","currentPathway","setCurrentPathway","selectPathway","setSelectPathway","setPathways","graphContainerElement","setPathwayCallback","scrollTo","BuilderView","rootElement","document","getElementById","ReactDOM","render","exact","path"],"mappings":"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","file":"static/js/main.8bb13267.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"actionable\":\"Node_actionable__bHXKd\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childNotActionable\":\"Node_childNotActionable__1bfBq\",\"childActionable\":\"Node_childActionable__SwUjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missingDataPopup\":\"MissingDataPopup_missingDataPopup__A-EBJ\",\"popupContent\":\"MissingDataPopup_popupContent__24BvC\",\"popupTrigger\":\"MissingDataPopup_popupTrigger__11eAy\",\"popupChoice\":\"MissingDataPopup_popupChoice__5oEld\",\"selected\":\"MissingDataPopup_selected__20Or7\",\"footer\":\"MissingDataPopup_footer__1wJXm\",\"externalLink\":\"MissingDataPopup_externalLink__3oYt-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PathwaysList_root__YrYB0\",\"createPathwayButton\":\"PathwaysList_createPathwayButton__1EBhl\",\"pathwayList\":\"PathwaysList_pathwayList__3R6BW\",\"editButton\":\"PathwaysList_editButton__3YjPF\"};","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1EgxP\",\"navigation__back\":\"Navigation_navigation__back__2cVZ2\",\"navigation__leftPanel\":\"Navigation_navigation__leftPanel__QjHPF\",\"navigation__rightPanel\":\"Navigation_navigation__rightPanel__1FRD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3TM91\",\"arrowhead\":\"Arrow_arrowhead__3XjQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"App_display__2vneK\",\"graph\":\"App_graph__3EP_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarContainer\":\"Sidebar_sidebarContainer__3IS0-\",\"sidebarToggle\":\"Sidebar_sidebarToggle__2OC3L\",\"sidebar\":\"Sidebar_sidebar__3qUkX\",\"header\":\"Sidebar_header__2SFYN\",\"nodeName\":\"Sidebar_nodeName__3ow6C\",\"icon\":\"Sidebar_icon__vghqV\",\"back\":\"Sidebar_back__a1oXX\",\"nodeSettings\":\"Sidebar_nodeSettings__mx65c\",\"addNodesContainer\":\"Sidebar_addNodesContainer__25qXW\",\"button\":\"Sidebar_button__tmvcR\",\"description\":\"Sidebar_description__3buTg\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"DropDown_dropdown__1KvCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathwayPopup\":\"PathwayPopup_pathwayPopup__2moYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  blue: '#5d89a1',\n  red: '#d95d77',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily:\n    \"'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\n};\n\nconst materialUiOverrides = {\n  // Style sheet name ⚛️\n  MuiButton: {\n    root: {\n      borderRadius: 0\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0',\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      fontStyle: 'italic',\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      fontWeight: 600,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0',\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white,\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  }\n};\n\nconst theme = createMuiTheme({\n  typography: { ...typography },\n  palette: {\n    primary: {\n      main: colors.blue\n    },\n    secondary: {\n      main: colors.red\n    },\n    common: colors,\n    background: {\n      default: colors.grayLighter\n    },\n    text: {\n      primary: colors.gray,\n      secondary: colors.gray\n    }\n  },\n  overrides: { ...materialUiOverrides }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: {\n    primary: {\n      main: colors.blue\n    },\n    secondary: {\n      main: colors.red\n    },\n    common: colors,\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  },\n  overrides: { ...materialUiOverrides }\n});\n\nexport default theme;\nexport { theme, projectorTheme };\n","import React, { FC, createContext, useState, useCallback, useContext, ReactNode } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { theme as defaultTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeContext = createContext(() => {\n  // this comment does nothing but make eslint happy :)\n});\nexport const useThemeToggle = (): (() => void) => useContext(ThemeContext);\n\nconst ThemeProvider: FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setTheme] = useState(defaultTheme);\n  const toggleTheme = useCallback(() => {\n    setTheme(currentTheme => (currentTheme === defaultTheme ? projectorTheme : defaultTheme));\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <ThemeContext.Provider value={toggleTheme}>{children}</ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { FC, useState, MouseEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport styles from './Header.module.scss';\n\ninterface HeaderProps {\n  logo: string;\n}\n\nconst Header: FC<HeaderProps> = (props: HeaderProps) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const handleClick = (event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const handleToggleTheme = (): void => {\n    toggleTheme();\n    handleClose();\n  };\n\n  return (\n    <header className={styles.header}>\n      <img src={props.logo} alt=\"logo\" />\n      <button onClick={handleClick} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Navigation.module.scss';\n\nconst useStyles = makeStyles(\n  theme => ({\n    navigation: {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary\n    }\n  }),\n  { name: 'Navigation' }\n);\n\ninterface Props {\n  name?: string;\n  onBack?: () => void;\n}\n\nconst Navigation: FC<Props> = ({ name = '', onBack }) => {\n  const classes = useStyles();\n\n  return (\n    <nav className={clsx(styles.navigation, classes.navigation)}>\n      <div className={styles.navigation__leftPanel}>\n        {onBack && (\n          <FontAwesomeIcon\n            icon={faChevronLeft}\n            className={styles.navigation__back}\n            onClick={onBack}\n          />\n        )}\n        <p>{name}</p>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { FC, useState } from 'react';\nimport styles from './DropDown.module.scss';\n\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface Props {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  initialSelected?: Option;\n}\n\nconst DropDown: FC<Props> = ({ id, label, options, initialSelected }: Props) => {\n  const [selected, _setSelected] = useState<Option>(initialSelected ?? options[0]);\n\n  const setSelected = (event: React.ChangeEvent<{ value: unknown }>): void => {\n    const selectedOption = options.find(opt => opt.value === (event.target.value as string));\n    if (selectedOption) _setSelected(selectedOption);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className={styles.dropdown}>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n      <Select id={`${id}-select`} value={selected.value} onChange={setSelected} label={label}>\n        {options.map(option => (\n          <MenuItem value={option.value} key={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default DropDown;\n","import React, { FC, useState, useEffect, useRef, RefObject } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport DropDown from 'components/DropDown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faPlus,\n  faEdit,\n  faEllipsisH\n} from '@fortawesome/free-solid-svg-icons';\nimport styles from './Sidebar.module.scss';\n\ninterface SidebarProps {\n  headerElement: RefObject<HTMLDivElement>;\n}\n\ninterface SidebarHeaderProps {\n  currentNode: string;\n}\n\nconst AddNodes: FC = () => {\n  return (\n    <div className={styles.addNodesContainer}>\n      <table>\n        <tbody>\n          <tr>\n            <td className={styles.button}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<FontAwesomeIcon icon={faPlus} />}\n              >\n                Add Action Node\n              </Button>\n            </td>\n            <td className={styles.description}>\n              Any clinical or worfklow step which is not a decision.\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.button}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<FontAwesomeIcon icon={faPlus} />}\n              >\n                Add Branch Node\n              </Button>\n            </td>\n            <td className={styles.description}>\n              A logical branching point based on clinical or workflow criteria.\n            </td>\n          </tr>\n          <tr>\n            <td className={styles.button}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<FontAwesomeIcon icon={faPlus} />}\n              >\n                Add Reusable Node\n              </Button>\n            </td>\n            <td className={styles.description}>\n              A previously built node or group of nodes defining a set of criteria.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({ currentNode }) => {\n  return (\n    <div className={styles.header}>\n      <div className={styles.icon} id={styles.back}>\n        <FontAwesomeIcon icon={faChevronLeft} />\n      </div>\n      <div className={styles.nodeName}>{currentNode}</div>\n      <div className={styles.icon}>\n        <FontAwesomeIcon icon={faEdit} />\n      </div>\n      <div className={styles.icon} id={styles.nodeSettings}>\n        <FontAwesomeIcon icon={faEllipsisH} />\n      </div>\n    </div>\n  );\n};\n\nconst Sidebar: FC<SidebarProps> = ({ headerElement }) => {\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const [currentNode] = useState<string>('Start');\n\n  const expand = (): void => {\n    setIsExpanded(!isExpanded);\n  };\n\n  // Set the height of the sidebar container\n  useEffect(() => {\n    if (sidebarContainerElement?.current && headerElement?.current)\n      sidebarContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [isExpanded, headerElement]);\n\n  if (isExpanded) {\n    return (\n      <div className={styles.sidebarContainer} ref={sidebarContainerElement}>\n        <div className={styles.sidebar}>\n          <SidebarHeader currentNode={currentNode} />\n          <hr />\n          <DropDown\n            label={'Node Type'}\n            id={'Node Type'}\n            options={[\n              { label: 'Action', value: 'action' },\n              { label: 'Branch', value: 'branch' }\n            ]}\n          />\n          <AddNodes />\n        </div>\n\n        <div className={styles.sidebarToggle} onClick={expand}>\n          <FontAwesomeIcon icon={faChevronLeft} />\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className={styles.sidebarContainer}>\n        <div className={styles.sidebarToggle} onClick={expand}>\n          <FontAwesomeIcon icon={faChevronRight} />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Sidebar;\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const nodeDimension = nodeDimensions[stateName];\n\n    if (nodeDimension) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import React, { FC, ReactElement } from 'react';\nimport { Popup, StrictPopupProps } from 'semantic-ui-react';\nimport styles from './PathwayPopup.module.scss';\n\ninterface PathwayPopupProps {\n  Content: ReactElement;\n  Trigger: ReactElement;\n  popupPosition?: StrictPopupProps['position'];\n  open?: boolean;\n  setOpen?: Function;\n  className?: string;\n}\n\nconst PathwayPopup: FC<PathwayPopupProps> = ({\n  Content,\n  Trigger,\n  popupPosition,\n  open,\n  setOpen,\n  className\n}: PathwayPopupProps) => {\n  return (\n    <Popup\n      content={Content}\n      position={popupPosition || 'bottom right'}\n      className={`${styles.pathwayPopup} ${className}`}\n      on=\"click\"\n      open={open}\n      onOpen={(): void => {\n        setOpen && setOpen(true);\n      }}\n      onClose={(): void => {\n        setOpen && setOpen(false);\n      }}\n      pinned\n      trigger={Trigger}\n    />\n  );\n};\n\nexport default PathwayPopup;\n","import React, { FC } from 'react';\nimport styles from './ActionButton.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface ButtonProps {\n  type: 'accept' | 'decline';\n  onClick?: () => void;\n}\n\ninterface ActionButtonProps extends ButtonProps {\n  size: 'small' | 'large' | 'medium';\n}\n\nconst LargeActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <button\n      className={`${styles.largeActionButton} button ${type === 'decline' && styles.largeDecline}`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {type[0].toUpperCase() + type.slice(1)}\n    </button>\n  );\n};\n\nconst SmallActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.smallActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n    </div>\n  );\n};\n\nconst MediumActionButton: FC<ButtonProps> = ({ type, onClick }) => {\n  const buttonText = {\n    accept: 'Submit',\n    decline: 'Cancel'\n  };\n  return (\n    <div\n      className={`${type === 'accept' ? styles.accept : styles.decline} ${\n        styles.mediumActionButton\n      }`}\n      onClick={onClick}\n      data-testid={type}\n    >\n      <FontAwesomeIcon icon={type === 'accept' ? faCheck : faTimes} />\n      {buttonText[type]}\n    </div>\n  );\n};\n\nconst ActionButton: FC<ActionButtonProps> = ({ type, size, onClick }) => {\n  switch (size) {\n    case 'small':\n      return <SmallActionButton type={type} onClick={onClick} />;\n    case 'large':\n      return <LargeActionButton type={type} onClick={onClick} />;\n    case 'medium':\n      return <MediumActionButton type={type} onClick={onClick} />;\n  }\n};\n\nexport default ActionButton;\n","import React, { FC, useState } from 'react';\nimport styles from './MissingDataPopup.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PathwayPopup from 'components/PathwayPopup';\nimport ActionButton from 'components/ActionButton';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\ninterface MissingDataPopup {\n  values: string[];\n}\n\nconst MissingDataPopup: FC<MissingDataPopup> = ({ values }) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <PathwayPopup\n      Content={<PopupContent values={values} setOpen={setOpen}></PopupContent>}\n      className={styles.missingDataPopup}\n      Trigger={\n        <div className={styles.popupTrigger}>\n          missing data\n          <FontAwesomeIcon icon={faEdit} className={styles.externalLink} />\n        </div>\n      }\n      open={open}\n      setOpen={setOpen}\n    />\n  );\n};\n\ninterface PopupContentProps {\n  values: Array<string>;\n  setOpen: Function;\n}\n\nconst PopupContent: FC<PopupContentProps> = ({ values, setOpen }) => {\n  const [showCheck, setShowCheck] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('');\n\n  return (\n    <div>\n      <div className={styles.popupContent}>\n        Select Value:\n        <div>\n          {values.map(e => {\n            return (\n              <div\n                key={e}\n                className={styles.popupChoice + ' ' + (selected === e ? styles.selected : '')}\n                onClick={(): void => {\n                  if (showCheck && selected === e) {\n                    setShowCheck(false);\n                    setSelected('');\n                  } else {\n                    setShowCheck(true);\n                    setSelected(e);\n                  }\n                }}\n              >\n                {e}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.footer}>\n        <ActionButton size=\"small\" type=\"decline\" onClick={(): void => setOpen(false)} />\n        {showCheck && (\n          <ActionButton\n            size=\"small\"\n            type=\"accept\"\n            onClick={(): void => {\n              setOpen(false);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MissingDataPopup;\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): boolean {\n  const { action } = state as GuidanceState;\n  return action ? action.length > 0 : false;\n}\n\nexport function isBranchState(state: State): boolean {\n  return !isGuidanceState(state) && state.transitions.length > 1;\n}\n","import React, { FC, ReactNode, ReactElement, memo } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MissingDataPopup from 'components/MissingDataPopup';\nimport styles from './ExpandedNode.module.scss';\nimport { isBranchState } from 'utils/nodeUtils';\n\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState;\n  isActionable: boolean;\n  isGuidance: boolean;\n}\n\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(({ pathwayState, isActionable, isGuidance }) => {\n  return (\n    <>\n      <ExpandedNodeMemo isGuidance={isGuidance} pathwayState={pathwayState} />\n    </>\n  );\n});\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\nfunction renderBranch(pathwayState: State): ReactElement[] {\n  const returnElements: ReactElement[] = [];\n\n  const values: string[] = pathwayState.transitions\n    .map(transition => {\n      const description = transition.condition?.description;\n      return description ? description : '';\n    })\n    // Remove duplicate values\n    .filter((v, i, arr) => arr.indexOf(v) === i);\n\n  returnElements.push(\n    <ExpandedNodeField\n      key=\"value\"\n      title=\"Value\"\n      description={<MissingDataPopup values={values} />}\n    />\n  );\n\n  return returnElements;\n}\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\nfunction renderGuidance(pathwayState: GuidanceState): ReactElement[] {\n  const resource = pathwayState.action[0].resource;\n  const coding = isMedicationRequest(resource)\n    ? resource?.medicationCodeableConcept?.coding\n    : resource?.code?.coding;\n\n  const returnElements = [\n    <ExpandedNodeField\n      key=\"Notes\"\n      title=\"Notes\"\n      description={pathwayState.action[0].description}\n    />,\n    <ExpandedNodeField key=\"Type\" title=\"Type\" description={resource.resourceType} />,\n    <ExpandedNodeField\n      key=\"System\"\n      title=\"System\"\n      description={\n        <>\n          {coding && coding[0].system}\n          <a href={coding && coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n          </a>\n        </>\n      }\n    />,\n    <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n    <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />\n  ];\n\n  return returnElements;\n}\n\ninterface ExpandedNodeMemoProps {\n  pathwayState: GuidanceState;\n  isGuidance: boolean;\n}\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(({ pathwayState, isGuidance }) => {\n  const guidance = isGuidance && renderGuidance(pathwayState);\n  const branch = isBranchState(pathwayState) && renderBranch(pathwayState);\n  return (\n    <div className=\"expandedNode\">\n      <table className={styles.infoTable}>\n        <tbody>{guidance || branch}</tbody>\n      </table>\n    </div>\n  );\n});\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo } from 'react';\nimport { GuidanceState, State } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState } from 'utils/nodeUtils';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faCapsules,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface NodeProps {\n  pathwayState: State;\n  isCurrentNode: boolean;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClickHandler?: () => void;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      { pathwayState, isCurrentNode, xCoordinate, yCoordinate, expanded = false, onClickHandler },\n      ref\n    ) => {\n      const { label } = pathwayState;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n\n      const isActionable = isCurrentNode;\n      const topLevelClasses = [styles.node];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push('expanded');\n      if (isActionable) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = styles.childNotActionable;\n      }\n      const isGuidance = isGuidanceState(pathwayState);\n\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div className={`nodeTitle ${onClickHandler && 'clickable'}`} onClick={onClickHandler}>\n            <div className=\"iconAndLabel\">\n              <NodeIcon pathwayState={pathwayState} isGuidance={isGuidance} />\n              {label}\n            </div>\n            <StatusIcon status={null} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode\n                pathwayState={pathwayState as GuidanceState}\n                isActionable={isActionable}\n                isGuidance={isGuidance}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayState: State;\n  isGuidance: boolean;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, isGuidance }) => {\n  let icon: IconProp = faMicroscope;\n  if (pathwayState.label === 'Start') icon = faPlay;\n  if (isGuidance) {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'MedicationAdministration') icon = faCapsules;\n      else if (resourceType === 'Procedure') icon = faSyringe;\n    }\n  }\n  return <FontAwesomeIcon icon={icon} className={styles.icon} />;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status == null) {\n    return null;\n  }\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return (\n    <div className=\"statusIcon\">\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport styles from './Arrow.module.scss';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  widthOffset: number;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, widthOffset }) => {\n  const className = styles.arrow;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={className}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={styles.arrowhead}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import React, {\n  FC,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  memo\n} from 'react';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { Pathway } from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges } from 'graph-model';\nimport styles from './Graph.module.scss';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\ninterface GraphProps {\n  pathway: Pathway;\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n}\n\nconst Graph: FC<GraphProps> = memo(({ pathway, interactive = true, expandCurrentNode = true }) => {\n  const graphElement = useRef<HTMLDivElement>(null);\n  const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n  const [parentWidth, setParentWidth] = useState<number>(\n    graphElement?.current?.parentElement?.clientWidth ?? 0\n  );\n\n  // Get the layout of the graph\n  const getGraphLayout = useCallback((): Layout => {\n    const nodeDimensions: NodeDimensions = {};\n\n    // Retrieve dimensions from nodeRefs\n    if (nodeRefs?.current) {\n      Object.keys(nodeRefs.current).forEach(key => {\n        const nodeElement = nodeRefs.current[key];\n        const width = nodeElement.clientWidth;\n        // nodeElement can have multiple children so calculate the sum to get the node height\n        const height = Array.from(nodeElement.children).reduce(\n          (acc, child) => acc + child.clientHeight,\n          0\n        );\n\n        nodeDimensions[key] = { width, height };\n      });\n    }\n\n    return graphLayout(pathway, nodeDimensions);\n  }, [pathway]);\n\n  const [layout, setLayout] = useState(getGraphLayout());\n  const { nodeCoordinates, edges } = layout;\n  const maxHeight = useMemo(() => {\n    return nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.y)\n          .reduce((a, b) => Math.max(a, b))\n      : 0;\n  }, [nodeCoordinates]);\n\n  // If a node has a negative x value, shift nodes and edges to the right by that value\n  const minX =\n    nodeCoordinates !== undefined\n      ? Object.values(nodeCoordinates)\n          .map(x => x.x + parentWidth / 2)\n          .reduce((a, b) => Math.min(a, b))\n      : 0;\n\n  if (minX < 0) {\n    const toAdd = minX * -1;\n    Object.keys(nodeCoordinates).forEach(key => {\n      const node = nodeCoordinates[key];\n      node.x += toAdd;\n    });\n\n    Object.keys(edges).forEach(key => {\n      const edge = edges[key];\n\n      edge.points.forEach(p => (p.x += toAdd));\n      if (edge.label) edge.label.x += toAdd;\n    });\n  }\n  const layoutKeys = Object.keys(layout).toString();\n  const initialExpandedState = useMemo(() => {\n    return layoutKeys.split(',').reduce((acc: { [key: string]: boolean }, curr: string) => {\n      acc[curr] = false;\n      return acc;\n    }, {});\n  }, [layoutKeys]);\n\n  const [expanded, _setExpanded] = useState<{ [key: string]: boolean | undefined }>(\n    initialExpandedState\n  );\n\n  const setExpanded = useCallback((key: string, expand?: boolean): void => {\n    _setExpanded(prevState => {\n      return { ...prevState, [key]: !prevState[key] };\n    });\n  }, []);\n\n  // Recalculate graph layout if graph container size changes\n  useEffect(() => {\n    if (graphElement.current?.parentElement) {\n      new ResizeSensor(graphElement.current.parentElement, function() {\n        setParentWidth(graphElement.current?.parentElement?.clientWidth ?? 0);\n        setLayout(getGraphLayout());\n      });\n    }\n  }, [getGraphLayout]);\n\n  // Recalculate graph layout if a node is expanded\n  useEffect(() => {\n    setLayout(getGraphLayout());\n  }, [expanded, getGraphLayout]);\n\n  // maxWidth finds the edge label that is farthest to the right\n  const maxWidth: number =\n    edges !== undefined\n      ? Object.values(edges)\n          .map(e => e.label)\n          .map(l => (l ? l.x + l.text.length * 10 + parentWidth / 2 : 0))\n          .reduce((a, b) => Math.max(a, b), 0)\n      : parentWidth;\n\n  return (\n    <GraphMemo\n      graphElement={graphElement}\n      interactive={interactive}\n      maxHeight={maxHeight}\n      nodeCoordinates={nodeCoordinates}\n      edges={edges}\n      pathway={pathway}\n      nodeRefs={nodeRefs}\n      parentWidth={parentWidth}\n      maxWidth={maxWidth}\n      expanded={expanded}\n      setExpanded={setExpanded}\n    />\n  );\n});\n\ninterface GraphMemoProps {\n  graphElement: RefObject<HTMLDivElement>;\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  edges: Edges;\n  pathway: Pathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  expanded: {\n    [key: string]: boolean | undefined;\n  };\n  setExpanded: (key: string, expand?: boolean | undefined) => void;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(\n  ({\n    graphElement,\n    interactive,\n    maxHeight,\n    nodeCoordinates,\n    edges,\n    pathway,\n    nodeRefs,\n    parentWidth,\n    maxWidth,\n    expanded,\n    setExpanded\n  }) => {\n    return (\n      <div\n        ref={graphElement}\n        id=\"graph-root\"\n        className={styles.root}\n        style={{\n          height: interactive ? maxHeight + 150 : 'inherit',\n          width: maxWidth + 'px',\n          position: 'relative',\n          marginRight: '5px'\n        }}\n      >\n        {nodeCoordinates !== undefined\n          ? Object.keys(nodeCoordinates).map(nodeName => {\n              const onClickHandler = useCallback(() => {\n                return interactive ? setExpanded(nodeName) : undefined;\n              }, [nodeName]);\n              return (\n                <Node\n                  key={nodeName}\n                  ref={(node: HTMLDivElement): void => {\n                    nodeRefs.current[nodeName] = node;\n                  }}\n                  pathwayState={pathway.states[nodeName]}\n                  isCurrentNode={false}\n                  xCoordinate={nodeCoordinates[nodeName].x + parentWidth / 2}\n                  yCoordinate={nodeCoordinates[nodeName].y}\n                  expanded={expanded[nodeName]}\n                  onClickHandler={onClickHandler}\n                />\n              );\n            })\n          : []}\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{\n            // Adding 5 pixels to maxWidth so that the rightmost edge label is not cut off\n            width: maxWidth + 5,\n            height: maxHeight,\n            zIndex: 1,\n            top: 0,\n            left: 0,\n            overflow: 'visible'\n          }}\n        >\n          {edges !== undefined\n            ? Object.keys(edges).map(edgeName => {\n                const edge = edges[edgeName];\n                return (\n                  <Arrow\n                    key={edgeName}\n                    edge={edge}\n                    edgeName={edgeName}\n                    widthOffset={parentWidth / 2}\n                  />\n                );\n              })\n            : []}\n        </svg>\n      </div>\n    );\n  }\n);\n\nexport default Graph;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nexport default function Loading() {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n}\n","import React, { FC } from 'react';\nimport { Pathway } from 'pathways-model';\nimport { Service } from 'pathways-objects';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nimport Loading from 'components/elements/Loading/Loading';\n\nimport styles from './PathwaysList.module.scss';\n\ninterface PathwaysTableProps {\n  pathways: Pathway[];\n  deleteButton: (pathway: Pathway) => void;\n  editButton: (pathway: Pathway) => void;\n}\n\nconst PathwaysTable: FC<PathwaysTableProps> = ({ pathways, deleteButton, editButton }) => {\n  return (\n    <TableContainer className={styles.pathwayList}>\n      <Table aria-label=\"pathway list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Pathway Name</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell>Last Updated</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {pathways.map(pathway => (\n            <TableRow key={pathway.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {pathway.name}\n              </TableCell>\n              <TableCell>draft</TableCell>\n              <TableCell>2 days ago</TableCell>\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                  onClick={(): void => editButton(pathway)}\n                >\n                  Edit\n                </Button>\n\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                  onClick={(): void => deleteButton(pathway)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\ninterface PathwaysListProps {\n  pathways: Pathway[];\n  callback: Function;\n  service: Service<Array<Pathway>>;\n}\n\nconst PathwaysList: FC<PathwaysListProps> = ({ pathways, callback, service }) => {\n  if (service.status === 'loading') return <Loading />;\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={(): void => callback()}\n      >\n        Create Pathway\n      </Button>\n\n      <PathwaysTable\n        pathways={pathways}\n        deleteButton={(): void => {\n          // do nothing for now -- TODO: implement delete\n        }}\n        editButton={(pathway: Pathway): void => callback(pathway)}\n      />\n    </div>\n  );\n};\n\nexport default PathwaysList;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\nimport { PathwayContextInterface } from 'pathways-model';\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n  pathwayCtx: PathwayContextInterface;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({\n  pathway: null,\n  setPathway: () => {\n    //do nothing\n  }\n});\n\nexport const PathwayProvider: FC<PathwayProviderProps> = ({ children, pathwayCtx }) => {\n  return <PathwayContext.Provider value={pathwayCtx}>{children}</PathwayContext.Provider>;\n};\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\nimport { Pathway } from 'pathways-model';\n\nfunction getPathways(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nconst useGetPathwaysService = (url: string): Service<Pathway[]> => {\n  const [result, setResult] = useState<Service<Array<Pathway>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getPathways(url)\n      .then(response => response.json() as Promise<Array<string>>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<Pathway>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(pathwaysList => setResult({ status: 'loaded', payload: pathwaysList }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n};\n\nexport default useGetPathwaysService;\n","import React, { FC, createContext, useContext, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({\n  user: '',\n  setUser: () => {\n    // do nothing\n  }\n});\n\ninterface UserProviderProps {\n  children: ReactNode;\n  value: UserContextInterface;\n}\nexport const UserProvider: FC<UserProviderProps> = ({ children, value }) => {\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport logo from 'camino-logo-dark.png';\nimport Sidebar from 'components/Sidebar';\nimport Graph from './Graph';\nimport config from 'utils/ConfigManager';\nimport PathwaysList from './PathwaysList';\nimport { PathwayProvider } from './PathwayProvider';\nimport ThemeProvider from './ThemeProvider';\nimport { Pathway } from 'pathways-model';\nimport useGetPathwaysService from './PathwaysService/PathwaysService';\nimport styles from './App.module.scss';\nimport { UserProvider } from './UserProvider';\n\nconst App: FC = () => {\n  const [currentPathway, setCurrentPathway] = useState<Pathway | null>(null);\n  const [selectPathway, setSelectPathway] = useState<boolean>(true);\n  const [pathways, setPathways] = useState<Pathway[]>([]);\n  const [user, setUser] = useState<string>('');\n  const headerElement = useRef<HTMLDivElement>(null);\n  const graphContainerElement = useRef<HTMLDivElement>(null);\n\n  const service = useGetPathwaysService(config.get('demoPathwaysService'));\n\n  useEffect(() => {\n    if (service.status === 'loaded' && pathways.length === 0) setPathways(service.payload);\n  }, [service, pathways.length]);\n\n  // Set the height of the graph container\n  useEffect(() => {\n    if (graphContainerElement?.current && headerElement?.current)\n      graphContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [selectPathway]);\n\n  function setPathwayCallback(value: Pathway | null, selectPathway = false): void {\n    window.scrollTo(0, 0);\n    setSelectPathway(selectPathway);\n    setCurrentPathway(value);\n  }\n\n  interface PatientViewProps {\n    pathway: Pathway | null;\n  }\n\n  const BuilderView: FC<PatientViewProps> = ({ pathway }) => {\n    return (\n      <div className={styles.display}>\n        <Sidebar headerElement={headerElement} />\n\n        {pathway ? (\n          <div ref={graphContainerElement} className={styles.graph}>\n            <Graph pathway={pathway} expandCurrentNode={true} />\n          </div>\n        ) : (\n          <div>No Pathway Loaded</div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <ThemeProvider>\n      <UserProvider value={{ user, setUser }}>\n        <PathwayProvider\n          pathwayCtx={{\n            pathway: currentPathway,\n            setPathway: setPathwayCallback\n          }}\n        >\n          <div ref={headerElement}>\n            <Header logo={logo} />\n\n            <Navigation name={currentPathway?.name ?? ''} />\n          </div>\n\n          {selectPathway ? (\n            <PathwaysList\n              pathways={pathways}\n              callback={setPathwayCallback}\n              service={service}\n            ></PathwaysList>\n          ) : (\n            <BuilderView pathway={currentPathway} />\n          )}\n        </PathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './components/App.tsx';\nimport './styles/index.scss';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" render={() => <App />}></Route>\n    </Switch>\n  </Router>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectButton\":\"ActionButton_selectButton___qB5R\",\"accept\":\"ActionButton_accept__28b2D\",\"decline\":\"ActionButton_decline__zz-vG\",\"smallActionButton\":\"ActionButton_smallActionButton__1bPWu\",\"largeActionButton\":\"ActionButton_largeActionButton__blRdA\",\"largeDecline\":\"ActionButton_largeDecline__wz9Zw\",\"mediumActionButton\":\"ActionButton_mediumActionButton__3EpOp\"};"],"sourceRoot":""}