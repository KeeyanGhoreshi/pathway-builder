{"version":3,"sources":["components/ExpandedNode/ExpandedNode.module.scss","components/Header/Header.module.scss","components/elements/Loading/Loading.module.scss","camino-logo-dark.png","components/Graph/Graph.module.scss","components/Services/Services.tsx","components/CriteriaProvider.tsx","styles/theme.tsx","components/ThemeProvider.tsx","components/Header/Header.tsx","utils/builder.ts","components/Navigation/styles.tsx","components/Navigation/Navigation.tsx","components/PathwayProvider.tsx","components/Sidebar/styles.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarHeader.tsx","components/Sidebar/SidebarButton.tsx","components/elements/DropDown/DropDown.tsx","components/Sidebar/BranchNode.tsx","engine/cql-to-elm.ts","components/Sidebar/ActionNode.tsx","components/Sidebar/NullNode.tsx","components/Sidebar/BranchTransition.tsx","components/Sidebar/OutlinedDiv.tsx","visualization/layout.ts","utils/nodeUtils.ts","components/ExpandedNode/ExpandedNode.tsx","components/Node/Node.tsx","components/Arrow/styles.tsx","components/Arrow/Arrow.tsx","components/Graph/Graph.tsx","components/Builder/styles.tsx","components/Builder/Builder.tsx","components/BuilderRoute.tsx","components/UserProvider.tsx","components/Tabs/styles.tsx","components/Tabs/Tabs.tsx","components/elements/Loading/Loading.tsx","components/PathwaysList/styles.tsx","components/PathwaysList/PathwayModal.tsx","components/PathwaysList/PathwaysTable.tsx","components/PathwaysList/PathwaysList.tsx","components/CriteriaList/styles.tsx","components/CriteriaList/CriteriaTable.tsx","components/CriteriaList/ImportCriteriaModal.tsx","components/CriteriaList/CriteriaList.tsx","components/App.tsx","index.js","utils/ConfigManager.js","components/Node/Node.module.scss"],"names":["module","exports","useGetService","url","useState","status","result","setResult","useEffect","fetch","headers","Accept","getObject","then","response","json","listOfFiles","map","f","options","typedFetch","listOfPromises","Promise","all","list","payload","catch","error","CriteriaContext","createContext","jsonToCriteria","rawElm","elm","JSON","parse","library","identifier","defaultStatementNames","statements","def","find","includes","name","id","shortid","generate","label","version","modified","Date","now","alert","CriteriaProvider","memo","children","criteria","setCriteria","buildCriteriaNodeId","setBuildCriteriaNodeId","config","get","defaultCriteria","forEach","jsonCriterion","criterion","stringify","push","addCriteria","useCallback","file","reader","FileReader","onload","event","target","newCriteria","currentCriteria","readAsText","deleteCriteria","filter","updateBuildCriteriaNodeId","Provider","value","useCriteriaContext","useContext","variables","spacing","globalPadding","colors","white","black","blue","red","gray","grayMedium","grayBlue","grayLighter","grayDark","green","typography","fontFamily","join","materialUiOverridesBase","MuiButton","root","borderRadius","backgroundColor","color","fontWeight","iconSizeMedium","fontSize","iconSizeSmall","MuiTableHead","MuiTableCell","head","padding","borderBottom","MuiFormControl","margin","MuiFormLabel","fontStyle","MuiInputBase","input","transitionDelay","transitionProperty","MuiOutlinedInput","MuiSelect","icon","MuiPaper","rounded","MuiDialogTitle","MuiDialogContent","MuiDialogActions","materialUiOverridesDark","borderColor","notchedOutline","MuiMenuItem","paletteBase","primary","main","secondary","common","background","default","text","grey","800","lightTheme","createMuiTheme","palette","overrides","darkTheme","deepmerge","projectorTheme","getTheme","theme","useProjector","ThemeContext","ThemeProvider","setUseProjector","muiTheme","toggleTheme","currentUseProjector","anchorEl","setAnchorEl","openMenu","currentTarget","closeMenu","handleToggleTheme","className","styles","header","to","homeLink","onClick","src","logo","alt","aria-controls","aria-haspopup","faCog","Menu","keepMounted","open","Boolean","onClose","MenuItem","downloadPathway","pathway","pathwayString","schemaIdentifier","usings","localIdentifier","uri","localId","locator","context","expression","type","operand","dataType","valueSets","codes","codeSystems","pathwayToExport","undefined","states","Object","keys","stateName","state","key","mergeElm","elmStatement","getElmStatement","transitions","transition","condition","description","action","navigational","setNavigationalElm","exportPathway","pathwayBlob","Blob","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","additionalElm","using","include","path","valueSet","code","codesystem","createState","nodeTypeIsUndefined","addState","setStateNodeType","stateKey","nodeType","makeStateGuidance","cql","makeStateBranch","setStateAction","addTransition","startStateKey","endStateKey","getNodeType","makeStyles","display","alignItems","height","justifyContent","backButton","width","navigationIcons","cursor","pathwayName","marginLeft","Navigation","useStyles","history","useHistory","handleGoBack","IconButton","aria-label","faChevronLeft","faEllipsisH","getContentAnchorEl","anchorOrigin","vertical","horizontal","PathwayContext","PathwayProvider","pathways","setPathways","service","servicePayload","addPathway","currentPathways","deletePathway","updatePathway","newPathway","index","findIndex","slice","usePathwayContext","flexDirection","minWidth","overflowY","float","formControl","divider","headerLabelStart","displayText","sidebarHeader","sidebarHeaderGroup","sidebarHeaderButton","headerLabelGroup","headerLabel","headerLabelText","marginBottom","editIcon","sidebarButtonGroup","sidebarButton","marginRight","sidebarButtonText","outlinedDiv","outlinedDivError","toggleSidebar","cancelButton","alignSelf","marginTop","buildCriteriaContainer","saveButton","headerElement","currentNode","isExpanded","setIsExpanded","sidebarContainerElement","useRef","currentNodeKey","changeNodeType","redirectToNode","nodeKey","encodeURIComponent","location","pathname","addNode","newState","current","style","innerHeight","clientHeight","ref","isTransition","faChevronRight","showInput","setShowInput","inputRef","currentNodeLabel","goToParentNode","goToNode","openNodeOptions","changeNodeLabel","setStateLabel","handleShowInput","handleKeyPress","FormControl","fullWidth","Input","onBlur","onKeyPress","defaultValue","autoFocus","onFocus","select","clsx","faEdit","buttonName","buttonIcon","buttonText","Button","variant","startIcon","onChange","handleSetSelected","InputLabel","htmlFor","Select","MenuProps","transformOrigin","displayEmpty","option","nodeTypeOptions","selectNodeType","handleAddTransition","faPlus","actionTypeOptions","codeSystemOptions","addActionCQL","method","body","convertBasicCQL","resource","cqlId","replace","codesystemStatement","system","returnStatement","resourceType","retrieveStatement","defineStatement","coding","medicationCodeableConcept","escape","title","console","createCQL","setGuidanceStateElm","changeCode","resetDisplay","changeDescription","actionId","setActionDescription","changeTitle","selectActionType","actionType","selectCodeSystem","codeSystem","validateFunction","length","onEnter","e","changeNodeTypeEnabled","displayAddButtons","TextField","inputProps","faCheckCircle","criteriaOptions","c","transitionKey","transitionNode","useCriteriaSelected","setUseCriteriaSelected","criteriaDescription","criteriaIsValid","criteriaDisplayIsValid","hasCriteria","faTrashAlt","displayCriteria","buildCriteriaSelected","setBuildCriteriaSelected","criteriaName","setCriteriaName","handleUseCriteria","transitionId","removeTransitionCondition","selectCriteriaSource","criteriaSource","startNodeKey","criteriaLabel","foundTransition","setTransitionCondition","setCriteriaDisplay","criteriaDisplay","setTransitionConditionDescription","handleCriteriaName","handleBuildCriteria","handleBuildCriteriaCancel","size","faTools","FormControlLabel","Box","control","Checkbox","faSave","disabled","InputComponent","multiline","InputLabelProps","shrink","InputProps","inputComponent","classes","graphLayoutProvider","layout","nodeDimensions","nodeNames","g","dagre","graphlib","Graph","setGraph","setDefaultEdgeLabel","nodeDimension","setNode","setEdge","nodeCoordinates","startNodeShift","node","x","nodeName","y","edges","edge","edgeName","v","w","start","end","points","p","layoutDagre","nodes","rank","NaN","horizontalPosition","parents","canMove","initializeNodes","graph","assignRankToChildren","assignHorizontalPositionToNode","assignHorizontalPositionToNodesInRank","coordinates","NODE_HEIGHT","produceCoordinates","hPos","isNaN","i","hasOverlap","direction","Math","ceil","NODE_WIDTH","parentsOnHigherRank","parentName","parent","floor","splice","childNode","spreadChildrenEvenly","sum","reduce","b","nodesInRank","nodesOverlap","otherNode","nodesEqual","child","indexOf","assignRankToNode","err","layoutCustom","isGuidanceState","isBranchState","resourceNameConversion","MedicationRequest","ServiceRequest","CarePlan","ExpandedNode","pathwayState","isGuidance","isActionable","ExpandedNodeMemo","ExpandedNodeField","descTitle","desc","guidance","returnElements","rel","faExternalLinkAlt","externalLink","renderGuidance","branch","infoTable","Node","forwardRef","xCoordinate","yCoordinate","expanded","hasMetadata","setHasMetadata","onClickHandler","top","left","isCurrentNode","isTransitionOfCurrentBranch","some","topLevelClasses","expandedNodeClass","actionable","childActionable","childNotActionable","expandedNode","NodeIcon","faPlay","guidancePathwayState","faPrescriptionBottleAlt","faSyringe","faBookMedical","faMicroscope","StatusIcon","faTimesCircle","arrow","stroke","strokeWidth","currentBranchArrow","arrowhead","fill","currentBranchArrowhead","ArrowPath","arrowheadId","widthOffset","pointsWithOffset","remainder","pathString","acc","point","arr","d","markerEnd","Arrow","isCurrentBranchArrow","edgeNameNoWhitespace","markerWidth","markerHeight","refX","refY","orient","interactive","expandCurrentNode","graphElement","nodeRefs","parentElement","clientWidth","parentWidth","setParentWidth","getGraphLayout","nodeElement","Array","from","graphLayout","setLayout","maxHeight","useMemo","values","max","minX","min","toAdd","maxWidth","curr","lastSelectedNode","setExpanded","toggleExpanded","prevState","cancel","ResizeSensor","GraphMemo","pathwayId","useParams","nodeId","position","xmlns","zIndex","overflow","toggleButtonCss","graphHeader","graphHeaderText","paddingLeft","toggleButton","darken","toggleIcon","transform","graphContainerElement","useTheme","showCriteriaBuilder","setShowCriteriaBuilder","toggleShowCriteria","faProjectDiagram","decodeURIComponent","pathwayIndex","UserContext","UserProvider","user","setUser","textTransform","tabs","tab","component","faSpinner","spin","createPathwayButton","pathwayList","pathwaysListButton","dialogCloseButton","editPathway","createNewPathwayMeta","pathwayNameRef","pathwayDescRef","closeModal","handleCreateNewPathway","preventDefault","Start","createNewPathway","handleUpdatePathway","metaDescription","Dialog","aria-labelledby","DialogTitle","disableTypography","faTimes","onSubmit","DialogContent","required","DialogActions","setOpen","editablePathway","setEditablePathway","openEditPathwayModal","closeEditPathwayModal","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","Link","RouterLink","underline","align","faFileDownload","openNewPathwayModal","closeNewPathwayModal","buttonRow","buildCriteriaButton","criteriaList","editButton","chooseFileInput","inputButton","whiteSpace","fileName","datetime","moment","fromNow","setFileName","importFileRef","selectFile","files","handleChooseFile","accept","faFileImport","openImportModal","closeImportModal","ReactDOM","render","getElementById","this","global","CONFIG","parts","split","conf"],"mappings":"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","file":"static/js/main.a86313d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoTable\":\"ExpandedNode_infoTable__3v2tx\",\"descTitle\":\"ExpandedNode_descTitle__15ki8\",\"desc\":\"ExpandedNode_desc__3Xdkf\",\"externalLink\":\"ExpandedNode_externalLink__1Mr1x\",\"defaultTextButton\":\"ExpandedNode_defaultTextButton__2Bvq6\",\"commentsForm\":\"ExpandedNode_commentsForm__3Q20Y\",\"footer\":\"ExpandedNode_footer__FOCYI\",\"comments\":\"ExpandedNode_comments__9q-JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3T0lc\",\"homeLink\":\"Header_homeLink__2ew4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loading_root__3b6qy\"};","module.exports = __webpack_public_path__ + \"static/media/camino-logo-dark.c8fc712a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Graph_root__1SJOc\"};","import { useState, useEffect } from 'react';\nimport { Service } from 'pathways-objects';\n\nfunction getObject(url: string): Promise<Response> {\n  return fetch(url, {\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n}\n\nfunction typedFetch<T>(url: string, options?: object): Promise<T> {\n  return fetch(url, options).then(response => response.json() as Promise<T>);\n}\n\nfunction useGetService<T>(url: string): Service<Array<T>> {\n  const [result, setResult] = useState<Service<Array<T>>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    getObject(url)\n      .then(response => response.json() as Promise<string[]>)\n      .then(listOfFiles => listOfFiles.map(f => typedFetch<T>(url + '/' + f)))\n      .then(listOfPromises => Promise.all(listOfPromises))\n      .then(list => setResult({ status: 'loaded', payload: list }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, [url]);\n\n  return result;\n}\n\nexport default useGetService;\n","import React, {\n  createContext,\n  ReactNode,\n  FC,\n  useState,\n  memo,\n  useContext,\n  useCallback,\n  useEffect\n} from 'react';\nimport shortid from 'shortid';\nimport { ElmStatement } from 'elm-model';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\nimport { ServiceLoaded } from 'pathways-objects';\n\ninterface Criteria {\n  id: string;\n  label: string;\n  version: string;\n  modified: number;\n  elm: object;\n}\n\ninterface CriteriaContextInterface {\n  criteria: Criteria[];\n  buildCriteriaNodeId: string;\n  addCriteria: (file: File) => void;\n  deleteCriteria: (id: string) => void;\n  updateBuildCriteriaNodeId: (id: string) => void;\n}\n\nexport const CriteriaContext = createContext<CriteriaContextInterface>(\n  {} as CriteriaContextInterface\n);\n\ninterface CriteriaProviderProps {\n  children: ReactNode;\n}\n\nfunction jsonToCriteria(rawElm: string): Criteria | undefined {\n  const elm = JSON.parse(rawElm);\n  if (!elm.library?.identifier) {\n    alert('Please upload ELM file');\n    return;\n  }\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatements: ElmStatement[] = elm.library.statements.def;\n  const elmStatement = elmStatements.find(def => !defaultStatementNames.includes(def.name));\n  if (!elmStatement) {\n    alert('No elm statement found in that file');\n    return;\n  }\n  const newCriteria: Criteria = {\n    id: shortid.generate(),\n    label: elm.library.identifier.id,\n    version: elm.library.identifier.version,\n    modified: Date.now(),\n    elm: elm\n  };\n  return newCriteria;\n}\n\nexport const CriteriaProvider: FC<CriteriaProviderProps> = memo(({ children }) => {\n  const [criteria, setCriteria] = useState<Criteria[]>([]);\n  const [buildCriteriaNodeId, setBuildCriteriaNodeId] = useState<string>('');\n  const service = useGetService<Criteria>(config.get('demoCriteria'));\n  const payload = (service as ServiceLoaded<Criteria[]>).payload;\n\n  useEffect(() => {\n    const defaultCriteria: Criteria[] = [];\n    if (payload) {\n      payload.forEach(jsonCriterion => {\n        const criterion = jsonToCriteria(JSON.stringify(jsonCriterion));\n        if (criterion) defaultCriteria.push(criterion);\n      });\n    }\n    setCriteria(defaultCriteria);\n  }, [payload]);\n\n  const addCriteria = useCallback((file: File) => {\n    const reader = new FileReader();\n    reader.onload = (event: ProgressEvent<FileReader>): void => {\n      if (event.target?.result) {\n        const rawElm = event.target.result as string;\n        const newCriteria = jsonToCriteria(rawElm);\n        if (newCriteria) setCriteria(currentCriteria => [...currentCriteria, newCriteria]);\n      } else alert('Unable to read that file');\n    };\n    reader.readAsText(file);\n  }, []);\n\n  const deleteCriteria = useCallback((id: string) => {\n    setCriteria(currentCriteria => currentCriteria.filter(criteria => criteria.id !== id));\n  }, []);\n\n  const updateBuildCriteriaNodeId = useCallback(\n    (id: string) => {\n      setBuildCriteriaNodeId(id);\n    },\n    [setBuildCriteriaNodeId]\n  );\n\n  return (\n    <CriteriaContext.Provider\n      value={{\n        criteria,\n        buildCriteriaNodeId,\n        addCriteria,\n        deleteCriteria,\n        updateBuildCriteriaNodeId\n      }}\n    >\n      {children}\n    </CriteriaContext.Provider>\n  );\n});\n\nexport const useCriteriaContext = (): CriteriaContextInterface => useContext(CriteriaContext);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepmerge from 'deepmerge';\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    variables: {\n      spacing: {\n        globalPadding: string;\n      };\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    variables?: {\n      spacing?: {\n        globalPadding?: string;\n      };\n    };\n  }\n}\n\nconst variables = {\n  spacing: {\n    globalPadding: '2em'\n  }\n};\n\nconst colors = {\n  white: '#fff',\n  black: '#222',\n  blue: '#5d89a1',\n  red: '#d95d77',\n  gray: '#4a4a4a',\n  grayMedium: '#bbbdc0',\n  grayBlue: '#cbd5df',\n  grayLighter: '#eaeef2',\n  grayDark: '#444',\n  green: '#2fa874'\n};\n\nconst typography = {\n  fontFamily: [\n    'Open Sans',\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'Roboto',\n    'Oxygen',\n    'Ubuntu',\n    'Cantarell',\n    'Fira Sans',\n    'Droid Sans',\n    'Helvetica Neue',\n    'sans-serif'\n  ].join(',')\n};\n\nconst materialUiOverridesBase = {\n  MuiButton: {\n    root: {\n      borderRadius: 0,\n      '&.Mui-disabled': {\n        backgroundColor: colors.grayMedium,\n        color: colors.white\n      }\n    },\n    label: {\n      fontWeight: 600\n    },\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    },\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 14\n      }\n    }\n  },\n  MuiTableHead: {\n    root: {\n      backgroundColor: colors.grayLighter\n    }\n  },\n  MuiTableCell: {\n    root: {\n      fontSize: '1em'\n    },\n    head: {\n      padding: '5px 16px',\n      borderBottom: 'none'\n    }\n  },\n  MuiFormControl: {\n    root: {\n      margin: '10px 0'\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      fontStyle: 'italic',\n      '&.Mui-error': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      fontWeight: 600\n    },\n    input: {\n      '&::selection': {\n        color: colors.white,\n        backgroundColor: colors.grayDark\n      },\n      '&:-webkit-autofill': {\n        transitionDelay: '9999s',\n        transitionProperty: 'background-color, color'\n      }\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      borderRadius: '0'\n    }\n  },\n  MuiSelect: {\n    icon: {\n      fontSize: '2em'\n    }\n  },\n  MuiPaper: {\n    rounded: {\n      borderRadius: '0'\n    }\n  },\n  MuiDialogTitle: {\n    root: {\n      padding: '1em'\n    }\n  },\n  MuiDialogContent: {\n    root: {\n      padding: '0 4em'\n    }\n  },\n  MuiDialogActions: {\n    root: {\n      padding: '2em 4em'\n    }\n  }\n};\n\nconst materialUiOverridesDark = {\n  MuiFormControl: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      }\n    }\n  },\n  MuiFormLabel: {\n    root: {\n      color: colors.white,\n      '&$focused': {\n        color: colors.white\n      }\n    }\n  },\n  MuiInputBase: {\n    root: {\n      color: colors.white,\n      '&:hover': {\n        borderColor: colors.white,\n        backgroundColor: colors.grayDark\n      }\n    }\n  },\n  MuiOutlinedInput: {\n    root: {\n      '&:hover': {\n        borderColor: colors.white\n      },\n      '&:hover $notchedOutline': {\n        borderColor: colors.white\n      },\n      '&$focused $notchedOutline': {\n        borderColor: colors.white\n      }\n    },\n    notchedOutline: {\n      borderColor: colors.white\n    }\n  },\n  MuiSelect: {\n    icon: {\n      color: colors.white\n    }\n  },\n  MuiMenuItem: {\n    root: {\n      color: colors.grayDark\n    }\n  }\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.red\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLighter\n  },\n  text: {\n    primary: colors.gray,\n    secondary: colors.gray\n  },\n  grey: {\n    800: '#4a4a4a'\n  }\n};\n\nconst lightTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nconst darkTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    text: {\n      primary: colors.white,\n      secondary: colors.white\n    }\n  }),\n  overrides: deepmerge(materialUiOverridesBase, materialUiOverridesDark),\n  variables: { ...variables }\n});\n\nconst projectorTheme = createMuiTheme({\n  typography: { ...typography },\n  palette: deepmerge(paletteBase, {\n    background: {\n      default: colors.grayBlue\n    },\n    text: {\n      primary: colors.black,\n      secondary: colors.black\n    }\n  }),\n  overrides: { ...materialUiOverridesBase },\n  variables: { ...variables }\n});\n\nexport default lightTheme;\nexport { lightTheme, darkTheme, projectorTheme };\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useState,\n  useCallback,\n  useContext,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport { lightTheme, darkTheme, projectorTheme } from '../styles/theme';\n\ninterface ThemeProviderProps {\n  theme: string;\n  children: ReactNode;\n}\n\ninterface ThemeContextInterface {\n  toggleTheme: () => void;\n  useProjector: boolean;\n}\n\nconst getTheme = ({ theme, useProjector }: { theme: string; useProjector: boolean }): Theme => {\n  if (useProjector) {\n    switch (theme) {\n      case 'dark':\n        // TODO: replace with dark projector theme\n        return darkTheme;\n\n      default:\n        return projectorTheme;\n    }\n  }\n\n  switch (theme) {\n    case 'dark':\n      return darkTheme;\n\n    default:\n      return lightTheme;\n  }\n};\n\nexport const ThemeContext = createContext({} as ThemeContextInterface);\nexport const useThemeToggle = (): (() => void) => {\n  const { toggleTheme } = useContext(ThemeContext);\n  return toggleTheme;\n};\nexport const useTheme = (theme: string): Theme => {\n  const { useProjector } = useContext(ThemeContext);\n  return getTheme({ theme, useProjector });\n};\n\nconst ThemeProvider: FC<ThemeProviderProps> = memo(({ theme = 'light', children }) => {\n  const [useProjector, setUseProjector] = useState(false);\n  const muiTheme = getTheme({ theme, useProjector });\n\n  const toggleTheme = useCallback(() => {\n    setUseProjector(currentUseProjector => !currentUseProjector);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <ThemeContext.Provider value={{ useProjector, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ThemeProvider;\n","import React, { FC, memo, useCallback, useState, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport { useThemeToggle } from '../ThemeProvider';\n\nimport logo from 'camino-logo-dark.png';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  const { updateBuildCriteriaNodeId } = useCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const toggleTheme = useThemeToggle();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleToggleTheme = useCallback((): void => {\n    toggleTheme();\n    closeMenu();\n  }, [toggleTheme, closeMenu]);\n\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\" className={styles.homeLink} onClick={(): void => updateBuildCriteriaNodeId('')}>\n        <img src={logo} alt=\"logo\" className={styles.logo} />\n      </Link>\n\n      <button onClick={openMenu} aria-controls=\"options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faCog} />\n      </button>\n\n      <Menu\n        id=\"options-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem onClick={handleToggleTheme}>Toggle Theme</MenuItem>\n      </Menu>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","import { Pathway, Criteria, State, Transition, Action, GuidanceState } from 'pathways-model';\nimport { ElmLibrary, ElmStatement } from 'elm-model';\nimport shortid from 'shortid';\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\n\nexport function createNewPathway(name: string, description?: string, pathwayId?: string): Pathway {\n  return {\n    id: pathwayId ?? shortid.generate(),\n    name: name,\n    description: description ?? '',\n    library: '',\n    criteria: [],\n    states: {\n      Start: {\n        key: 'Start',\n        label: 'Start',\n        transitions: []\n      }\n    }\n  };\n}\n\nexport function downloadPathway(pathway: Pathway): void {\n  const pathwayString = exportPathway(pathway);\n  // Create blob from pathwayString to save to file system\n  const pathwayBlob = new Blob([pathwayString], {\n    type: 'application/json'\n  });\n  // Temporarily create hidden <a> tag to download pathwayBlob\n  // File name is set to <pathway-name>.json\n  const url = window.URL.createObjectURL(pathwayBlob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `${pathway.name}.json`;\n  a.click();\n  window.URL.revokeObjectURL(url);\n}\n\nexport function exportPathway(pathway: Pathway): string {\n  const elm: ElmLibrary = {\n    library: {\n      identifier: {\n        id: pathway.id,\n        version: '1.0.0'\n      },\n      schemaIdentifier: {\n        id: 'urn:hl7-org:elm',\n        version: 'r1'\n      },\n      usings: {\n        def: [\n          {\n            localIdentifier: 'System',\n            uri: 'urn:hl7-org:elm-types:r1'\n          },\n          {\n            localId: '1',\n            locator: '3:1-3:26',\n            localIdentifier: 'FHIR',\n            uri: 'http://hl7.org/fhir',\n            version: '4.0.0'\n          }\n        ]\n      },\n      statements: {\n        def: [\n          {\n            locator: '13:1-13:15',\n            name: 'Patient',\n            context: 'Patient',\n            expression: {\n              type: 'SingletonFrom',\n              operand: {\n                locator: '13:1-13:15',\n                dataType: '{http://hl7.org/fhir}Patient',\n                type: 'Retrieve'\n              }\n            }\n          }\n        ]\n      },\n      includes: { def: [] },\n      valueSets: { def: [] },\n      codes: { def: [] },\n      codeSystems: { def: [] }\n    }\n  };\n\n  const pathwayToExport: Pathway = {\n    ...pathway,\n    // Strip id from each criteria\n    criteria: pathway.criteria.map((criteria: Criteria) => ({ ...criteria, id: undefined })),\n    states: { ...pathway.states }\n  };\n\n  Object.keys(pathwayToExport.states).forEach((stateName: string) => {\n    const state = pathway.states[stateName];\n    if ('elm' in state && state.elm && state.key) {\n      mergeElm(elm, state.elm);\n      const elmStatement = getElmStatement(state.elm);\n      elmStatement.name = state.key;\n      elm.library.statements.def.push(elmStatement);\n    }\n\n    pathwayToExport.states[stateName] = {\n      ...pathwayToExport.states[stateName],\n      // Strip key from each state\n      key: undefined,\n      elm: undefined,\n      // Strip id from each state.transition\n      transitions: state.transitions.map((transition: Transition) => {\n        if (transition.condition?.elm) {\n          // Add tranistion.condition.elm to elm\n          mergeElm(elm, transition.condition.elm);\n          const elmStatement = getElmStatement(transition.condition.elm);\n          elmStatement.name = transition.condition.description;\n          elm.library.statements.def.push(elmStatement);\n        }\n        return {\n          ...transition,\n          id: undefined,\n          condition: transition.condition ? { ...transition.condition, elm: undefined } : undefined\n        };\n      }),\n      // Strip id from each state.action\n      action:\n        (state as GuidanceState).action == null\n          ? undefined\n          : (state as GuidanceState).action.map((action: Action) => ({\n              ...action,\n              id: undefined\n            }))\n    };\n  });\n\n  setNavigationalElm(pathwayToExport, elm);\n\n  return JSON.stringify(pathwayToExport, undefined, 2);\n}\n\nfunction mergeElm(elm: ElmLibrary, additionalElm: ElmLibrary): void {\n  // Merge usings\n  additionalElm.library.usings?.def.forEach(using => {\n    // Check if it is in ELM\n    if (!elm.library.usings?.def.find(def => def.uri === using.uri))\n      elm.library.usings?.def.push(using);\n  });\n\n  // Merge includes\n  additionalElm.library.includes?.def.forEach(include => {\n    if (!elm.library.includes?.def.find(def => def.path === include.path))\n      elm.library.includes?.def.push(include);\n  });\n\n  // Merge valueSets\n  additionalElm.library.valueSets?.def.forEach(valueSet => {\n    if (!elm.library.valueSets?.def.find(def => def.id === valueSet.id))\n      elm.library.valueSets?.def.push(valueSet);\n  });\n  // Merge codes\n  additionalElm.library.codes?.def.forEach(code => {\n    if (!elm.library.codes?.def.find(def => def.name === code.name))\n      elm.library.codes?.def.push(code);\n  });\n  // Merge codesystems\n  additionalElm.library.codeSystems?.def.forEach(codesystem => {\n    if (!elm.library.codeSystems?.def.find(def => def.name === codesystem.name))\n      elm.library.codeSystems?.def.push(codesystem);\n  });\n\n  // TODO: merge concepts\n}\n\nfunction getElmStatement(elm: ElmLibrary): ElmStatement {\n  const defaultStatementNames = [\n    'Patient',\n    'MeetsInclusionCriteria',\n    'InPopulation',\n    'Recommendation',\n    'Rationale',\n    'Errors'\n  ];\n  const elmStatement = elm.library.statements.def.find(\n    def => !defaultStatementNames.includes(def.name)\n  );\n\n  // elmStatement type is ElmStatement | undefined but criteria\n  // provider validates such a statement exists in the elm\n  return elmStatement as ElmStatement;\n}\n\n// TODO: possibly add more criteria methods\nexport function addCriteria(\n  pathway: Pathway,\n  elementName: string,\n  expected: string,\n  cql: string\n): string {\n  const id = shortid.generate();\n  const criteria: Criteria = {\n    id: id,\n    elementName: elementName,\n    expected: expected,\n    cql: cql\n  };\n  pathway.criteria.push(criteria);\n\n  return id;\n}\n\nexport function setNavigationalElm(pathway: Pathway, elm: object): void {\n  if (!pathway.elm) pathway.elm = {};\n  pathway.elm.navigational = elm;\n}\n\nexport function setCriteriaElm(pathway: Pathway, elm: object): void {\n  if (!pathway.elm) pathway.elm = {};\n  pathway.elm.criteria = elm;\n}\n\nexport function createState(key?: string): State {\n  if (!key) key = shortid.generate();\n  const state: State = {\n    key,\n    label: 'New Node',\n    transitions: [],\n    nodeTypeIsUndefined: true\n  };\n\n  return state;\n}\n\nexport function addState(pathway: Pathway, state: State): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [state.key as string]: state\n    }\n  };\n}\n\nexport function addGuidanceState(pathway: Pathway): Pathway {\n  const state = createState();\n  const newPathway = addState(pathway, state);\n\n  return makeStateGuidance(newPathway, state.key as string);\n}\n\nexport function setStateLabel(pathway: Pathway, key: string, label: string): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        label\n      }\n    }\n  };\n}\n\nexport function setStateNodeType(pathway: Pathway, stateKey: string, nodeType: string): Pathway {\n  switch (nodeType) {\n    case 'action':\n      return makeStateGuidance(pathway, stateKey);\n    case 'branch':\n      return makeStateBranch(pathway, stateKey);\n    default:\n      return pathway;\n  }\n}\n\nexport function setStateCriteriaSource(\n  pathway: Pathway,\n  key: string,\n  criteriaSource: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        criteriaSource\n      }\n    }\n  };\n}\n\nexport function setStateAction(pathway: Pathway, key: string, action: Action[]): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        action\n      }\n    }\n  };\n}\n\nexport function setStateMcodeCriteria(\n  pathway: Pathway,\n  key: string,\n  mcodeCriteria: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        mcodeCriteria\n      }\n    }\n  };\n}\n\nexport function setStateOtherCriteria(\n  pathway: Pathway,\n  key: string,\n  otherCriteria: string\n): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [key]: {\n        ...pathway.states[key],\n        otherCriteria\n      }\n    }\n  };\n}\n\nexport function addTransition(\n  pathway: Pathway,\n  startStateKey: string,\n  endStateKey: string\n): Pathway {\n  const transition: Transition = {\n    id: shortid.generate(),\n    transition: endStateKey\n  };\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [startStateKey]: {\n        ...pathway.states[startStateKey],\n        transitions: [...pathway.states[startStateKey].transitions, transition]\n      }\n    }\n  };\n}\n\nexport function setTransitionCondition(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string,\n  elm: ElmLibrary,\n  criteriaLabel?: string\n): Pathway {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  const cql = criteriaLabel ? criteriaLabel : getElmStatement(elm).name;\n\n  if (foundTransition)\n    foundTransition.condition = {\n      description: description,\n      cql: cql,\n      elm: elm\n    };\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [startNodeKey]: {\n        ...pathway.states[startNodeKey]\n      }\n    }\n  };\n}\n\nexport function setGuidanceStateElm(pathway: Pathway, stateKey: string, elm: ElmLibrary): Pathway {\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...pathway.states[stateKey],\n        elm: elm,\n        cql: getElmStatement(elm).name\n      }\n    }\n  };\n}\n\n// TODO: possibly add more action methods\nexport function addAction(\n  pathway: Pathway,\n  key: string,\n  type: string,\n  description: string,\n  resource: MedicationRequest | ServiceRequest\n): string {\n  const id = shortid.generate();\n  const action = {\n    id: id,\n    type: type,\n    description: description,\n    resource: resource\n  };\n  (pathway.states[key] as GuidanceState).action.push(action);\n  return id;\n}\n\nexport function getNodeType(pathway: Pathway, key: string | undefined): string {\n  if (!key) {\n    return 'null';\n  }\n  const state = pathway.states[key];\n  if (state.nodeTypeIsUndefined) {\n    return 'null';\n  } else if (!(state as GuidanceState).action && key !== 'Start') {\n    return 'branch';\n  } else {\n    return 'action';\n  }\n}\n\n/*\nSet Element Functions\n*/\nexport function setPathwayName(pathway: Pathway, name: string): void {\n  pathway.name = name;\n}\n\nexport function setPathwayDescription(pathway: Pathway, description: string): void {\n  pathway.description = description;\n}\n\nexport function setLibrary(pathway: Pathway, library: string): void {\n  pathway.library = library;\n}\n\nexport function setTransition(\n  pathway: Pathway,\n  startStateKey: string,\n  endStateKey: string,\n  transitionId: string\n): void {\n  const transition = pathway.states[startStateKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n  if (transition) transition.transition = endStateKey;\n}\n\nexport function setTransitionConditionDescription(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  description: string\n): Pathway {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition?.condition) {\n    foundTransition.condition.description = description;\n  } else if (foundTransition) {\n    foundTransition.condition = {\n      description: description,\n      cql: ''\n    };\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [startNodeKey]: {\n        ...pathway.states[startNodeKey]\n      }\n    }\n  };\n}\n\nexport function setTransitionConditionElm(\n  pathway: Pathway,\n  startNodeKey: string,\n  transitionId: string,\n  elm: ElmLibrary\n): void {\n  const foundTransition = pathway.states[startNodeKey]?.transitions?.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n\n  if (foundTransition?.condition) {\n    foundTransition.condition.elm = elm;\n    foundTransition.condition.cql = getElmStatement(elm).name;\n  }\n}\n\nexport function setActionType(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  type: string\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.type = type;\n  }\n}\n\nexport function setActionDescription(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  description: string\n): void {\n  const state = (pathway.states[stateKey] as GuidanceState).action;\n\n  if (state) {\n    const action = state.find((action: Action) => action.id === actionId);\n    if (action) {\n      action.description = description;\n    }\n  }\n}\n\nexport function setActionResource(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  resource: MedicationRequest | ServiceRequest\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    if (action) action.resource = resource;\n  }\n}\n\nexport function setActionResourceDisplay(\n  pathway: Pathway,\n  stateKey: string,\n  actionId: string,\n  display: string\n): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const action = (pathway.states[stateKey] as GuidanceState).action.find(\n      (action: Action) => action.id === actionId\n    );\n    const resource = action?.resource;\n    if (\n      resource?.resourceType === 'MedicationRequest' &&\n      resource.medicationCodeableConcept.coding.length\n    )\n      resource.medicationCodeableConcept.coding[0].display = display;\n    else if (resource?.resourceType === 'ServiceRequest' && resource.code.coding.length)\n      resource.code.coding[0].display = display;\n  }\n}\n\nexport function makeStateGuidance(pathway: Pathway, stateKey: string): Pathway {\n  const state = pathway.states[stateKey] as GuidanceState;\n\n  if (state.cql !== undefined && state.action !== undefined) {\n    return pathway;\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...state,\n        cql: '',\n        action: [],\n        nodeTypeIsUndefined: undefined\n      }\n    }\n  };\n}\n\nexport function makeStateBranch(pathway: Pathway, stateKey: string): Pathway {\n  const state = pathway.states[stateKey] as GuidanceState;\n\n  if (\n    state.cql === undefined &&\n    state.elm === undefined &&\n    state.action === undefined &&\n    state.nodeTypeIsUndefined === undefined\n  ) {\n    return pathway;\n  }\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...state,\n        cql: undefined,\n        elm: undefined,\n        action: undefined,\n        nodeTypeIsUndefined: undefined\n      }\n    }\n  };\n}\n\nexport function createCQL(action: Action, stateKey: string): string {\n  const resource = action.resource;\n  // CQl identifier cannot start with a number or contain '-'\n  const cqlId = `cql${shortid.generate().replace(/-/g, 'a')}`;\n  let cql = `library ${cqlId} version '1'\\nusing FHIR version '4.0.0'\\n`;\n\n  const codesystemStatement = (system: string): string => `codesystem \"${system}\": '${system}'\\n`;\n\n  const returnStatement = (resourceType: string): string =>\n    `return Tuple{ resourceType: '${resourceType}', id: R.id.value, status: R.status.value}`;\n\n  const retrieveStatement = (resourceType: string): string => `[${resourceType}: \"${cqlId} code\"]`;\n\n  const defineStatement = (): string => `define \"${stateKey}\":`;\n\n  if (resource.resourceType === 'MedicationRequest') {\n    const coding = resource.medicationCodeableConcept.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      ${retrieveStatement('MedicationRequest')} R ${returnStatement('MedicationRequest')}`;\n  } else if (resource.resourceType === 'ServiceRequest') {\n    const coding = resource.code.coding[0];\n\n    cql += codesystemStatement(coding.system);\n\n    // eslint-disable-next-line\n    cql += `code \"${cqlId} code\": '${escape(coding.code)}' from \"${coding.system}\" display '${\n      coding.display\n    }'\\n`;\n    cql += `${defineStatement()}\n      if exists ${retrieveStatement('Procedure')} \n      then ${retrieveStatement('Procedure')} R ${returnStatement('Procedure')} \n      else ${retrieveStatement('ServiceRequest')} R ${returnStatement('ServiceRequest')}`;\n  } else if (resource.resourceType === 'CarePlan') {\n    cql += `${defineStatement()}\n      [CarePlan] R where R.title.value = '${escape(resource.title)}' ${returnStatement(\n      'CarePlan'\n    )}`;\n  } else {\n    console.error(\n      'Auto generating CQL for action - unsupported resource type: ' + resource.resourceType\n    );\n  }\n\n  return cql;\n}\n\n/*\nRemove Element Function\n*/\nexport function removePathwayDescription(pathway: Pathway): void {\n  delete pathway.description;\n}\n\nexport function removeCriteria(pathway: Pathway, id: string): void {\n  const criteria = pathway.criteria.filter((criteria: Criteria) => criteria.id !== id);\n  pathway.criteria = criteria;\n}\n\nexport function removeNavigationalElm(pathway: Pathway): void {\n  delete pathway.elm?.navigational;\n}\n\nexport function removeCriteriaElm(pathway: Pathway): void {\n  delete pathway.elm?.criteria;\n}\n\nexport function removeState(pathway: Pathway, key: string): void {\n  delete pathway.states[key];\n\n  Object.keys(pathway.states).forEach((stateName: string) => {\n    const state = pathway.states[stateName];\n    state.transitions.forEach((transition: Transition) => {\n      if (transition.transition === key)\n        removeTransition(pathway, stateName, transition.id ?? '-1');\n    });\n  });\n}\n\nexport function removeTransitionCondition(\n  pathway: Pathway,\n  stateKey: string,\n  transitionId: string\n): Pathway {\n  const transition = pathway.states[stateKey].transitions.find(\n    (transition: Transition) => transition.id === transitionId\n  );\n  if (transition) delete transition.condition;\n\n  return {\n    ...pathway,\n    states: {\n      ...pathway.states,\n      [stateKey]: {\n        ...pathway.states[stateKey]\n      }\n    }\n  };\n}\n\nexport function removeTransition(pathway: Pathway, stateKey: string, transitionId: string): void {\n  const transitions = pathway.states[stateKey].transitions.filter(\n    (transition: Transition) => transition.id !== transitionId\n  );\n  pathway.states[stateKey].transitions = transitions;\n}\n\nexport function removeAction(pathway: Pathway, stateKey: string, actionId: string): void {\n  if ((pathway.states[stateKey] as GuidanceState).action) {\n    const actions = (pathway.states[stateKey] as GuidanceState).action.filter(\n      (action: Action) => action.id !== actionId\n    );\n    (pathway.states[stateKey] as GuidanceState).action = actions;\n  }\n}\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '2em',\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      height: '6em',\n      justifyContent: 'space-between'\n    },\n    backButton: {\n      height: '45px',\n      width: '45px'\n    },\n    navigationIcons: {\n      fontSize: '20px',\n      color: theme.palette.grey['800'],\n      cursor: 'pointer'\n    },\n    pathwayName: {\n      fontSize: '1.4em',\n      marginLeft: '1.5em'\n    }\n  }),\n  { name: 'Navigation' }\n);\n","import React, { FC, useCallback, useState, MouseEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\n\nimport { Pathway } from 'pathways-model';\nimport { downloadPathway } from 'utils/builder';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface Props {\n  pathway: Pathway;\n}\n\nconst Navigation: FC<Props> = ({ pathway }) => {\n  const { updateBuildCriteriaNodeId } = useCriteriaContext();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const styles = useStyles();\n  const history = useHistory();\n\n  const openMenu = useCallback((event: MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeMenu = useCallback((): void => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleGoBack = useCallback((): void => {\n    updateBuildCriteriaNodeId('');\n    history.push('/');\n  }, [history, updateBuildCriteriaNodeId]);\n\n  return (\n    <nav className={styles.root}>\n      <div>\n        <IconButton className={styles.backButton} onClick={handleGoBack} aria-label=\"go back\">\n          <FontAwesomeIcon icon={faChevronLeft} className={styles.navigationIcons} />\n        </IconButton>\n\n        <span className={styles.pathwayName}>{pathway?.name}</span>\n      </div>\n      <IconButton onClick={openMenu} aria-controls=\"pathway-options-menu\" aria-haspopup=\"true\">\n        <FontAwesomeIcon icon={faEllipsisH} className={styles.navigationIcons} />\n      </IconButton>\n      <Menu\n        id=\"pathway-options-menu\"\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n      >\n        <MenuItem\n          onClick={(): void => {\n            downloadPathway(pathway);\n            closeMenu();\n          }}\n        >\n          Export Pathway\n        </MenuItem>\n      </Menu>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, {\n  FC,\n  memo,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode\n} from 'react';\nimport { Pathway } from 'pathways-model';\nimport { ServiceLoaded } from 'pathways-objects';\nimport config from 'utils/ConfigManager';\nimport useGetService from './Services';\n\ninterface PathwayContextInterface {\n  pathways: Pathway[];\n  status: string;\n  addPathway: (pathway: Pathway) => void;\n  deletePathway: (id: string) => void;\n  updatePathway: (pathway: Pathway) => void;\n}\n\nexport const PathwayContext = createContext<PathwayContextInterface>({} as PathwayContextInterface);\n\ninterface PathwayProviderProps {\n  children: ReactNode;\n}\n\nexport const PathwayProvider: FC<PathwayProviderProps> = memo(({ children }) => {\n  const [pathways, setPathways] = useState<Pathway[]>([]);\n  const service = useGetService<Pathway>(config.get('demoPathwaysService'));\n  const servicePayload = (service as ServiceLoaded<Pathway[]>).payload;\n\n  const addPathway = useCallback((pathway: Pathway) => {\n    setPathways(currentPathways => [...currentPathways, pathway]);\n  }, []);\n\n  const deletePathway = useCallback((id: string) => {\n    setPathways(currentPathways => currentPathways.filter(pathway => pathway.id !== id));\n  }, []);\n\n  const updatePathway = useCallback(\n    (newPathway: Pathway) => {\n      const index = pathways.findIndex(pathway => pathway.id === newPathway.id);\n      setPathways(currentPathways => [\n        ...currentPathways.slice(0, index),\n        newPathway,\n        ...currentPathways.slice(index + 1)\n      ]);\n    },\n    [pathways]\n  );\n\n  useEffect(() => {\n    if (servicePayload) setPathways(servicePayload);\n  }, [servicePayload]);\n\n  switch (service.status) {\n    case 'error':\n      return <div>Error loading pathways</div>;\n\n    default:\n      return (\n        <PathwayContext.Provider\n          value={{\n            pathways,\n            addPathway,\n            deletePathway,\n            updatePathway,\n            status: service.status\n          }}\n        >\n          {children}\n        </PathwayContext.Provider>\n      );\n  }\n});\n\nexport const usePathwayContext = (): PathwayContextInterface => useContext(PathwayContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding,\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.grey['800'],\n      width: '33%',\n      minWidth: '500px',\n      overflowY: 'scroll',\n      float: 'left'\n    },\n    formControl: {\n      margin: theme.spacing(1, 0),\n      minWidth: 375\n    },\n    divider: {\n      width: '100%'\n    },\n    headerLabelStart: {\n      cursor: 'default'\n    },\n    displayText: {\n      margin: '0 0 5px 0',\n      fontWeight: 900,\n      fontSize: '1em'\n    },\n    sidebarHeader: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    sidebarHeaderGroup: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    sidebarHeaderButton: {\n      height: '45px',\n      width: '45px',\n      color: theme.palette.text.primary\n    },\n    headerLabelGroup: {\n      display: 'flex',\n      cursor: 'pointer',\n      height: '60px'\n    },\n    headerLabel: {\n      display: 'flex',\n      alignItems: 'center',\n      fontSize: '1.6em',\n      fontWeight: 700,\n      margin: '0 5px'\n    },\n    headerLabelText: {\n      marginBottom: '5px'\n    },\n    editIcon: {\n      fontSize: '0.6em',\n      marginLeft: '10px'\n    },\n    sidebarButtonGroup: {\n      display: 'flex',\n      margin: '10px 0'\n    },\n    sidebarButton: {\n      minWidth: 180,\n      marginRight: '20px'\n    },\n    sidebarButtonText: {\n      fontStyle: 'italic'\n    },\n    outlinedDiv: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      '& div': {\n        width: '100%'\n      }\n    },\n    outlinedDivError: {\n      borderColor: `${theme.palette.error.main} !important`,\n      '&:hover': {\n        borderColor: `${theme.palette.error.main} !important`\n      }\n    },\n    toggleSidebar: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      float: 'left',\n      width: '50px',\n      minWidth: '50px',\n      height: '50px',\n      fontSize: '2em',\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.primary,\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    },\n    cancelButton: {\n      alignSelf: 'flex-end',\n      marginTop: '5px',\n      padding: '5px 15px',\n      fontSize: '1em'\n    },\n    buildCriteriaContainer: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    saveButton: {\n      marginLeft: '1em'\n    }\n  }),\n  { name: 'Sidebar' }\n);\n","import React, { FC, memo, useCallback, useState, useEffect, useRef, RefObject } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarHeader, BranchNode, ActionNode, NullNode } from '.';\nimport { State, GuidanceState, BranchState, Pathway } from 'pathways-model';\nimport { setStateNodeType, addTransition, createState, addState, getNodeType } from 'utils/builder';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport useStyles from './styles';\n\ninterface SidebarProps {\n  pathway: Pathway;\n  headerElement: RefObject<HTMLDivElement>;\n  currentNode: GuidanceState | BranchState | State;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ pathway, headerElement, currentNode }) => {\n  const { updatePathway } = usePathwayContext();\n  const [isExpanded, setIsExpanded] = useState<boolean>(true);\n  const styles = useStyles();\n  const history = useHistory();\n  const sidebarContainerElement = useRef<HTMLDivElement>(null);\n  const currentNodeKey = currentNode?.key;\n\n  const toggleSidebar = useCallback((): void => {\n    setIsExpanded(!isExpanded);\n  }, [isExpanded]);\n\n  const changeNodeType = useCallback(\n    (nodeType: string): void => {\n      if (currentNodeKey) updatePathway(setStateNodeType(pathway, currentNodeKey, nodeType));\n    },\n    [pathway, updatePathway, currentNodeKey]\n  );\n\n  const redirectToNode = useCallback(\n    nodeKey => {\n      const url = `/builder/${encodeURIComponent(pathway.id)}/node/${encodeURIComponent(nodeKey)}`;\n      if (url !== history.location.pathname) {\n        history.push(url);\n      }\n    },\n    [history, pathway.id]\n  );\n\n  const addNode = useCallback(\n    (nodeType: string): void => {\n      if (!currentNodeKey) return;\n\n      const newState = createState();\n      let newPathway = addState(pathway, newState);\n      newPathway = addTransition(newPathway, currentNodeKey, newState.key as string);\n      newPathway = setStateNodeType(newPathway, newState.key as string, nodeType);\n      updatePathway(newPathway);\n      redirectToNode(newState.key);\n    },\n    [pathway, updatePathway, currentNodeKey, redirectToNode]\n  );\n\n  // Set the height of the sidebar container\n  useEffect(() => {\n    if (sidebarContainerElement?.current && headerElement?.current)\n      sidebarContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [isExpanded, headerElement]);\n\n  const nodeType = getNodeType(pathway, currentNodeKey);\n  return (\n    <>\n      {isExpanded && (\n        <div className={styles.root} ref={sidebarContainerElement}>\n          <SidebarHeader pathway={pathway} currentNode={currentNode} isTransition={false} />\n\n          <hr className={styles.divider} />\n\n          {nodeType === 'null' && (\n            <NullNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n              addNode={addNode}\n            />\n          )}\n\n          {nodeType === 'action' && (\n            <ActionNode\n              pathway={pathway}\n              currentNode={currentNode as GuidanceState}\n              changeNodeType={changeNodeType}\n              addNode={addNode}\n            />\n          )}\n\n          {nodeType === 'branch' && (\n            <BranchNode\n              pathway={pathway}\n              currentNode={currentNode}\n              changeNodeType={changeNodeType}\n            />\n          )}\n        </div>\n      )}\n\n      <div className={styles.toggleSidebar} onClick={toggleSidebar}>\n        <FontAwesomeIcon icon={isExpanded ? faChevronLeft : faChevronRight} />\n      </div>\n    </>\n  );\n};\n\nexport default memo(Sidebar);\n","import React, { FC, memo, useCallback, useRef, useState, KeyboardEvent, FocusEvent } from 'react';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faEllipsisH,\n  faChevronLeft,\n  faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { IconButton, FormControl, Input } from '@material-ui/core';\n\nimport { Pathway, State } from 'pathways-model';\nimport { setStateLabel } from 'utils/builder';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport useStyles from './styles';\n\ninterface SidebarHeaderProps {\n  pathway: Pathway;\n  currentNode: State;\n  isTransition: boolean;\n}\n\nconst SidebarHeader: FC<SidebarHeaderProps> = ({ pathway, currentNode, isTransition }) => {\n  const { updatePathway } = usePathwayContext();\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const currentNodeKey = currentNode?.key;\n  const currentNodeLabel = currentNode?.label || '';\n  const styles = useStyles();\n\n  const goToParentNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const goToNode = useCallback(() => {\n    // TODO\n  }, []);\n\n  const openNodeOptions = useCallback(() => {\n    // TODO\n  }, []);\n\n  const changeNodeLabel = useCallback(() => {\n    const label = inputRef.current?.value ?? '';\n    if (currentNodeKey) updatePathway(setStateLabel(pathway, currentNodeKey, label));\n    setShowInput(false);\n  }, [pathway, updatePathway, currentNodeKey]);\n\n  const handleShowInput = useCallback(() => {\n    setShowInput(true);\n  }, []);\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>): void => {\n      if (event.key === 'Enter') changeNodeLabel();\n    },\n    [changeNodeLabel]\n  );\n\n  return (\n    <div className={styles.sidebarHeader}>\n      <div className={styles.sidebarHeaderGroup}>\n        {currentNodeKey !== 'Start' && !isTransition && (\n          <IconButton\n            className={styles.sidebarHeaderButton}\n            onClick={goToParentNode}\n            aria-label=\"go to parent node\"\n          >\n            <FontAwesomeIcon icon={faChevronLeft} />\n          </IconButton>\n        )}\n\n        <div className={styles.headerLabelGroup} onClick={handleShowInput}>\n          {showInput && currentNodeKey !== 'Start' ? (\n            <FormControl className={styles.formControl} fullWidth>\n              <Input\n                className={styles.headerLabel}\n                type=\"text\"\n                inputRef={inputRef}\n                onBlur={changeNodeLabel}\n                onKeyPress={handleKeyPress}\n                defaultValue={currentNodeLabel}\n                autoFocus\n                onFocus={(event: FocusEvent<HTMLInputElement>): void => event.target.select()}\n              />\n            </FormControl>\n          ) : (\n            <div\n              className={clsx(\n                styles.headerLabel,\n                styles.headerLabelText,\n                currentNodeKey === 'Start' && styles.headerLabelStart\n              )}\n            >\n              {currentNodeLabel}\n              {currentNodeKey !== 'Start' && (\n                <FontAwesomeIcon className={styles.editIcon} icon={faEdit} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.sidebarHeaderGroup}>\n        <IconButton\n          className={styles.sidebarHeaderButton}\n          onClick={isTransition ? goToNode : openNodeOptions}\n          aria-label={isTransition ? 'go to transition node' : 'open node options'}\n        >\n          <FontAwesomeIcon icon={isTransition ? faChevronRight : faEllipsisH} />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SidebarHeader);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\n\ninterface SidebarButtonProps {\n  buttonName: string;\n  buttonIcon: ReactNode;\n  buttonText: string;\n  onClick?: () => void;\n}\n\nconst SidebarButton: FC<SidebarButtonProps> = ({ buttonName, buttonIcon, buttonText, onClick }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.sidebarButtonGroup}>\n      <Button\n        className={styles.sidebarButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={buttonIcon}\n        onClick={onClick}\n      >\n        {buttonName}\n      </Button>\n\n      <div className={styles.sidebarButtonText}>{buttonText}</div>\n    </div>\n  );\n};\n\nexport default memo(SidebarButton);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { InputLabel, FormControl, Select, MenuItem } from '@material-ui/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface DropDownProps {\n  id: string;\n  label: string;\n  options: Array<Option>;\n  value?: string;\n  onChange: Function | null;\n}\n\nconst DropDown: FC<DropDownProps> = ({ id, label, options, value, onChange }: DropDownProps) => {\n  const handleSetSelected = useCallback(\n    (event: ChangeEvent<{ value: unknown }>): void => {\n      if (onChange) onChange(event);\n    },\n    [onChange]\n  );\n\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel id={id} htmlFor={`${id}-select`}>\n        {label}\n      </InputLabel>\n\n      <Select\n        id={`${id}-select`}\n        value={value || ''}\n        onChange={handleSetSelected}\n        label={label}\n        error={value == null || value === ''}\n        MenuProps={{\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          }\n        }}\n        displayEmpty\n      >\n        {options.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(DropDown);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { SidebarButton, BranchTransition } from '.';\nimport DropDown from 'components/elements/DropDown';\nimport { addTransition, createState, addState } from 'utils/builder';\nimport { Pathway, State } from 'pathways-model';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport useStyles from './styles';\n\nconst nodeTypeOptions = [\n  { value: 'action', label: 'Action' },\n  { value: 'branch', label: 'Branch' }\n];\n\ninterface BranchNodeProps {\n  pathway: Pathway;\n  currentNode: State;\n  changeNodeType: (event: string) => void;\n}\n\nconst BranchNode: FC<BranchNodeProps> = ({ pathway, currentNode, changeNodeType }) => {\n  const { updatePathway } = usePathwayContext();\n  const currentNodeKey = currentNode?.key;\n  const styles = useStyles();\n\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const handleAddTransition = useCallback((): void => {\n    const newState = createState();\n\n    const newPathway = addState(pathway, newState);\n    updatePathway(addTransition(newPathway, currentNodeKey || '', newState.key as string));\n  }, [pathway, updatePathway, currentNodeKey]);\n\n  return (\n    <>\n      <DropDown\n        id=\"nodeType\"\n        label=\"Node Type\"\n        options={nodeTypeOptions}\n        onChange={selectNodeType}\n        value=\"branch\"\n      />\n      {currentNode.transitions.map(transition => {\n        return (\n          <BranchTransition\n            key={transition.id}\n            pathway={pathway}\n            currentNodeKey={currentNodeKey || ''}\n            transition={transition}\n          />\n        );\n      })}\n\n      <hr className={styles.divider} />\n\n      <SidebarButton\n        buttonName=\"Add Transition\"\n        buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n        buttonText=\"Add transition logic for a clinical decision within a workflow.\"\n        onClick={handleAddTransition}\n      />\n    </>\n  );\n};\n\nexport default memo(BranchNode);\n","// External CQL -> ELM service\nimport { CqlObject } from './cql-extractor';\nimport config from 'utils/ConfigManager';\nimport {\n  extractJSONContent,\n  extractMultipartBoundary,\n  extractMultipartFileName\n} from 'utils/regexes';\n\nconst url = config.get('cqlToElmWebserviceUrl');\n\nexport interface ElmObject {\n  main: object;\n  libraries: {\n    [key: string]: object;\n  };\n}\n\n/**\n * Function that requests web_service to convert the cql into elm.\n * @param cql - cql file that is the input to the function.\n * @return The resulting elm translation of the cql file.\n */\nexport default function convertCQL(cql: CqlObject): Promise<ElmObject> {\n  // Connect to web service\n  const formdata = new FormData();\n  Object.keys(cql.libraries).forEach((key, i) => {\n    formdata.append(`${key}`, cql.libraries[key]);\n  });\n\n  formdata.append('main', cql.main);\n  return fetch(url, {\n    method: 'POST',\n    body: formdata\n  }).then(elm => {\n    const header = elm.headers.get('content-type');\n    let boundary = '';\n    if (header) {\n      // sample header= \"multipart/form-data;boundary=Boundary_1\"\n      const result = extractMultipartBoundary.exec(header);\n      boundary = result ? `--${result[1]}` : '';\n    }\n    const obj: ElmObject = { main: {}, libraries: {} };\n    return elm.text().then(text => {\n      const elms = text.split(boundary).reduce((oldArray, line, i) => {\n        const body = extractJSONContent.exec(line);\n        if (body) {\n          const elmName = extractMultipartFileName.exec(line);\n          if (elmName && elmName[1] === 'main') {\n            oldArray[elmName[1]] = JSON.parse(body[1]);\n          } else if (elmName) {\n            oldArray.libraries[elmName[1]] = JSON.parse(body[1]);\n          }\n        }\n        return oldArray;\n      }, obj);\n\n      return elms;\n    });\n  });\n}\n\nexport function convertBasicCQL(cql: string): Promise<object> {\n  // Connect to web service\n\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/cql',\n      Accept: 'application/elm+json'\n    },\n    body: cql\n  }).then(elm => elm.json());\n}\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\nimport { SidebarButton } from '.';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  setStateAction,\n  createCQL,\n  setActionDescription,\n  setGuidanceStateElm\n} from 'utils/builder';\nimport DropDown from 'components/elements/DropDown';\nimport { Pathway, GuidanceState, Action } from 'pathways-model';\nimport { ElmLibrary } from 'elm-model';\nimport useStyles from './styles';\nimport shortid from 'shortid';\nimport { TextField } from '@material-ui/core';\nimport { convertBasicCQL } from 'engine/cql-to-elm';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nconst nodeTypeOptions = [\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\nconst actionTypeOptions = [\n  { label: 'Medication', value: 'MedicationRequest' },\n  { label: 'Procedure', value: 'ServiceRequest' },\n  { label: 'Regimen', value: 'CarePlan' }\n];\n\nconst codeSystemOptions = [\n  { label: 'ICD-9-CM', value: 'http://hl7.org/fhir/sid/icd-9-cm' },\n  { label: 'ICD-10-CM', value: 'http://hl7.org/fhir/sid/icd-10-cm' },\n  { label: 'LOINC', value: 'http://loinc.org' },\n  { label: 'NCI', value: 'http://ncimeta.nci.nih.gov' },\n  { label: 'RXNORM', value: 'http://www.nlm.nih.gov/research/umls/rxnorm' },\n  { label: 'SNOMED', value: 'http://snomed.info/sct' }\n];\n\ninterface ActionNodeProps {\n  pathway: Pathway;\n  currentNode: GuidanceState;\n  changeNodeType: (event: string) => void;\n  addNode: (event: string) => void;\n}\n\nconst ActionNode: FC<ActionNodeProps> = ({ pathway, currentNode, changeNodeType, addNode }) => {\n  const { updatePathway } = usePathwayContext();\n  const styles = useStyles();\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  const addActionCQL = useCallback(\n    (action: Action, currentNodeKey: string): void => {\n      const cql = createCQL(action, currentNodeKey);\n      convertBasicCQL(cql).then(elm => {\n        updatePathway(setGuidanceStateElm(pathway, currentNodeKey, elm as ElmLibrary));\n      });\n    },\n    [pathway, updatePathway]\n  );\n\n  const changeCode = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const code = event?.target.value || '';\n      const action: Action = currentNode.action[0];\n      if (action.resource.medicationCodeableConcept) {\n        action.resource.medicationCodeableConcept.coding[0].code = code;\n      } else {\n        action.resource.code.coding[0].code = code;\n      }\n      resetDisplay(action);\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const changeDescription = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const description = event?.target.value || '';\n      const actionId = currentNode.action[0].id; // TODO: change this for supporting multiple action\n      if (actionId) {\n        setActionDescription(pathway, currentNode.key, actionId, description);\n        updatePathway(setStateAction(pathway, currentNode.key, currentNode.action));\n      }\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const changeTitle = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const title = event?.target.value || '';\n      const action = currentNode.action[0];\n      action.resource.title = title;\n      resetDisplay(action);\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n\n      addActionCQL(action, currentNode.key);\n    },\n    [currentNode, pathway, updatePathway, addActionCQL]\n  );\n\n  const selectActionType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n      const value = event?.target.value || '';\n      const actionType = actionTypeOptions.find(option => {\n        return option.value === value;\n      });\n      let action: Action;\n      if (actionType?.value === 'CarePlan') {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            title: ''\n          }\n        };\n      } else if (actionType?.value === 'MedicationRequest') {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            medicationCodeableConcept: {\n              coding: [\n                {\n                  system: '',\n                  code: '',\n                  display: ''\n                }\n              ]\n            }\n          }\n        };\n      } else {\n        action = {\n          type: 'create',\n          description: '',\n          id: shortid.generate(),\n          resource: {\n            resourceType: actionType?.value,\n            code: {\n              coding: [\n                {\n                  system: '',\n                  code: '',\n                  display: ''\n                }\n              ]\n            }\n          }\n        };\n      }\n\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const selectCodeSystem = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNode.key) return;\n\n      const codeSystem = event?.target.value || '';\n      const action = currentNode.action[0];\n      if (action.resource.medicationCodeableConcept) {\n        action.resource.medicationCodeableConcept.coding[0].system = codeSystem;\n      } else {\n        action.resource.code.coding[0].system = codeSystem;\n      }\n      resetDisplay(action);\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n    },\n    [currentNode, pathway, updatePathway]\n  );\n\n  const validateFunction = (): void => {\n    if (currentNode.key && currentNode.action.length) {\n      const action = currentNode.action[0];\n      if (action.resource.medicationCodeableConcept) {\n        action.resource.medicationCodeableConcept.coding[0].display = 'Example display text';\n      } else if (action.resource.title) {\n        action.resource.description = 'Example CarePlan Text';\n      } else {\n        action.resource.code.coding[0].display = 'Example display text'; // TODO: actually validate\n      }\n      updatePathway(setStateAction(pathway, currentNode.key, [action]));\n\n      addActionCQL(action, currentNode.key);\n    } else {\n      console.error('No Actions -- Cannot Validate');\n    }\n  };\n\n  const resetDisplay = (action: Action): void => {\n    if (action.resource.medicationCodeableConcept) {\n      action.resource.medicationCodeableConcept.coding[0].display = '';\n    } else if (action.resource.resourceType === 'CarePlan') {\n      action.resource.description = '';\n    } else {\n      action.resource.code.coding[0].display = ''; // TODO: actually validate\n    }\n  };\n\n  const onEnter = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      validateFunction();\n    }\n  };\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode.key !== undefined && currentNode.key !== 'Start';\n\n  const action = currentNode.action;\n  const resource = action?.length > 0 && action[0].resource;\n  let system = '';\n  let code = '';\n  let display = '';\n  if (resource.resourceType === 'MedicationRequest' || resource.resourceType === 'ServiceRequest') {\n    system = resource.code\n      ? resource.code.coding[0].system\n      : resource.medicationCodeableConcept.coding[0].system;\n    code = resource.code\n      ? resource.code.coding[0].code\n      : resource.medicationCodeableConcept.coding[0].code;\n    display = resource.code\n      ? resource.code.coding[0].display\n      : resource.medicationCodeableConcept.coding[0].display;\n  } else {\n    display = resource.description;\n  }\n  // If the node does not have transitions it can be added to\n  const displayAddButtons = currentNode.key !== undefined && currentNode.transitions.length === 0;\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <>\n          <DropDown\n            id=\"nodeType\"\n            label=\"Node Type\"\n            options={nodeTypeOptions}\n            onChange={selectNodeType}\n            value=\"action\"\n          />\n          <DropDown\n            id=\"actionType\"\n            label=\"Action Type\"\n            options={actionTypeOptions}\n            onChange={selectActionType}\n            value={resource.resourceType}\n          />\n          {(resource.resourceType === 'MedicationRequest' ||\n            resource.resourceType === 'ServiceRequest') && (\n            <>\n              <DropDown\n                id=\"codeSystem\"\n                label=\"Code System\"\n                options={codeSystemOptions}\n                onChange={selectCodeSystem}\n                value={system}\n              />\n              {system && (\n                <TextField\n                  id=\"code-input\"\n                  label=\"Code\"\n                  value={code}\n                  onChange={changeCode}\n                  variant=\"outlined\"\n                  error={code === ''}\n                  inputProps={{ onKeyPress: onEnter }}\n                />\n              )}\n              {code && (\n                <>\n                  {display ? (\n                    <div className={styles.displayText}>\n                      <FontAwesomeIcon icon={faCheckCircle} /> {display}\n                    </div>\n                  ) : (\n                    <SidebarButton\n                      buttonName=\"Validate\"\n                      buttonIcon={<FontAwesomeIcon icon={faCheckCircle} />}\n                      buttonText={display || 'Check validation of the input system and code'}\n                      onClick={validateFunction}\n                    />\n                  )}\n\n                  <TextField\n                    id=\"description-input\"\n                    label=\"Description\"\n                    value={action[0].description || ''}\n                    onChange={changeDescription}\n                    variant=\"outlined\"\n                    error={action[0].description === ''}\n                  />\n                </>\n              )}\n            </>\n          )}\n\n          {resource.resourceType === 'CarePlan' && (\n            // design for careplan ?\n            <>\n              <TextField\n                id=\"title-input\"\n                label=\"Title\"\n                value={resource.title || ''}\n                onChange={changeTitle}\n                variant=\"outlined\"\n                error={resource.title == null}\n                inputProps={{ onKeyPress: onEnter }}\n              />\n              {resource.title && (\n                <TextField\n                  id=\"description-input\"\n                  label=\"Description\"\n                  value={action[0].description || ''}\n                  onChange={changeDescription}\n                  variant=\"outlined\"\n                  error={action[0].description === ''}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n      {displayAddButtons && (\n        <>\n          {changeNodeTypeEnabled && <hr className={styles.divider} />}\n          <SidebarButton\n            buttonName=\"Add Action Node\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"Any clinical or workflow step which is not a decision.\"\n            onClick={(): void => addNode('action')}\n          />\n\n          <SidebarButton\n            buttonName=\"Add Branch Node\"\n            buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n            buttonText=\"A logical branching point based on clinical or workflow criteria.\"\n            onClick={(): void => addNode('branch')}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(ActionNode);\n","import React, { FC, memo, useCallback, ChangeEvent } from 'react';\n\nimport DropDown from 'components/elements/DropDown';\nimport { Pathway, State } from 'pathways-model';\n\nconst nodeTypeOptions = [\n  { label: '', value: '' },\n  { label: 'Action', value: 'action' },\n  { label: 'Branch', value: 'branch' }\n];\n\ninterface NullNodeProps {\n  pathway: Pathway;\n  currentNode: State;\n  changeNodeType: (event: string) => void;\n  addNode: (event: string) => void;\n}\n\nconst NullNode: FC<NullNodeProps> = ({ pathway, currentNode, changeNodeType, addNode }) => {\n  const selectNodeType = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      changeNodeType(event?.target.value || '');\n    },\n    [changeNodeType]\n  );\n\n  // The node has a key and is not the start node\n  const changeNodeTypeEnabled = currentNode.key !== undefined && currentNode.key !== 'Start';\n\n  return (\n    <>\n      {changeNodeTypeEnabled && (\n        <DropDown\n          id=\"nodeType\"\n          label=\"Node Type\"\n          options={nodeTypeOptions}\n          onChange={selectNodeType}\n          value=\"\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default memo(NullNode);\n","import React, { FC, memo, useState, useCallback, ChangeEvent, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faSave, faTools, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport DropDown from 'components/elements/DropDown';\nimport { Button, Checkbox, FormControlLabel, TextField, Box } from '@material-ui/core';\nimport {\n  removeTransitionCondition,\n  setTransitionCondition,\n  setTransitionConditionDescription\n} from 'utils/builder';\nimport { OutlinedDiv, SidebarHeader, SidebarButton } from '.';\nimport { Pathway, Transition } from 'pathways-model';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport useStyles from './styles';\n\ninterface BranchTransitionProps {\n  pathway: Pathway;\n  currentNodeKey: string;\n  transition: Transition;\n}\n\nconst BranchTransition: FC<BranchTransitionProps> = ({ pathway, currentNodeKey, transition }) => {\n  const { updatePathway } = usePathwayContext();\n  const { criteria, buildCriteriaNodeId, updateBuildCriteriaNodeId } = useCriteriaContext();\n  const criteriaOptions = criteria.map(c => ({ value: c.id, label: c.label }));\n  const styles = useStyles();\n  const transitionKey = transition?.transition || '';\n  const transitionNode = pathway.states[transitionKey];\n  const [useCriteriaSelected, setUseCriteriaSelected] = useState<boolean>(false);\n  const criteriaDescription = transition.condition?.description;\n  const criteriaIsValid = criteriaDescription != null;\n  const criteriaDisplayIsValid = criteriaDescription && criteriaDescription !== '';\n  const hasCriteria = transition.condition?.cql || transition.condition?.description;\n  const buttonText = hasCriteria ? 'DELETE' : 'CANCEL';\n  const icon = hasCriteria ? <FontAwesomeIcon icon={faTrashAlt} /> : null;\n  const displayCriteria =\n    useCriteriaSelected || transition.condition?.cql || transition.condition?.description;\n  const [buildCriteriaSelected, setBuildCriteriaSelected] = useState<boolean>(false);\n  const [criteriaName, setCriteriaName] = useState<string>('');\n\n  const handleUseCriteria = useCallback((): void => {\n    if (hasCriteria && transition.id) {\n      // delete the transition criteria\n      updatePathway(removeTransitionCondition(pathway, currentNodeKey, transition.id));\n      setUseCriteriaSelected(false);\n    } else {\n      setUseCriteriaSelected(!useCriteriaSelected);\n    }\n  }, [useCriteriaSelected, currentNodeKey, pathway, hasCriteria, transition.id, updatePathway]);\n\n  const selectCriteriaSource = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey || !transition.id) return;\n\n      const criteriaSource = event?.target.value || '';\n      let elm = undefined;\n      criteria.forEach(c => {\n        if (c.id === criteriaSource) {\n          elm = c.elm;\n        }\n      });\n      if (!elm) return;\n      updatePathway(\n        setTransitionCondition(\n          pathway,\n          currentNodeKey,\n          transition.id,\n          transition.condition?.description || '',\n          elm,\n          criteriaSource\n        )\n      );\n    },\n    [currentNodeKey, transition.id, updatePathway, pathway, transition.condition, criteria]\n  );\n\n  const setCriteriaDisplay = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      if (!currentNodeKey || !transition.id) return;\n\n      const criteriaDisplay = event?.target.value || '';\n      updatePathway(\n        setTransitionConditionDescription(pathway, currentNodeKey, transition.id, criteriaDisplay)\n      );\n    },\n    [currentNodeKey, transition.id, updatePathway, pathway]\n  );\n\n  const handleCriteriaName = useCallback(\n    (event: ChangeEvent<{ value: string }>): void => {\n      setCriteriaName(event?.target.value || '');\n    },\n    [setCriteriaName]\n  );\n\n  const handleBuildCriteria = useCallback((): void => {\n    updateBuildCriteriaNodeId(transition.id ?? '');\n    setBuildCriteriaSelected(!buildCriteriaSelected);\n  }, [buildCriteriaSelected, updateBuildCriteriaNodeId, transition]);\n\n  const handleBuildCriteriaCancel = useCallback((): void => {\n    if (buildCriteriaNodeId === transition.id) updateBuildCriteriaNodeId('');\n    setBuildCriteriaSelected(false);\n    setCriteriaName('');\n  }, [updateBuildCriteriaNodeId, setCriteriaName, buildCriteriaNodeId, transition]);\n\n  // Cancel current build criteria if clicked on another BranchTransition\n  useEffect(() => {\n    if (buildCriteriaNodeId !== '' && buildCriteriaNodeId !== transition.id) {\n      handleBuildCriteriaCancel();\n    }\n  }, [buildCriteriaNodeId, handleBuildCriteriaCancel, transition]);\n\n  return (\n    <>\n      <hr className={styles.divider} />\n\n      <SidebarHeader pathway={pathway} currentNode={transitionNode} isTransition={true} />\n\n      {!displayCriteria && !buildCriteriaSelected && (\n        <SidebarButton\n          buttonName=\"Use Criteria\"\n          buttonIcon={<FontAwesomeIcon icon={faPlus} />}\n          buttonText=\"Add previously built or imported criteria logic to branch node.\"\n          onClick={handleUseCriteria}\n        />\n      )}\n\n      {displayCriteria && (\n        <OutlinedDiv label=\"Criteria Selector\" error={!criteriaIsValid || !criteriaDisplayIsValid}>\n          <>\n            <DropDown\n              id=\"Criteria\"\n              label=\"Criteria\"\n              options={criteriaOptions}\n              onChange={selectCriteriaSource}\n              value={transition.condition?.cql || undefined}\n            />\n\n            <TextField\n              label=\"Criteria Display\"\n              value={transition.condition?.description || ''}\n              variant=\"outlined\"\n              onChange={setCriteriaDisplay}\n              error={!criteriaDisplayIsValid}\n            />\n          </>\n\n          <Button\n            className={styles.cancelButton}\n            color=\"inherit\"\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={icon}\n            onClick={handleUseCriteria}\n          >\n            {buttonText}\n          </Button>\n        </OutlinedDiv>\n      )}\n\n      {!displayCriteria && !buildCriteriaSelected && (\n        <SidebarButton\n          buttonName=\"Build Criteria\"\n          buttonIcon={<FontAwesomeIcon icon={faTools} />}\n          buttonText=\"Create new criteria logic to add to branch node.\"\n          onClick={handleBuildCriteria}\n        />\n      )}\n\n      {buildCriteriaSelected && (\n        <OutlinedDiv label=\"Criteria Builder\" error={true}>\n          <TextField\n            error={criteriaName === ''}\n            label=\"Criteria Name\"\n            variant=\"outlined\"\n            onChange={handleCriteriaName}\n            fullWidth\n          />\n          <div className={styles.buildCriteriaContainer}>\n            <FormControlLabel\n              label={<Box fontStyle=\"italic\">Add to reusable criteria</Box>}\n              control={<Checkbox color=\"default\" />}\n            />\n            <Button\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              onClick={handleBuildCriteriaCancel}\n            >\n              Cancel\n            </Button>\n            <Button\n              className={styles.saveButton}\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"outlined\"\n              startIcon={<FontAwesomeIcon icon={faSave} />}\n              disabled\n            >\n              Save\n            </Button>\n          </div>\n        </OutlinedDiv>\n      )}\n    </>\n  );\n};\n\nexport default memo(BranchTransition);\n","import React, { FC, memo, ReactNode } from 'react';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport useStyles from './styles';\n\ninterface InputComponentProps {\n  children?: ReactNode;\n}\n\nconst InputComponent: FC<InputComponentProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\ninterface OutlinedDivProps {\n  children: ReactNode;\n  label: string;\n  error: boolean;\n}\n\nconst OutlinedDiv: FC<OutlinedDivProps> = ({ children, label, error }) => {\n  const styles = useStyles();\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      label={label}\n      multiline\n      InputLabelProps={{ shrink: true }}\n      InputProps={{\n        inputComponent: InputComponent,\n        classes: {\n          root: clsx(styles.outlinedDiv, error && styles.outlinedDivError),\n          notchedOutline: clsx(error && styles.outlinedDivError)\n        }\n      }}\n      inputProps={{ children }}\n    />\n  );\n};\n\nexport default memo(OutlinedDiv);\n","/* eslint-disable guard-for-in */\n/* eslint-disable max-len */\n\nimport { Pathway, State } from 'pathways-model';\nimport { Node, Nodes, Layout, NodeCoordinates, Edges, NodeDimensions } from 'graph-model';\n\nimport dagre from 'dagre';\n\nimport config from 'utils/ConfigManager';\nconst graphLayoutProvider = config.get('graphLayoutProvider', 'dagre');\n\n/**\n * Obtain the graph layout for the pathway as coordinates for every node\n *\n * @param pathway - JSON pathway\n */\nexport default function layout(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  return graphLayoutProvider === 'dagre'\n    ? layoutDagre(pathway, nodeDimensions)\n    : layoutCustom(pathway);\n}\n\n/**\n * Layout the pathway using the Dagre layout engine.\n * @see {@link https://github.com/dagrejs/dagre}\n */\nfunction layoutDagre(pathway: Pathway, nodeDimensions: NodeDimensions): Layout {\n  const START = 'Start';\n  const NODE_HEIGHT = 50;\n  const NODE_WIDTH_FACTOR = 10; // factor to convert label length => width, assume font size roughly 10\n  const nodeNames = Object.keys(pathway.states);\n  const g = new dagre.graphlib.Graph();\n\n  g.setGraph({});\n  g.setDefaultEdgeLabel(() => ({})); // dagre requires a default edge label, we want it to just be empty\n\n  nodeNames.forEach(stateName => {\n    const state: State = pathway.states[stateName];\n    const nodeDimension = nodeDimensions[stateName];\n\n    if (nodeDimension) {\n      g.setNode(stateName, {\n        label: state.label,\n        width: nodeDimension.width,\n        height: nodeDimension.height\n      });\n    } else {\n      g.setNode(stateName, {\n        label: state.label,\n        width: state.label.length * NODE_WIDTH_FACTOR,\n        height: NODE_HEIGHT\n      });\n    }\n\n    state.transitions.forEach(transition => {\n      const label = transition.condition\n        ? {\n            label: transition.condition.description,\n            width: 25,\n            height: 20\n          }\n        : {};\n\n      g.setEdge(stateName, transition.transition, label);\n    });\n  });\n\n  dagre.layout(g);\n  const nodeCoordinates: NodeCoordinates = {};\n  const startNodeShift = g.node(START).x;\n\n  for (const nodeName of nodeNames) {\n    const node = g.node(nodeName);\n    // dagre returns coordinates for the center of the node,\n    // our renderer expects coordinates for the corner of the node.\n    // further, our renderer expects the Start node to be centered at x: 0\n    nodeCoordinates[nodeName] = {\n      x: node.x - startNodeShift - node.width / 2,\n      y: node.y - node.height / 2,\n      width: node.width\n    };\n  }\n\n  const edges: Edges = {};\n\n  g.edges().forEach(e => {\n    const edge = g.edge(e);\n    const edgeName = `${e.v}, ${e.w}`;\n    const label = edge.label ? { text: edge.label, x: edge.x - startNodeShift, y: edge.y } : null;\n\n    edges[edgeName] = {\n      label,\n      start: e.v,\n      end: e.w,\n      points: edge.points.map(p => {\n        return {\n          x: p.x - startNodeShift,\n          y: p.y\n        };\n      })\n    };\n  });\n\n  return { nodeCoordinates, edges };\n}\n\n/**\n * Layout the pathway using our homegrown layout algorithm.\n */\nfunction layoutCustom(pathway: Pathway): Layout {\n  const START = 'Start';\n  const NODE_WIDTH = 100;\n  const NODE_HEIGHT = 50;\n  const MIN_MARGIN_X = 10;\n  const MIN_MARGIN_Y = 50;\n  const nodes: Nodes = initializeNodes(pathway);\n  const graph: string[][] = [[START]];\n  const HORIZONTAL_OFFSET = NODE_WIDTH + MIN_MARGIN_X;\n  const VERTICAL_OFFSET = NODE_HEIGHT + MIN_MARGIN_Y;\n\n  // Set the rank for every node\n  let rank = 0;\n  do {\n    // Iterate over each node on the current level\n    for (const nodeName of graph[rank]) {\n      // Assign all children to the next rank\n      assignRankToChildren(nodes[nodeName], rank + 1);\n    }\n\n    rank++;\n\n    // To start rank = 0 and graph.length = 1. In each iteration children will be added\n    // to the next rank incrementing the length of graph. When there are no new children\n    // the graph.length will remain unchanged but the rank would have increased by one.\n    // Therefore we stop when the rank and graph length are the same.\n  } while (graph.length !== rank);\n\n  // Set the position of nodes within the rank\n  assignHorizontalPositionToNode(nodes[START], -1 * (NODE_WIDTH / 2));\n  for (rank = 1; rank < graph.length; rank++) {\n    assignHorizontalPositionToNodesInRank(rank);\n  }\n\n  return {\n    nodeCoordinates: produceCoordinates(),\n    edges: {}\n  };\n\n  /**\n   * Convert the Nodes into a Coordinates object\n   *\n   * @returns Coordinates for every node\n   */\n  function produceCoordinates(): NodeCoordinates {\n    const coordinates: NodeCoordinates = {};\n\n    for (const nodeName in nodes) {\n      const node = nodes[nodeName];\n      coordinates[nodeName] = {\n        x: node.horizontalPosition,\n        y: node.rank * VERTICAL_OFFSET\n      };\n    }\n\n    return coordinates;\n  }\n\n  /**\n   * Set the horizontal position for child elements of a parent\n   *\n   * @param parent - the parent Node\n   * @param nodes - the Nodes\n   */\n  function spreadChildrenEvenly(parent: Node): void {\n    const children = parent.children.filter(\n      c => isNaN(nodes[c].horizontalPosition) || nodes[c].canMove\n    );\n    if (children.length === 0) return;\n    if (children.length === 1) {\n      assignHorizontalPositionToNode(nodes[children[0]], parent.horizontalPosition);\n      return;\n    }\n    if (children.length % 2 === 1) children.splice(Math.ceil(children.length / 2), 1); // Remove middle element if odd\n\n    // TODO: this does not consider if there are connections between the children which order to put them in\n    for (let i = 0; i < children.length / 2; i++) {\n      // Set the left child i from the center\n      let childNode = nodes[children[children.length / 2 - i - 1]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition - (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n\n      // Set the right child i from the center\n      childNode = nodes[children[children.length / 2 + i]];\n      assignHorizontalPositionToNode(\n        childNode,\n        parent.horizontalPosition + (i + 1) * HORIZONTAL_OFFSET\n      );\n      childNode.canMove = false;\n    }\n  }\n\n  /**\n   * Assigns the node given by nodeName the horizontal position hPos if it is not already set\n   * @param node - the node to set the horizontal position of\n   * @param hPos - the horizontal position for the node\n   */\n  function assignHorizontalPositionToNode(node: Node, hPos: number): void {\n    if (isNaN(node.horizontalPosition) || node.canMove) {\n      node.horizontalPosition = hPos;\n\n      // Check the new position is not on top of another node\n      let i = 1;\n      while (hasOverlap(node)) {\n        // Update Horizontal position of this node\n        // Alternate directions moving further and further away\n        const direction = i % 2 === 0 ? -1 : 1;\n        node.horizontalPosition = hPos + direction * Math.ceil(i / 2) * HORIZONTAL_OFFSET;\n        i += 1;\n      }\n    }\n  }\n\n  /**\n   * Assigns the horizontal position of all nodes on the current level\n   *\n   * @param rank - the level of the graph to assign node positions of\n   */\n  function assignHorizontalPositionToNodesInRank(rank: number): void {\n    for (const nodeName of graph[rank]) {\n      const node = nodes[nodeName];\n      if (!isNaN(node.horizontalPosition)) continue;\n      const parentsOnHigherRank = node.parents.filter(p => nodes[p].rank < node.rank);\n      if (parentsOnHigherRank.length === 1) {\n        const parentName = node.parents[0];\n        const parent = nodes[parentName];\n\n        if (parent.children.length % 2 === 1) {\n          // Odd number of children: one directly below, others to the side\n          const childNode = nodes[parent.children[Math.floor(parent.children.length / 2)]];\n          assignHorizontalPositionToNode(childNode, parent.horizontalPosition);\n        }\n        spreadChildrenEvenly(parent);\n      } else {\n        // Multiple Parents: Place the node at the average of parents on higher rank\n        // TODO: collect all parents to be next to each other\n        const sum = parentsOnHigherRank\n          .map(p => nodes[p].horizontalPosition)\n          .reduce((a, b) => a + b, 0);\n\n        assignHorizontalPositionToNode(node, sum / parentsOnHigherRank.length);\n      }\n    }\n  }\n\n  /**\n   * Determines if the node overlaps with any other nodes in the rank\n   *\n   * @param node - the node to check for overlap with\n   * @returns true if the node overlaps with any other node in the rank, false otherwise\n   */\n  function hasOverlap(node: Node): boolean {\n    const nodesInRank = graph[node.rank].map(name => nodes[name]);\n\n    for (const otherNode of nodesInRank) {\n      if (nodesOverlap(node, otherNode)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper function to determine if two nodes are in the same slot\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the nodes share same rank and position, false otherwise\n   */\n  function nodesOverlap(node: Node, otherNode: Node): boolean {\n    if (nodesEqual(node, otherNode)) return false;\n    else\n      return (\n        !isNaN(node.rank) &&\n        !isNaN(node.horizontalPosition) &&\n        !isNaN(otherNode.rank) &&\n        !isNaN(otherNode.horizontalPosition) &&\n        node.rank === otherNode.rank &&\n        node.horizontalPosition === otherNode.horizontalPosition\n      );\n  }\n\n  /**\n   * Determine if two nodes are the same\n   *\n   * @param node - the first node\n   * @param otherNode - the second node\n   * @returns true if the two nodes are the same (have the same label)\n   */\n  function nodesEqual(node: Node, otherNode: Node): boolean {\n    return node.label === otherNode.label;\n  }\n\n  /**\n   * Assigns the rank to every child of node. If the child has a lower rank the entire\n   * subtree rooted at that child will be shifted down by recursively assigning rank to\n   * the children.\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of states by level\n   * @param node - the node to get children from\n   * @param rank - the rank to assign to the children\n   */\n  function assignRankToChildren(node: Node, rank: number): void {\n    node.children.forEach(child => {\n      const childNode = nodes[child];\n\n      // If the child is on a higher rank than the parent (node) move subtree rooted at child down\n      if (childNode.rank < node.rank) {\n        // Remove node from previous rank\n        graph[childNode.rank].splice(graph[childNode.rank].indexOf(child), 1);\n\n        // Move this node down\n        assignRankToNode(child, rank);\n\n        // Move all children of this child down\n        assignRankToChildren(childNode, rank + 1);\n      } else if (isNaN(childNode.rank)) assignRankToNode(child, rank);\n    });\n  }\n\n  /**\n   * Assigns the node labeled by stateName the rank by updating graph and nodes data structures\n   *\n   * @param nodes - the Nodes\n   * @param graph - the graph as list of nodes by level\n   * @param nodeName - the name of the node to set the rank of\n   * @param rank - the new rank for the node\n   */\n  function assignRankToNode(nodeName: string, rank: number): void {\n    try {\n      graph[rank].push(nodeName);\n    } catch (err) {\n      graph[rank] = [nodeName];\n    } finally {\n      nodes[nodeName].rank = rank;\n    }\n  }\n\n  /**\n   * Initialize the Nodes data structure for the graph representation\n   *\n   * @param pathway - JSON Pathway\n   * @returns initial Nodes data structure with default values\n   */\n  function initializeNodes(pathway: Pathway): Nodes {\n    const nodes: Nodes = {};\n\n    // Iniitalize each node with default values\n    let stateName: string;\n    for (stateName in pathway.states) {\n      nodes[stateName] = {\n        label: stateName,\n        rank: NaN,\n        horizontalPosition: NaN,\n        children: [],\n        parents: [],\n        canMove: true\n      };\n    }\n\n    // Set the child and parent properties of each node\n    Object.keys(pathway.states).forEach(stateName => {\n      const state: State = pathway.states[stateName];\n\n      state.transitions.forEach(transition => {\n        if (!nodes[stateName].children.includes(transition.transition))\n          nodes[stateName].children.push(transition.transition);\n        if (!nodes[transition.transition].parents.includes(stateName))\n          nodes[transition.transition].parents.push(stateName);\n      });\n    });\n\n    nodes[START].rank = 0;\n\n    return nodes;\n  }\n}\n","import { State, GuidanceState } from 'pathways-model';\n\nexport function isGuidanceState(state: State): state is GuidanceState {\n  const { action } = state as GuidanceState;\n  return action !== undefined;\n}\n\nexport function isBranchState(state: State): boolean {\n  const { action, label } = state as GuidanceState;\n  return action === undefined && label !== 'Start';\n}\n\ntype ConversionResource = {\n  [key: string]: string;\n};\nexport const resourceNameConversion: ConversionResource = {\n  MedicationRequest: 'Medication',\n  ServiceRequest: 'Procedure',\n  CarePlan: 'Regimen'\n};\n","import React, { FC, ReactNode, ReactElement, memo } from 'react';\nimport { GuidanceState } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './ExpandedNode.module.scss';\nimport { isBranchState, resourceNameConversion } from 'utils/nodeUtils';\n\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MedicationRequest, ServiceRequest } from 'fhir-objects';\ninterface ExpandedNodeProps {\n  pathwayState: GuidanceState;\n  isActionable: boolean;\n  isGuidance: boolean;\n}\nconst ExpandedNode: FC<ExpandedNodeProps> = memo(({ pathwayState, isActionable, isGuidance }) => {\n  return (\n    <>\n      <ExpandedNodeMemo isGuidance={isGuidance} pathwayState={pathwayState} />\n    </>\n  );\n});\n\ntype ExpandedNodeFieldProps = {\n  title: string;\n  description: ReactNode;\n};\n\nconst ExpandedNodeField: FC<ExpandedNodeFieldProps> = ({ title, description }) => {\n  if (!description) return null;\n\n  return (\n    <tr>\n      <td className={styles.descTitle}>{title}</td>\n      <td className={styles.desc}>{description}</td>\n    </tr>\n  );\n};\n\nfunction isMedicationRequest(\n  request: MedicationRequest | ServiceRequest\n): request is MedicationRequest {\n  return (request as MedicationRequest).medicationCodeableConcept !== undefined;\n}\nfunction renderGuidance(pathwayState: GuidanceState): ReactElement[] {\n  let returnElements: ReactElement[] = [];\n  if (pathwayState.action[0]) {\n    const resource = pathwayState.action[0].resource;\n    const coding = isMedicationRequest(resource)\n      ? resource?.medicationCodeableConcept?.coding\n      : resource?.code?.coding;\n\n    const resourceType = resourceNameConversion[resource.resourceType]\n      ? resourceNameConversion[resource.resourceType]\n      : resource.resourceType;\n    returnElements = [\n      <ExpandedNodeField\n        key=\"Description\"\n        title=\"Description\"\n        description={pathwayState.action[0].description}\n      />,\n      <ExpandedNodeField key=\"Type\" title=\"Type\" description={resourceType} />,\n      <ExpandedNodeField\n        key=\"System\"\n        title=\"System\"\n        description={\n          coding &&\n          coding[0].system && (\n            <>\n              {coding[0].system}\n              <a href={coding[0].system} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faExternalLinkAlt} className={styles.externalLink} />\n              </a>\n            </>\n          )\n        }\n      />,\n      <ExpandedNodeField key=\"Code\" title=\"Code\" description={coding && coding[0].code} />,\n      <ExpandedNodeField key=\"Display\" title=\"Display\" description={coding && coding[0].display} />,\n      <ExpandedNodeField key=\"Title\" title=\"Title\" description={resource.title} />\n    ];\n  }\n\n  return returnElements;\n}\ninterface ExpandedNodeMemoProps {\n  pathwayState: GuidanceState;\n  isGuidance: boolean;\n}\nconst ExpandedNodeMemo: FC<ExpandedNodeMemoProps> = memo(({ pathwayState, isGuidance }) => {\n  const guidance = isGuidance && renderGuidance(pathwayState);\n  const branch = isBranchState(pathwayState);\n  return (\n    <div className=\"expandedNode\">\n      <table className={styles.infoTable}>\n        <tbody>{guidance || branch}</tbody>\n      </table>\n    </div>\n  );\n});\n\nexport default ExpandedNode;\n","import React, { FC, Ref, forwardRef, memo, useCallback, useState, useEffect } from 'react';\nimport { GuidanceState, State, Pathway } from 'pathways-model';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './Node.module.scss';\nimport ExpandedNode from 'components/ExpandedNode';\nimport { isGuidanceState, isBranchState } from 'utils/nodeUtils';\nimport { getNodeType } from 'utils/builder';\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faMicroscope,\n  faPlay,\n  faPrescriptionBottleAlt,\n  faSyringe,\n  faCheckCircle,\n  faTimesCircle,\n  faBookMedical\n} from '@fortawesome/free-solid-svg-icons';\n\ninterface NodeProps {\n  nodeKey: string;\n  pathwayState: State;\n  pathway: Pathway;\n  xCoordinate: number;\n  yCoordinate: number;\n  expanded?: boolean;\n  onClick?: (nodeName: string) => void;\n  currentNode: State;\n}\n\nconst Node: FC<NodeProps & { ref: Ref<HTMLDivElement> }> = memo(\n  forwardRef<HTMLDivElement, NodeProps>(\n    (\n      {\n        nodeKey,\n        pathwayState,\n        pathway,\n        xCoordinate,\n        yCoordinate,\n        expanded = false,\n        onClick,\n        currentNode\n      },\n      ref\n    ) => {\n      const [hasMetadata, setHasMetadata] = useState<boolean>(\n        isGuidanceState(pathwayState) ? pathwayState.action.length > 0 : false\n      );\n\n      const onClickHandler = useCallback(() => {\n        if (onClick) onClick(nodeKey);\n      }, [onClick, nodeKey]);\n\n      useEffect(() => {\n        if (!hasMetadata && isGuidanceState(pathwayState) && pathwayState.action.length > 0) {\n          setHasMetadata(true);\n          if (!expanded) {\n            onClickHandler();\n          }\n        }\n      }, [hasMetadata, pathwayState, setHasMetadata, onClickHandler, expanded]);\n\n      const { label } = pathwayState;\n      const style = {\n        top: yCoordinate,\n        left: xCoordinate\n      };\n\n      const isCurrentNode = pathwayState.key === currentNode.key;\n      const isTransitionOfCurrentBranch =\n        isBranchState(currentNode) && currentNode.transitions.some(e => e?.transition === nodeKey);\n\n      const isActionable = isCurrentNode;\n      const topLevelClasses = [styles.node];\n      let expandedNodeClass = '';\n      if (expanded) topLevelClasses.push('expanded');\n      if (isActionable || isTransitionOfCurrentBranch) {\n        topLevelClasses.push(styles.actionable);\n        expandedNodeClass = styles.childActionable;\n      } else {\n        expandedNodeClass = styles.childNotActionable;\n      }\n      const isGuidance = isGuidanceState(pathwayState);\n      const nodeType = getNodeType(pathway, nodeKey);\n      return (\n        <div className={topLevelClasses.join(' ')} style={style} ref={ref}>\n          <div className={`nodeTitle ${onClickHandler && 'clickable'}`} onClick={onClickHandler}>\n            <div className=\"iconAndLabel\">\n              <NodeIcon pathwayState={pathwayState} nodeType={nodeType} />\n              {label}\n            </div>\n            <StatusIcon status={null} />\n          </div>\n          {expanded && (\n            <div className={`${styles.expandedNode} ${expandedNodeClass}`}>\n              <ExpandedNode\n                pathwayState={pathwayState as GuidanceState}\n                isActionable={isActionable}\n                isGuidance={isGuidance}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  )\n);\n\ninterface NodeIconProps {\n  pathwayState: State;\n  nodeType: string;\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ pathwayState, nodeType }) => {\n  let icon: IconDefinition | undefined;\n  if (pathwayState.key === 'Start') icon = faPlay;\n  else if (nodeType === 'action') {\n    const guidancePathwayState = pathwayState as GuidanceState;\n    if (guidancePathwayState.action.length > 0) {\n      const resourceType = guidancePathwayState.action[0].resource.resourceType;\n      if (resourceType === 'MedicationRequest') icon = faPrescriptionBottleAlt;\n      else if (resourceType === 'ServiceRequest') icon = faSyringe;\n      else if (resourceType === 'CarePlan') icon = faBookMedical;\n    }\n  } else if (nodeType === 'branch') {\n    icon = faMicroscope;\n  }\n\n  return icon ? <FontAwesomeIcon icon={icon} className={styles.icon} /> : null;\n};\n\ninterface StatusIconProps {\n  status: boolean | null;\n}\n\nconst StatusIcon: FC<StatusIconProps> = ({ status }) => {\n  if (status == null) {\n    return null;\n  }\n  const icon = status ? faCheckCircle : faTimesCircle;\n  return (\n    <div className=\"statusIcon\">\n      <FontAwesomeIcon icon={icon} className={styles.icon} />\n    </div>\n  );\n};\n\nexport default Node;\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    arrow: {\n      '& path': {\n        stroke: theme.palette.primary.main,\n        strokeWidth: 2\n      },\n      '& text': {\n        fontSize: '18px'\n      }\n    },\n    currentBranchArrow: {\n      '& path': {\n        stroke: theme.palette.secondary.main\n      }\n    },\n    arrowhead: {\n      '& polygon': {\n        fill: theme.palette.primary.main\n      }\n    },\n    currentBranchArrowhead: {\n      '& polygon': {\n        fill: theme.palette.secondary.main\n      }\n    }\n  }),\n  { name: 'Arrow' }\n);\n","import React, { FC } from 'react';\nimport { Edge, Coordinate } from 'graph-model';\nimport { State } from 'pathways-model';\nimport { isBranchState } from 'utils/nodeUtils';\nimport useStyles from './styles';\nimport clsx from 'clsx';\n\ninterface ArrowProps {\n  edge: Edge;\n  edgeName: string;\n  widthOffset: number;\n  currentNode: State;\n}\n\ninterface ArrowPathProps {\n  points: Coordinate[];\n  arrowheadId: string;\n  widthOffset: number;\n}\n\nconst Arrow: FC<ArrowProps> = ({ edge, edgeName, widthOffset, currentNode }) => {\n  const styles = useStyles();\n  const isCurrentBranchArrow = isBranchState(currentNode) && edge.start === currentNode.key;\n  const edgeNameNoWhitespace = edgeName.replace(' ', '');\n  const arrowheadId = `arrowhead-${edgeNameNoWhitespace}`;\n\n  const { label } = edge;\n  return (\n    <svg className={clsx(styles.arrow, isCurrentBranchArrow && styles.currentBranchArrow)}>\n      <ArrowPath points={edge.points} arrowheadId={arrowheadId} widthOffset={widthOffset} />\n      {label ? (\n        <text x={label.x + widthOffset} y={label.y}>\n          {label.text}\n        </text>\n      ) : null}\n      <defs>\n        <marker\n          id={arrowheadId}\n          className={clsx(isCurrentBranchArrow ? styles.currentBranchArrowhead : styles.arrowhead)}\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"0\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n    </svg>\n  );\n};\n\n// Returns path for arrow from edge points\nconst ArrowPath: FC<ArrowPathProps> = ({ points, arrowheadId, widthOffset }) => {\n  const pointsWithOffset = points.map(p => ({ x: p.x + widthOffset, y: p.y }));\n  const length = pointsWithOffset.length;\n  pointsWithOffset[length - 1].y -= 17.5;\n  let pathString = `M ${pointsWithOffset[0].x} ${pointsWithOffset[0].y} `;\n\n  /**\n   * The points to use in the Cubic command is determined by the length of points array\n   * If i % 3 is 0, use all points including the 1st point\n   * If i % 3 is 1, use all points except the 1st point\n   * If i % 3 is 2, use all points including the 1st point and reuse every 3rd point\n   * We need points to be a multiple of 3 because the Cubic command expects 3 points\n   */\n  const writeCommandString = (remainder: number): string => {\n    return pointsWithOffset.reduce((acc, point, i, arr) => {\n      return i % 3 !== remainder\n        ? acc\n        : `${acc} C ${point.x} ${point.y} ${arr[i + 1].x} ${arr[i + 1].y} ${arr[i + 2].x}\n        ${arr[i + 2].y}`;\n    }, pathString);\n  };\n\n  pathString = writeCommandString(length % 3);\n\n  return <path d={pathString} fill=\"transparent\" markerEnd={`url(#${arrowheadId})`} />;\n};\n\nexport default Arrow;\n","import React, {\n  FC,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport graphLayout from 'visualization/layout';\nimport Node from 'components/Node';\nimport Arrow from 'components/Arrow';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport { Pathway, State } from 'pathways-model';\nimport { Layout, NodeDimensions, NodeCoordinates, Edges } from 'graph-model';\nimport styles from './Graph.module.scss';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\n\ninterface GraphProps {\n  pathway: Pathway;\n  interactive?: boolean;\n  expandCurrentNode?: boolean;\n  currentNode: State;\n}\n\ninterface ExpandedState {\n  [key: string]: boolean | string | null;\n}\n\nconst Graph: FC<GraphProps> = memo(\n  ({ pathway, interactive = true, expandCurrentNode = true, currentNode }) => {\n    const graphElement = useRef<HTMLDivElement>(null);\n    const nodeRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n    const [parentWidth, setParentWidth] = useState<number>(\n      graphElement?.current?.parentElement?.clientWidth ?? 0\n    );\n\n    // Get the layout of the graph\n    const getGraphLayout = useCallback((): Layout => {\n      const nodeDimensions: NodeDimensions = {};\n\n      // Retrieve dimensions from nodeRefs\n      if (nodeRefs?.current) {\n        Object.keys(nodeRefs.current).forEach(key => {\n          const nodeElement = nodeRefs.current[key];\n          const width = nodeElement.clientWidth;\n          // nodeElement can have multiple children so calculate the sum to get the node height\n          const height = Array.from(nodeElement.children).reduce(\n            (acc, child) => acc + child.clientHeight,\n            0\n          );\n\n          nodeDimensions[key] = { width, height };\n        });\n      }\n\n      return graphLayout(pathway, nodeDimensions);\n    }, [pathway]);\n\n    const [layout, setLayout] = useState(getGraphLayout());\n    const { nodeCoordinates, edges } = layout;\n    const maxHeight = useMemo(() => {\n      return nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            .map(x => x.y)\n            .reduce((a, b) => Math.max(a, b))\n        : 0;\n    }, [nodeCoordinates]);\n\n    // If a node has a negative x value, shift nodes and edges to the right by that value\n    const minX =\n      nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            .map(x => x.x + parentWidth / 2)\n            .reduce((a, b) => Math.min(a, b))\n        : 0;\n\n    if (minX < 0) {\n      const toAdd = minX * -1;\n      Object.keys(nodeCoordinates).forEach(key => {\n        const node = nodeCoordinates[key];\n        node.x += toAdd;\n      });\n\n      Object.keys(edges).forEach(key => {\n        const edge = edges[key];\n\n        edge.points.forEach(p => (p.x += toAdd));\n        if (edge.label) edge.label.x += toAdd;\n      });\n    }\n\n    // Find node that is farthest to the right\n    const maxWidth = useMemo(() => {\n      return nodeCoordinates !== undefined\n        ? Object.values(nodeCoordinates)\n            // Add width of the node to account for x coordinate starting at top left corner\n            .map(x => x.x + parentWidth / 2 + (x.width ?? 0))\n            .reduce((a, b) => Math.max(a, b))\n        : 0;\n    }, [nodeCoordinates, parentWidth]);\n\n    const [expanded, setExpanded] = useState<ExpandedState>(() =>\n      Object.keys(layout).reduce(\n        (acc, curr: string) => {\n          acc[curr] = false;\n          return acc;\n        },\n        { lastSelectedNode: null } as ExpandedState\n      )\n    );\n\n    const toggleExpanded = useCallback((key: string) => {\n      if (key === 'Start') {\n        setExpanded(prevState => ({\n          ...prevState,\n          lastSelectedNode: key\n        }));\n      } else {\n        setExpanded(prevState => ({\n          ...prevState,\n          [key]:\n            !prevState[key] || prevState.lastSelectedNode === key\n              ? !prevState[key]\n              : prevState[key],\n          lastSelectedNode: key\n        }));\n      }\n    }, []);\n\n    // Recalculate graph layout if graph container size changes\n    useEffect(() => {\n      // Keeps track of whether the current useEffect cycle has ended\n      let cancel = false;\n\n      if (graphElement.current?.parentElement) {\n        new ResizeSensor(graphElement.current.parentElement, function() {\n          if (!cancel) {\n            setParentWidth(graphElement.current?.parentElement?.clientWidth ?? 0);\n            setLayout(getGraphLayout());\n          }\n        });\n        const { clientWidth } = graphElement.current.parentElement;\n        if (clientWidth && parentWidth !== clientWidth) {\n          setParentWidth(graphElement.current?.parentElement?.clientWidth ?? 0);\n          setLayout(getGraphLayout());\n        }\n      }\n\n      return (): void => {\n        cancel = true;\n      };\n    }, [getGraphLayout, parentWidth]);\n\n    // Recalculate graph layout if a node is expanded\n    useEffect(() => {\n      setLayout(getGraphLayout());\n    }, [pathway, expanded, getGraphLayout]);\n\n    return (\n      <GraphMemo\n        graphElement={graphElement}\n        interactive={interactive}\n        maxHeight={maxHeight}\n        nodeCoordinates={nodeCoordinates}\n        edges={edges}\n        pathway={pathway}\n        nodeRefs={nodeRefs}\n        parentWidth={parentWidth}\n        maxWidth={maxWidth}\n        expanded={expanded}\n        toggleExpanded={toggleExpanded}\n        currentNode={currentNode}\n      />\n    );\n  }\n);\n\ninterface GraphMemoProps {\n  graphElement: RefObject<HTMLDivElement>;\n  interactive: boolean;\n  maxHeight: number;\n  nodeCoordinates: NodeCoordinates;\n  edges: Edges;\n  pathway: Pathway;\n  nodeRefs: React.MutableRefObject<{\n    [key: string]: HTMLDivElement;\n  }>;\n  parentWidth: number;\n  maxWidth: number;\n  expanded: ExpandedState;\n  toggleExpanded: (key: string) => void;\n  currentNode: State;\n}\n\nconst GraphMemo: FC<GraphMemoProps> = memo(\n  ({\n    graphElement,\n    interactive,\n    maxHeight,\n    nodeCoordinates,\n    edges,\n    pathway,\n    nodeRefs,\n    parentWidth,\n    maxWidth,\n    expanded,\n    toggleExpanded,\n    currentNode\n  }) => {\n    const { id: pathwayId } = useParams();\n    const history = useHistory();\n    const { updateBuildCriteriaNodeId } = useCriteriaContext();\n    const redirectToNode = useCallback(\n      nodeId => {\n        const url = `/builder/${encodeURIComponent(pathwayId)}/node/${encodeURIComponent(nodeId)}`;\n        if (url !== history.location.pathname) {\n          history.push(url);\n        }\n      },\n      [history, pathwayId]\n    );\n    const onClickHandler = useCallback(\n      (nodeName: string) => {\n        if (interactive) {\n          redirectToNode(nodeName);\n          toggleExpanded(nodeName);\n          updateBuildCriteriaNodeId('');\n        }\n      },\n      [redirectToNode, toggleExpanded, updateBuildCriteriaNodeId, interactive]\n    );\n    return (\n      <div\n        ref={graphElement}\n        id=\"graph-root\"\n        className={styles.root}\n        style={{\n          height: interactive ? maxHeight + 150 : 'inherit',\n          width: maxWidth + 'px',\n          position: 'relative',\n          marginRight: '5px'\n        }}\n      >\n        {nodeCoordinates !== undefined\n          ? Object.keys(nodeCoordinates).map(nodeName => {\n              return (\n                <Node\n                  key={nodeName}\n                  nodeKey={nodeName}\n                  pathway={pathway}\n                  ref={(node: HTMLDivElement): void => {\n                    if (node) nodeRefs.current[nodeName] = node;\n                    else delete nodeRefs.current[nodeName];\n                  }}\n                  pathwayState={pathway.states[nodeName]}\n                  xCoordinate={nodeCoordinates[nodeName].x + parentWidth / 2}\n                  yCoordinate={nodeCoordinates[nodeName].y}\n                  expanded={Boolean(expanded[nodeName])}\n                  onClick={onClickHandler}\n                  currentNode={currentNode}\n                />\n              );\n            })\n          : []}\n\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{\n            width: maxWidth,\n            height: maxHeight,\n            zIndex: 1,\n            top: 0,\n            left: 0,\n            overflow: 'visible'\n          }}\n        >\n          {edges !== undefined\n            ? Object.keys(edges).map(edgeName => {\n                const edge = edges[edgeName];\n                return (\n                  <Arrow\n                    key={edgeName}\n                    edge={edge}\n                    edgeName={edgeName}\n                    widthOffset={parentWidth / 2}\n                    currentNode={currentNode}\n                  />\n                );\n              })\n            : []}\n        </svg>\n      </div>\n    );\n  }\n);\n\nexport default Graph;\n","import { makeStyles, Theme as AugmentedTheme, darken } from '@material-ui/core/styles';\n\nconst toggleButtonCss = {\n  borderRadius: '0%',\n  marginLeft: '1px',\n  width: '50px',\n  height: '50px'\n};\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    display: {\n      display: 'flex'\n    },\n    graph: {\n      width: '100%',\n      height: '100%',\n      'overflow-y': 'scroll'\n    },\n    graphHeader: {\n      display: 'flex',\n      height: '50px',\n      backgroundColor: theme.palette.common.white,\n      marginLeft: '1px'\n    },\n    graphHeaderText: {\n      height: '50px',\n      display: 'flex',\n      width: '100%',\n      backgroundColor: theme.palette.primary.main,\n      alignItems: 'center',\n      color: theme.palette.common.white,\n      fontSize: '1.4em',\n      paddingLeft: '1.5em'\n    },\n    toggleButton: {\n      '&-on': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.primary.main, 0.1)\n        }\n      },\n      '&-off': {\n        ...toggleButtonCss,\n        backgroundColor: theme.palette.text.primary,\n        '&:hover': {\n          backgroundColor: darken(theme.palette.text.primary, 0.1)\n        }\n      }\n    },\n    toggleIcon: {\n      transform: 'rotate(90deg) scaleY(-1)',\n      color: theme.palette.common.white\n    }\n  }),\n  { name: 'Builder' }\n);\n","import React, { FC, useRef, useEffect, memo, useState, useCallback } from 'react';\nimport { Pathway, State } from 'pathways-model';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\n\nimport Header from 'components/Header';\nimport Navigation from 'components/Navigation';\nimport Sidebar from 'components/Sidebar';\nimport Graph from 'components/Graph';\nimport { useTheme } from 'components/ThemeProvider';\n\nimport { IconButton } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faProjectDiagram } from '@fortawesome/free-solid-svg-icons';\nimport useStyles from './styles';\n\ninterface BuilderProps {\n  pathway: Pathway;\n  currentNode: State;\n}\n\nconst Builder: FC<BuilderProps> = ({ pathway, currentNode }) => {\n  const styles = useStyles();\n  const { buildCriteriaNodeId } = useCriteriaContext();\n  const headerElement = useRef<HTMLDivElement>(null);\n  const graphContainerElement = useRef<HTMLDivElement>(null);\n  const theme = useTheme('dark');\n  const [showCriteriaBuilder, setShowCriteriaBuilder] = useState<boolean>(true);\n\n  const toggleShowCriteria = useCallback((): void => {\n    setShowCriteriaBuilder(!showCriteriaBuilder);\n  }, [showCriteriaBuilder]);\n\n  // Set the height of the graph container\n  useEffect(() => {\n    if (graphContainerElement?.current && headerElement?.current)\n      graphContainerElement.current.style.height =\n        window.innerHeight - headerElement.current.clientHeight + 'px';\n  }, [pathway, headerElement, graphContainerElement]);\n\n  // Reset criteriaBuilderToggle to true if not currently building criteria\n  useEffect(() => {\n    if (!showCriteriaBuilder && buildCriteriaNodeId === '') setShowCriteriaBuilder(true);\n  }, [buildCriteriaNodeId, showCriteriaBuilder]);\n\n  return (\n    <>\n      <div ref={headerElement}>\n        <Header />\n        <Navigation pathway={pathway} />\n      </div>\n\n      <div className={styles.display}>\n        <MuiThemeProvider theme={theme}>\n          <Sidebar pathway={pathway} headerElement={headerElement} currentNode={currentNode} />\n        </MuiThemeProvider>\n\n        <div ref={graphContainerElement} className={styles.graph}>\n          {buildCriteriaNodeId !== '' && (\n            <div className={styles.graphHeader}>\n              <div className={styles.graphHeaderText}>\n                <span>Criteria Builder</span>\n              </div>\n              <IconButton\n                className={`${styles.toggleButton}-${showCriteriaBuilder ? 'on' : 'off'}`}\n                onClick={toggleShowCriteria}\n              >\n                <FontAwesomeIcon className={styles.toggleIcon} icon={faProjectDiagram} />\n              </IconButton>\n            </div>\n          )}\n          {buildCriteriaNodeId !== '' && showCriteriaBuilder ? (\n            // Empty section for authoring tool\n            <div />\n          ) : (\n            <Graph pathway={pathway} expandCurrentNode={true} currentNode={currentNode} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default memo(Builder);\n","import React, { FC, memo, useMemo } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport Builder from 'components/Builder';\nimport { usePathwayContext } from 'components/PathwayProvider';\n\nconst BuilderRoute: FC = () => {\n  const { id, nodeId } = useParams();\n  const { pathways } = usePathwayContext();\n  const pathwayId = decodeURIComponent(id);\n  const pathwayIndex = useMemo(() => pathways.findIndex(pathway => pathway.id === pathwayId), [\n    pathwayId,\n    pathways\n  ]);\n  const pathway = pathways[pathwayIndex];\n  const currentNode = pathway?.states?.[decodeURIComponent(nodeId)];\n\n  if (pathway == null) return null;\n  if (currentNode == null) return <Redirect to={`/builder/${id}/node/Start`} />;\n\n  return <Builder pathway={pathway} currentNode={currentNode} />;\n};\n\nexport default memo(BuilderRoute);\n","import React, { FC, createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextInterface {\n  user: string | null;\n  setUser: Function;\n}\n\nexport const UserContext = createContext<UserContextInterface>({} as UserContextInterface);\n\ninterface UserProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProvider: FC<UserProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(null);\n  return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = (): UserContextInterface => useContext(UserContext);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    label: {\n      padding: `0.2em 2em`,\n      textTransform: 'none',\n      fontSize: '1.2em',\n      fontWeight: 100\n    }\n  }),\n  { name: 'Tabs' }\n);\n","import React, { FC, memo, ReactNode } from 'react';\nimport { Tab as ReactTab, TabList, TabPanel, Tabs as ReactTabs } from 'react-tabs';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport shortid from 'shortid';\n\ninterface Tab {\n  label: string;\n  component: ReactNode;\n}\n\ninterface TabsProp {\n  tabs: Tab[];\n}\n\nconst Tabs: FC<TabsProp> = ({ tabs }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.root}>\n      <ReactTabs>\n        <TabList>\n          {tabs.map(tab => (\n            <ReactTab key={shortid.generate()}>\n              <Button classes={{ label: styles.label }}>{tab.label}</Button>\n            </ReactTab>\n          ))}\n        </TabList>\n\n        {tabs.map(tab => (\n          <TabPanel key={shortid.generate()}>{tab.component}</TabPanel>\n        ))}\n      </ReactTabs>\n    </div>\n  );\n};\n\nexport default memo(Tabs);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className={styles.root}>\n      <FontAwesomeIcon icon={faSpinner} className={styles.root} size=\"4x\" spin />\n    </div>\n  );\n};\n\nexport default memo(Loading);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    createPathwayButton: {\n      alignSelf: 'flex-end'\n    },\n    pathwayList: {\n      marginTop: '2em'\n    },\n    pathwaysListButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    }\n  }),\n  { name: 'PathwaysList' }\n);\n","import React, { FC, useCallback, useRef, memo, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport shortid from 'shortid';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport useStyles from './styles';\nimport { createNewPathway } from 'utils/builder';\nimport { Pathway } from 'pathways-model';\n\ninterface PathwayModalProps {\n  open: boolean;\n  onClose: () => void;\n  editPathway?: Pathway;\n}\n\nconst PathwayModal: FC<PathwayModalProps> = ({ open, onClose, editPathway }) => {\n  const createNewPathwayMeta = !editPathway;\n  const styles = useStyles();\n  const history = useHistory();\n  const pathwayNameRef = useRef<HTMLInputElement>(null);\n  const pathwayDescRef = useRef<HTMLInputElement>(null);\n  const { addPathway, updatePathway } = usePathwayContext();\n\n  const closeModal = useCallback(\n    (pathwayId: string): void => {\n      history.push(`/builder/${encodeURIComponent(pathwayId)}/node/Start`);\n      onClose();\n    },\n    [history, onClose]\n  );\n\n  const handleCreateNewPathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      const pathwayId = shortid.generate();\n      const name: string = pathwayNameRef.current?.value ?? '';\n      const description: string = pathwayDescRef.current?.value ?? '';\n      addPathway(createNewPathway(name, description, pathwayId));\n      closeModal(pathwayId);\n    },\n    [addPathway, closeModal]\n  );\n\n  const handleUpdatePathway = useCallback(\n    (event: FormEvent<HTMLFormElement>): void => {\n      event.preventDefault();\n      if (editPathway) {\n        if (pathwayNameRef.current?.value) editPathway.name = pathwayNameRef.current?.value;\n        editPathway.description = pathwayDescRef.current?.value;\n        updatePathway(editPathway);\n        onClose();\n      }\n    },\n    [updatePathway, editPathway, onClose]\n  );\n\n  let name, description;\n  if (editPathway) {\n    name = editPathway.name;\n    const metaDescription = editPathway.description;\n    if (metaDescription && metaDescription !== '') description = metaDescription;\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"create-pathway\" fullWidth maxWidth=\"md\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={createNewPathwayMeta ? handleCreateNewPathway : handleUpdatePathway}>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            autoFocus\n            label=\"Pathway Name\"\n            fullWidth\n            required={createNewPathwayMeta}\n            inputRef={pathwayNameRef}\n            defaultValue={createNewPathwayMeta ? undefined : name}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            label=\"Pathway Description\"\n            fullWidth\n            inputRef={pathwayDescRef}\n            defaultValue={createNewPathwayMeta ? undefined : description}\n            multiline\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={createNewPathwayMeta && <FontAwesomeIcon icon={faPlus} />}\n            type=\"submit\"\n          >\n            {createNewPathwayMeta ? 'Create' : 'Save'}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(PathwayModal);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faFileDownload, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Link\n} from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport { downloadPathway } from 'utils/builder';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\nimport { Pathway } from 'pathways-model';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst PathwaysTable: FC = () => {\n  const styles = useStyles();\n  const { pathways, deletePathway } = usePathwayContext();\n  const [open, setOpen] = useState(false);\n  const [editablePathway, setEditablePathway] = useState<Pathway>();\n\n  const openEditPathwayModal = useCallback((pathway: Pathway): void => {\n    setOpen(true);\n    setEditablePathway(pathway);\n  }, []);\n\n  const closeEditPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div>\n      <TableContainer className={styles.pathwayList}>\n        <Table aria-label=\"pathway list\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Pathway Name</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Last Updated</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {pathways.map(pathway => (\n              <TableRow key={pathway.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link\n                    component={RouterLink}\n                    to={`/builder/${encodeURIComponent(pathway.id)}`}\n                    color=\"primary\"\n                    underline=\"none\"\n                  >\n                    {pathway.name}\n                  </Link>\n                </TableCell>\n\n                <TableCell>draft</TableCell>\n                <TableCell>2 days ago</TableCell>\n\n                <TableCell align=\"right\">\n                  <Button\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faEdit} />}\n                    onClick={(): void => openEditPathwayModal(pathway)}\n                  >\n                    Edit Info\n                  </Button>\n                  <Button\n                    className={styles.pathwaysListButton}\n                    color=\"primary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faFileDownload} />}\n                    onClick={(): void => downloadPathway(pathway)}\n                  >\n                    Export\n                  </Button>\n                  <Button\n                    color=\"secondary\"\n                    size=\"small\"\n                    startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                    onClick={(): void => deletePathway(pathway.id)}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <PathwayModal open={open} onClose={closeEditPathwayModal} editPathway={editablePathway} />\n    </div>\n  );\n};\n\nexport default memo(PathwaysTable);\n","import React, { FC, useCallback, useState, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport Loading from 'components/elements/Loading';\nimport PathwaysTable from './PathwaysTable';\nimport PathwayModal from './PathwayModal';\n\nimport useStyles from './styles';\n\nconst PathwaysList: FC = () => {\n  const styles = useStyles();\n  const [open, setOpen] = useState(false);\n  const { status } = usePathwayContext();\n\n  const openNewPathwayModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeNewPathwayModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Button\n        className={styles.createPathwayButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<FontAwesomeIcon icon={faPlus} />}\n        onClick={openNewPathwayModal}\n      >\n        Create Pathway\n      </Button>\n\n      <PathwayModal open={open} onClose={closeNewPathwayModal} />\n      {status === 'loading' ? <Loading /> : <PathwaysTable />}\n    </div>\n  );\n};\n\nexport default memo(PathwaysList);\n","import { makeStyles, Theme as AugmentedTheme } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  (theme: AugmentedTheme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.variables.spacing.globalPadding\n    },\n    buttonRow: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    buildCriteriaButton: {\n      alignSelf: 'flex-end',\n      marginLeft: '20px'\n    },\n    criteriaList: {\n      marginTop: '2em'\n    },\n    editButton: {\n      marginRight: '1em'\n    },\n    dialogCloseButton: {\n      float: 'right',\n      width: '45px'\n    },\n    input: {\n      display: 'none'\n    },\n    chooseFileInput: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    inputButton: {\n      whiteSpace: 'nowrap',\n      marginRight: '1em'\n    },\n    fileName: {\n      fontStyle: 'italic'\n    }\n  }),\n  { name: 'CriteriaList' }\n);\n","import React, { FC, memo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport moment from 'moment';\n\nimport useStyles from './styles';\nimport { useCriteriaContext } from 'components/CriteriaProvider';\n\nconst CriteriaTable: FC = () => {\n  const styles = useStyles();\n  const { criteria, deleteCriteria } = useCriteriaContext();\n\n  const renderDate = (datetime: number): string => {\n    return moment(datetime).fromNow();\n  };\n\n  return (\n    <TableContainer className={styles.criteriaList}>\n      <Table aria-label=\"criteria list\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Criteria Name</TableCell>\n            <TableCell>Version</TableCell>\n            <TableCell>Added</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {criteria.map(c => (\n            <TableRow key={c.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {c.label}\n              </TableCell>\n              <TableCell>{c.version}</TableCell>\n              <TableCell>{renderDate(c.modified)}</TableCell>\n\n              <TableCell align=\"right\">\n                <Button\n                  className={styles.editButton}\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faEdit} />}\n                >\n                  Edit\n                </Button>\n\n                <Button\n                  color=\"secondary\"\n                  size=\"small\"\n                  startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\n                  onClick={(): void => deleteCriteria(c.id)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default memo(CriteriaTable);\n","import React, { FC, useCallback, useRef, memo, FormEvent, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileImport, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input,\n  IconButton\n} from '@material-ui/core';\n\nimport { useCriteriaContext } from 'components/CriteriaProvider';\nimport useStyles from './styles';\n\ninterface ImportCriteriaModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst ImportCriteriaModal: FC<ImportCriteriaModalProps> = ({ open, onClose }) => {\n  const styles = useStyles();\n  const [fileName, setFileName] = useState<string>('');\n  const importFileRef = useRef<HTMLInputElement>(null);\n\n  const { addCriteria } = useCriteriaContext();\n\n  const selectFile = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const files = importFileRef?.current?.files;\n      if (files?.length) addCriteria(files[0]);\n      onClose();\n      setFileName('');\n    },\n    [addCriteria, onClose]\n  );\n\n  const handleChooseFile = useCallback(() => {\n    if (importFileRef?.current?.files?.[0]) setFileName(importFileRef.current.files[0].name);\n  }, [importFileRef]);\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"import-criteria\" fullWidth maxWidth=\"sm\">\n      <DialogTitle disableTypography>\n        <IconButton aria-label=\"close\" onClick={onClose} className={styles.dialogCloseButton}>\n          <FontAwesomeIcon icon={faTimes} />\n        </IconButton>\n      </DialogTitle>\n\n      <form onSubmit={selectFile}>\n        <DialogContent>\n          <div className={styles.chooseFileInput}>\n            <Input\n              id=\"choose-file-input\"\n              className={styles.input}\n              inputRef={importFileRef}\n              type=\"file\"\n              inputProps={{ accept: '.json' }}\n              onChange={handleChooseFile}\n            />\n\n            <label htmlFor=\"choose-file-input\">\n              <Button\n                className={styles.inputButton}\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\"\n              >\n                Choose File\n              </Button>\n            </label>\n\n            <div className={styles.fileName}>\n              {fileName ? <span>{fileName}</span> : <span>Choose ELM file to import.</span>}\n            </div>\n          </div>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FontAwesomeIcon icon={faFileImport} />}\n            type=\"submit\"\n          >\n            Import\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default memo(ImportCriteriaModal);\n","import React, { FC, memo, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools, faFileImport } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from '@material-ui/core';\n\nimport { usePathwayContext } from 'components/PathwayProvider';\nimport Loading from 'components/elements/Loading';\nimport CriteriaTable from './CriteriaTable';\nimport ImportCriteriaModal from './ImportCriteriaModal';\n\nimport useStyles from './styles';\n\nconst CriteriaList: FC = () => {\n  const styles = useStyles();\n  const { status } = usePathwayContext();\n\n  const [open, setOpen] = useState<boolean>(false);\n  const openImportModal = useCallback((): void => {\n    setOpen(true);\n  }, []);\n\n  const closeImportModal = useCallback((): void => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.buttonRow}>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faFileImport} />}\n          onClick={openImportModal}\n        >\n          Import Library\n        </Button>\n        <Button\n          className={styles.buildCriteriaButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FontAwesomeIcon icon={faTools} />}\n        >\n          Build Criteria\n        </Button>\n      </div>\n\n      <ImportCriteriaModal open={open} onClose={closeImportModal} />\n\n      {status === 'loading' ? <Loading /> : <CriteriaTable />}\n    </div>\n  );\n};\n\nexport default memo(CriteriaList);\n","import React, { FC, memo } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\n\nimport BuilderRoute from './BuilderRoute';\nimport ThemeProvider from './ThemeProvider';\nimport { PathwayProvider } from './PathwayProvider';\nimport { UserProvider } from './UserProvider';\nimport { CriteriaProvider } from './CriteriaProvider';\nimport Tabs from './Tabs';\nimport PathwaysList from './PathwaysList';\nimport CriteriaList from './CriteriaList';\n\nconst App: FC = () => {\n  return (\n    <ThemeProvider theme=\"light\">\n      <UserProvider>\n        <PathwayProvider>\n          <CriteriaProvider>\n            <Router>\n              <Switch>\n                <Route path=\"/builder/:id/node/:nodeId\">\n                  <BuilderRoute />\n                </Route>\n                <Route path=\"/builder/:id\">\n                  <BuilderRoute />\n                </Route>\n                <Route path=\"/\">\n                  <Header />\n                  <Tabs\n                    tabs={[\n                      { label: 'Pathway', component: <PathwaysList /> },\n                      { label: 'Criteria', component: <CriteriaList /> }\n                    ]}\n                  />\n                </Route>\n              </Switch>\n            </Router>\n          </CriteriaProvider>\n        </PathwayProvider>\n      </UserProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default memo(App);\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","export class ConfigManager {\n  constructor(config = {}) {\n    this.config = global.CONFIG ? { ...global.CONFIG, ...config } : { ...config };\n  }\n\n  get(name, defaultValue) {\n    const parts = name.split('.');\n    let context = this.config;\n    let value = null;\n    for (const i in parts) {\n      const part = parts[i];\n      value = context[part];\n      context = value;\n    }\n    return value || defaultValue;\n  }\n\n  add(conf) {\n    if (conf) {\n      this.config = {\n        ...this.config,\n        ...conf\n      };\n    }\n  }\n}\n\nconst config = new ConfigManager();\nexport default config;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"icon\":\"Node_icon__354W4\",\"actionable\":\"Node_actionable__bHXKd\",\"expandedNode\":\"Node_expandedNode__1ar-A\",\"childNotActionable\":\"Node_childNotActionable__1bfBq\",\"childActionable\":\"Node_childActionable__SwUjD\"};"],"sourceRoot":""}